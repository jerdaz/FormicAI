module.exports = {"version":3,"file":"main.js","sources":["../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/binary-search.js","../node_modules/source-map/lib/quick-sort.js","../node_modules/source-map/lib/source-map-consumer.js","../node_modules/source-map/source-map.js","../src/utils/ErrorMapper.ts","../node_modules/screeps-profiler/screeps-profiler.js","../src/structure.ts","../src/logger.ts","../src/pos.ts","../src/roomobject.ts","../src/Traveler.ts","../src/roomobject.ts","../src/structure.ts","../src/Traveler.ts","../src/logger.ts","../src/myflags.js","../src/creep.js","../src/tower.js","../src/consts.ts","../src/consts.ts","../src/spawn.js","../src/link.ts","../src/terminal.ts","../src/room.ts","../src/atlas.ts","../src/base.ts","../src/main.ts"],"sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nexports.GREATEST_LOWER_BOUND = 1;\nexports.LEAST_UPPER_BOUND = 2;\n\n/**\n * Recursive implementation of binary search.\n *\n * @param aLow Indices here and lower do not contain the needle.\n * @param aHigh Indices here and higher do not contain the needle.\n * @param aNeedle The element being searched for.\n * @param aHaystack The non-empty array being searched.\n * @param aCompare Function which takes two elements and returns -1, 0, or 1.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n */\nfunction recursiveSearch(aLow, aHigh, aNeedle, aHaystack, aCompare, aBias) {\n  // This function terminates when one of the following is true:\n  //\n  //   1. We find the exact element we are looking for.\n  //\n  //   2. We did not find the exact element, but we can return the index of\n  //      the next-closest element.\n  //\n  //   3. We did not find the exact element, and there is no next-closest\n  //      element than the one we are searching for, so we return -1.\n  var mid = Math.floor((aHigh - aLow) / 2) + aLow;\n  var cmp = aCompare(aNeedle, aHaystack[mid], true);\n  if (cmp === 0) {\n    // Found the element we are looking for.\n    return mid;\n  }\n  else if (cmp > 0) {\n    // Our needle is greater than aHaystack[mid].\n    if (aHigh - mid > 1) {\n      // The element is in the upper half.\n      return recursiveSearch(mid, aHigh, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // The exact needle element was not found in this haystack. Determine if\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return aHigh < aHaystack.length ? aHigh : -1;\n    } else {\n      return mid;\n    }\n  }\n  else {\n    // Our needle is less than aHaystack[mid].\n    if (mid - aLow > 1) {\n      // The element is in the lower half.\n      return recursiveSearch(aLow, mid, aNeedle, aHaystack, aCompare, aBias);\n    }\n\n    // we are in termination case (3) or (2) and return the appropriate thing.\n    if (aBias == exports.LEAST_UPPER_BOUND) {\n      return mid;\n    } else {\n      return aLow < 0 ? -1 : aLow;\n    }\n  }\n}\n\n/**\n * This is an implementation of binary search which will always try and return\n * the index of the closest element if there is no exact hit. This is because\n * mappings between original and generated line/col pairs are single points,\n * and there is an implicit region between each of them, so a miss just means\n * that you aren't on the very start of a region.\n *\n * @param aNeedle The element you are looking for.\n * @param aHaystack The array that is being searched.\n * @param aCompare A function which takes the needle and an element in the\n *     array and returns -1, 0, or 1 depending on whether the needle is less\n *     than, equal to, or greater than the element, respectively.\n * @param aBias Either 'binarySearch.GREATEST_LOWER_BOUND' or\n *     'binarySearch.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'binarySearch.GREATEST_LOWER_BOUND'.\n */\nexports.search = function search(aNeedle, aHaystack, aCompare, aBias) {\n  if (aHaystack.length === 0) {\n    return -1;\n  }\n\n  var index = recursiveSearch(-1, aHaystack.length, aNeedle, aHaystack,\n                              aCompare, aBias || exports.GREATEST_LOWER_BOUND);\n  if (index < 0) {\n    return -1;\n  }\n\n  // We have found either the exact element, or the next-closest element than\n  // the one we are searching for. However, there may be more than one such\n  // element. Make sure we always return the smallest of these.\n  while (index - 1 >= 0) {\n    if (aCompare(aHaystack[index], aHaystack[index - 1], true) !== 0) {\n      break;\n    }\n    --index;\n  }\n\n  return index;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n// It turns out that some (most?) JavaScript engines don't self-host\n// `Array.prototype.sort`. This makes sense because C++ will likely remain\n// faster than JS when doing raw CPU-intensive sorting. However, when using a\n// custom comparator function, calling back and forth between the VM's C++ and\n// JIT'd JS is rather slow *and* loses JIT type information, resulting in\n// worse generated code for the comparator function than would be optimal. In\n// fact, when sorting with a comparator, these costs outweigh the benefits of\n// sorting in C++. By using our own JS-implemented Quick Sort (below), we get\n// a ~3500ms mean speed-up in `bench/bench.html`.\n\n/**\n * Swap the elements indexed by `x` and `y` in the array `ary`.\n *\n * @param {Array} ary\n *        The array.\n * @param {Number} x\n *        The index of the first item.\n * @param {Number} y\n *        The index of the second item.\n */\nfunction swap(ary, x, y) {\n  var temp = ary[x];\n  ary[x] = ary[y];\n  ary[y] = temp;\n}\n\n/**\n * Returns a random integer within the range `low .. high` inclusive.\n *\n * @param {Number} low\n *        The lower bound on the range.\n * @param {Number} high\n *        The upper bound on the range.\n */\nfunction randomIntInRange(low, high) {\n  return Math.round(low + (Math.random() * (high - low)));\n}\n\n/**\n * The Quick Sort algorithm.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n * @param {Number} p\n *        Start index of the array\n * @param {Number} r\n *        End index of the array\n */\nfunction doQuickSort(ary, comparator, p, r) {\n  // If our lower bound is less than our upper bound, we (1) partition the\n  // array into two pieces and (2) recurse on each half. If it is not, this is\n  // the empty array and our base case.\n\n  if (p < r) {\n    // (1) Partitioning.\n    //\n    // The partitioning chooses a pivot between `p` and `r` and moves all\n    // elements that are less than or equal to the pivot to the before it, and\n    // all the elements that are greater than it after it. The effect is that\n    // once partition is done, the pivot is in the exact place it will be when\n    // the array is put in sorted order, and it will not need to be moved\n    // again. This runs in O(n) time.\n\n    // Always choose a random pivot so that an input array which is reverse\n    // sorted does not cause O(n^2) running time.\n    var pivotIndex = randomIntInRange(p, r);\n    var i = p - 1;\n\n    swap(ary, pivotIndex, r);\n    var pivot = ary[r];\n\n    // Immediately after `j` is incremented in this loop, the following hold\n    // true:\n    //\n    //   * Every element in `ary[p .. i]` is less than or equal to the pivot.\n    //\n    //   * Every element in `ary[i+1 .. j-1]` is greater than the pivot.\n    for (var j = p; j < r; j++) {\n      if (comparator(ary[j], pivot) <= 0) {\n        i += 1;\n        swap(ary, i, j);\n      }\n    }\n\n    swap(ary, i + 1, j);\n    var q = i + 1;\n\n    // (2) Recurse on each half.\n\n    doQuickSort(ary, comparator, p, q - 1);\n    doQuickSort(ary, comparator, q + 1, r);\n  }\n}\n\n/**\n * Sort the given array in-place with the given comparator function.\n *\n * @param {Array} ary\n *        An array to sort.\n * @param {function} comparator\n *        Function to use to compare two items.\n */\nexports.quickSort = function (ary, comparator) {\n  doQuickSort(ary, comparator, 0, ary.length - 1);\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar binarySearch = require('./binary-search');\nvar ArraySet = require('./array-set').ArraySet;\nvar base64VLQ = require('./base64-vlq');\nvar quickSort = require('./quick-sort').quickSort;\n\nfunction SourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  return sourceMap.sections != null\n    ? new IndexedSourceMapConsumer(sourceMap, aSourceMapURL)\n    : new BasicSourceMapConsumer(sourceMap, aSourceMapURL);\n}\n\nSourceMapConsumer.fromSourceMap = function(aSourceMap, aSourceMapURL) {\n  return BasicSourceMapConsumer.fromSourceMap(aSourceMap, aSourceMapURL);\n}\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nSourceMapConsumer.prototype._version = 3;\n\n// `__generatedMappings` and `__originalMappings` are arrays that hold the\n// parsed mapping coordinates from the source map's \"mappings\" attribute. They\n// are lazily instantiated, accessed via the `_generatedMappings` and\n// `_originalMappings` getters respectively, and we only parse the mappings\n// and create these arrays once queried for a source location. We jump through\n// these hoops because there can be many thousands of mappings, and parsing\n// them is expensive, so we only want to do it if we must.\n//\n// Each object in the arrays is of the form:\n//\n//     {\n//       generatedLine: The line number in the generated code,\n//       generatedColumn: The column number in the generated code,\n//       source: The path to the original source file that generated this\n//               chunk of code,\n//       originalLine: The line number in the original source that\n//                     corresponds to this chunk of generated code,\n//       originalColumn: The column number in the original source that\n//                       corresponds to this chunk of generated code,\n//       name: The name of the original symbol which generated this chunk of\n//             code.\n//     }\n//\n// All properties except for `generatedLine` and `generatedColumn` can be\n// `null`.\n//\n// `_generatedMappings` is ordered by the generated positions.\n//\n// `_originalMappings` is ordered by the original positions.\n\nSourceMapConsumer.prototype.__generatedMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_generatedMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__generatedMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__generatedMappings;\n  }\n});\n\nSourceMapConsumer.prototype.__originalMappings = null;\nObject.defineProperty(SourceMapConsumer.prototype, '_originalMappings', {\n  configurable: true,\n  enumerable: true,\n  get: function () {\n    if (!this.__originalMappings) {\n      this._parseMappings(this._mappings, this.sourceRoot);\n    }\n\n    return this.__originalMappings;\n  }\n});\n\nSourceMapConsumer.prototype._charIsMappingSeparator =\n  function SourceMapConsumer_charIsMappingSeparator(aStr, index) {\n    var c = aStr.charAt(index);\n    return c === \";\" || c === \",\";\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    throw new Error(\"Subclasses must implement _parseMappings\");\n  };\n\nSourceMapConsumer.GENERATED_ORDER = 1;\nSourceMapConsumer.ORIGINAL_ORDER = 2;\n\nSourceMapConsumer.GREATEST_LOWER_BOUND = 1;\nSourceMapConsumer.LEAST_UPPER_BOUND = 2;\n\n/**\n * Iterate over each mapping between an original source/line/column and a\n * generated line/column in this source map.\n *\n * @param Function aCallback\n *        The function that is called with each mapping.\n * @param Object aContext\n *        Optional. If specified, this object will be the value of `this` every\n *        time that `aCallback` is called.\n * @param aOrder\n *        Either `SourceMapConsumer.GENERATED_ORDER` or\n *        `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to\n *        iterate over the mappings sorted by the generated file's line/column\n *        order or the original's source/line/column order, respectively. Defaults to\n *        `SourceMapConsumer.GENERATED_ORDER`.\n */\nSourceMapConsumer.prototype.eachMapping =\n  function SourceMapConsumer_eachMapping(aCallback, aContext, aOrder) {\n    var context = aContext || null;\n    var order = aOrder || SourceMapConsumer.GENERATED_ORDER;\n\n    var mappings;\n    switch (order) {\n    case SourceMapConsumer.GENERATED_ORDER:\n      mappings = this._generatedMappings;\n      break;\n    case SourceMapConsumer.ORIGINAL_ORDER:\n      mappings = this._originalMappings;\n      break;\n    default:\n      throw new Error(\"Unknown order of iteration.\");\n    }\n\n    var sourceRoot = this.sourceRoot;\n    mappings.map(function (mapping) {\n      var source = mapping.source === null ? null : this._sources.at(mapping.source);\n      source = util.computeSourceURL(sourceRoot, source, this._sourceMapURL);\n      return {\n        source: source,\n        generatedLine: mapping.generatedLine,\n        generatedColumn: mapping.generatedColumn,\n        originalLine: mapping.originalLine,\n        originalColumn: mapping.originalColumn,\n        name: mapping.name === null ? null : this._names.at(mapping.name)\n      };\n    }, this).forEach(aCallback, context);\n  };\n\n/**\n * Returns all generated line and column information for the original source,\n * line, and column provided. If no column is provided, returns all mappings\n * corresponding to a either the line we are searching for or the next\n * closest line that has any mappings. Otherwise, returns all mappings\n * corresponding to the given line and either the column we are searching for\n * or the next closest column that has any offsets.\n *\n * The only argument is an object with the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number is 1-based.\n *   - column: Optional. the column number in the original source.\n *    The column number is 0-based.\n *\n * and an array of objects is returned, each with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *    line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *    The column number is 0-based.\n */\nSourceMapConsumer.prototype.allGeneratedPositionsFor =\n  function SourceMapConsumer_allGeneratedPositionsFor(aArgs) {\n    var line = util.getArg(aArgs, 'line');\n\n    // When there is no exact match, BasicSourceMapConsumer.prototype._findMapping\n    // returns the index of the closest mapping less than the needle. By\n    // setting needle.originalColumn to 0, we thus find the last mapping for\n    // the given line, provided such a mapping exists.\n    var needle = {\n      source: util.getArg(aArgs, 'source'),\n      originalLine: line,\n      originalColumn: util.getArg(aArgs, 'column', 0)\n    };\n\n    needle.source = this._findSourceIndex(needle.source);\n    if (needle.source < 0) {\n      return [];\n    }\n\n    var mappings = [];\n\n    var index = this._findMapping(needle,\n                                  this._originalMappings,\n                                  \"originalLine\",\n                                  \"originalColumn\",\n                                  util.compareByOriginalPositions,\n                                  binarySearch.LEAST_UPPER_BOUND);\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (aArgs.column === undefined) {\n        var originalLine = mapping.originalLine;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we found. Since\n        // mappings are sorted, this is guaranteed to find all mappings for\n        // the line we found.\n        while (mapping && mapping.originalLine === originalLine) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      } else {\n        var originalColumn = mapping.originalColumn;\n\n        // Iterate until either we run out of mappings, or we run into\n        // a mapping for a different line than the one we were searching for.\n        // Since mappings are sorted, this is guaranteed to find all mappings for\n        // the line we are searching for.\n        while (mapping &&\n               mapping.originalLine === line &&\n               mapping.originalColumn == originalColumn) {\n          mappings.push({\n            line: util.getArg(mapping, 'generatedLine', null),\n            column: util.getArg(mapping, 'generatedColumn', null),\n            lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n          });\n\n          mapping = this._originalMappings[++index];\n        }\n      }\n    }\n\n    return mappings;\n  };\n\nexports.SourceMapConsumer = SourceMapConsumer;\n\n/**\n * A BasicSourceMapConsumer instance represents a parsed source map which we can\n * query for information about the original file positions by giving it a file\n * position in the generated source.\n *\n * The first parameter is the raw source map (either as a JSON string, or\n * already parsed to an object). According to the spec, source maps have the\n * following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - sources: An array of URLs to the original source files.\n *   - names: An array of identifiers which can be referrenced by individual mappings.\n *   - sourceRoot: Optional. The URL root from which all sources are relative.\n *   - sourcesContent: Optional. An array of contents of the original source files.\n *   - mappings: A string of base64 VLQs which contain the actual mappings.\n *   - file: Optional. The generated file this source map is associated with.\n *\n * Here is an example source map, taken from the source map spec[0]:\n *\n *     {\n *       version : 3,\n *       file: \"out.js\",\n *       sourceRoot : \"\",\n *       sources: [\"foo.js\", \"bar.js\"],\n *       names: [\"src\", \"maps\", \"are\", \"fun\"],\n *       mappings: \"AA,AB;;ABCDE;\"\n *     }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit?pli=1#\n */\nfunction BasicSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sources = util.getArg(sourceMap, 'sources');\n  // Sass 3.3 leaves out the 'names' array, so we deviate from the spec (which\n  // requires the array) to play nice here.\n  var names = util.getArg(sourceMap, 'names', []);\n  var sourceRoot = util.getArg(sourceMap, 'sourceRoot', null);\n  var sourcesContent = util.getArg(sourceMap, 'sourcesContent', null);\n  var mappings = util.getArg(sourceMap, 'mappings');\n  var file = util.getArg(sourceMap, 'file', null);\n\n  // Once again, Sass deviates from the spec and supplies the version as a\n  // string rather than a number, so we use loose equality checking here.\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  if (sourceRoot) {\n    sourceRoot = util.normalize(sourceRoot);\n  }\n\n  sources = sources\n    .map(String)\n    // Some source maps produce relative source paths like \"./foo.js\" instead of\n    // \"foo.js\".  Normalize these first so that future comparisons will succeed.\n    // See bugzil.la/1090768.\n    .map(util.normalize)\n    // Always ensure that absolute sources are internally stored relative to\n    // the source root, if the source root is absolute. Not doing this would\n    // be particularly problematic when the source root is a prefix of the\n    // source (valid, but why??). See github issue #199 and bugzil.la/1188982.\n    .map(function (source) {\n      return sourceRoot && util.isAbsolute(sourceRoot) && util.isAbsolute(source)\n        ? util.relative(sourceRoot, source)\n        : source;\n    });\n\n  // Pass `true` below to allow duplicate names and sources. While source maps\n  // are intended to be compressed and deduplicated, the TypeScript compiler\n  // sometimes generates source maps with duplicates in them. See Github issue\n  // #72 and bugzil.la/889492.\n  this._names = ArraySet.fromArray(names.map(String), true);\n  this._sources = ArraySet.fromArray(sources, true);\n\n  this._absoluteSources = this._sources.toArray().map(function (s) {\n    return util.computeSourceURL(sourceRoot, s, aSourceMapURL);\n  });\n\n  this.sourceRoot = sourceRoot;\n  this.sourcesContent = sourcesContent;\n  this._mappings = mappings;\n  this._sourceMapURL = aSourceMapURL;\n  this.file = file;\n}\n\nBasicSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nBasicSourceMapConsumer.prototype.consumer = SourceMapConsumer;\n\n/**\n * Utility function to find the index of a source.  Returns -1 if not\n * found.\n */\nBasicSourceMapConsumer.prototype._findSourceIndex = function(aSource) {\n  var relativeSource = aSource;\n  if (this.sourceRoot != null) {\n    relativeSource = util.relative(this.sourceRoot, relativeSource);\n  }\n\n  if (this._sources.has(relativeSource)) {\n    return this._sources.indexOf(relativeSource);\n  }\n\n  // Maybe aSource is an absolute URL as returned by |sources|.  In\n  // this case we can't simply undo the transform.\n  var i;\n  for (i = 0; i < this._absoluteSources.length; ++i) {\n    if (this._absoluteSources[i] == aSource) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n\n/**\n * Create a BasicSourceMapConsumer from a SourceMapGenerator.\n *\n * @param SourceMapGenerator aSourceMap\n *        The source map that will be consumed.\n * @param String aSourceMapURL\n *        The URL at which the source map can be found (optional)\n * @returns BasicSourceMapConsumer\n */\nBasicSourceMapConsumer.fromSourceMap =\n  function SourceMapConsumer_fromSourceMap(aSourceMap, aSourceMapURL) {\n    var smc = Object.create(BasicSourceMapConsumer.prototype);\n\n    var names = smc._names = ArraySet.fromArray(aSourceMap._names.toArray(), true);\n    var sources = smc._sources = ArraySet.fromArray(aSourceMap._sources.toArray(), true);\n    smc.sourceRoot = aSourceMap._sourceRoot;\n    smc.sourcesContent = aSourceMap._generateSourcesContent(smc._sources.toArray(),\n                                                            smc.sourceRoot);\n    smc.file = aSourceMap._file;\n    smc._sourceMapURL = aSourceMapURL;\n    smc._absoluteSources = smc._sources.toArray().map(function (s) {\n      return util.computeSourceURL(smc.sourceRoot, s, aSourceMapURL);\n    });\n\n    // Because we are modifying the entries (by converting string sources and\n    // names to indices into the sources and names ArraySets), we have to make\n    // a copy of the entry or else bad things happen. Shared mutable state\n    // strikes again! See github issue #191.\n\n    var generatedMappings = aSourceMap._mappings.toArray().slice();\n    var destGeneratedMappings = smc.__generatedMappings = [];\n    var destOriginalMappings = smc.__originalMappings = [];\n\n    for (var i = 0, length = generatedMappings.length; i < length; i++) {\n      var srcMapping = generatedMappings[i];\n      var destMapping = new Mapping;\n      destMapping.generatedLine = srcMapping.generatedLine;\n      destMapping.generatedColumn = srcMapping.generatedColumn;\n\n      if (srcMapping.source) {\n        destMapping.source = sources.indexOf(srcMapping.source);\n        destMapping.originalLine = srcMapping.originalLine;\n        destMapping.originalColumn = srcMapping.originalColumn;\n\n        if (srcMapping.name) {\n          destMapping.name = names.indexOf(srcMapping.name);\n        }\n\n        destOriginalMappings.push(destMapping);\n      }\n\n      destGeneratedMappings.push(destMapping);\n    }\n\n    quickSort(smc.__originalMappings, util.compareByOriginalPositions);\n\n    return smc;\n  };\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nBasicSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(BasicSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    return this._absoluteSources.slice();\n  }\n});\n\n/**\n * Provide the JIT with a nice shape / hidden class.\n */\nfunction Mapping() {\n  this.generatedLine = 0;\n  this.generatedColumn = 0;\n  this.source = null;\n  this.originalLine = null;\n  this.originalColumn = null;\n  this.name = null;\n}\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nBasicSourceMapConsumer.prototype._parseMappings =\n  function SourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    var generatedLine = 1;\n    var previousGeneratedColumn = 0;\n    var previousOriginalLine = 0;\n    var previousOriginalColumn = 0;\n    var previousSource = 0;\n    var previousName = 0;\n    var length = aStr.length;\n    var index = 0;\n    var cachedSegments = {};\n    var temp = {};\n    var originalMappings = [];\n    var generatedMappings = [];\n    var mapping, str, segment, end, value;\n\n    while (index < length) {\n      if (aStr.charAt(index) === ';') {\n        generatedLine++;\n        index++;\n        previousGeneratedColumn = 0;\n      }\n      else if (aStr.charAt(index) === ',') {\n        index++;\n      }\n      else {\n        mapping = new Mapping();\n        mapping.generatedLine = generatedLine;\n\n        // Because each offset is encoded relative to the previous one,\n        // many segments often have the same encoding. We can exploit this\n        // fact by caching the parsed variable length fields of each segment,\n        // allowing us to avoid a second parse if we encounter the same\n        // segment again.\n        for (end = index; end < length; end++) {\n          if (this._charIsMappingSeparator(aStr, end)) {\n            break;\n          }\n        }\n        str = aStr.slice(index, end);\n\n        segment = cachedSegments[str];\n        if (segment) {\n          index += str.length;\n        } else {\n          segment = [];\n          while (index < end) {\n            base64VLQ.decode(aStr, index, temp);\n            value = temp.value;\n            index = temp.rest;\n            segment.push(value);\n          }\n\n          if (segment.length === 2) {\n            throw new Error('Found a source, but no line and column');\n          }\n\n          if (segment.length === 3) {\n            throw new Error('Found a source and line, but no column');\n          }\n\n          cachedSegments[str] = segment;\n        }\n\n        // Generated column.\n        mapping.generatedColumn = previousGeneratedColumn + segment[0];\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (segment.length > 1) {\n          // Original source.\n          mapping.source = previousSource + segment[1];\n          previousSource += segment[1];\n\n          // Original line.\n          mapping.originalLine = previousOriginalLine + segment[2];\n          previousOriginalLine = mapping.originalLine;\n          // Lines are stored 0-based\n          mapping.originalLine += 1;\n\n          // Original column.\n          mapping.originalColumn = previousOriginalColumn + segment[3];\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (segment.length > 4) {\n            // Original name.\n            mapping.name = previousName + segment[4];\n            previousName += segment[4];\n          }\n        }\n\n        generatedMappings.push(mapping);\n        if (typeof mapping.originalLine === 'number') {\n          originalMappings.push(mapping);\n        }\n      }\n    }\n\n    quickSort(generatedMappings, util.compareByGeneratedPositionsDeflated);\n    this.__generatedMappings = generatedMappings;\n\n    quickSort(originalMappings, util.compareByOriginalPositions);\n    this.__originalMappings = originalMappings;\n  };\n\n/**\n * Find the mapping that best matches the hypothetical \"needle\" mapping that\n * we are searching for in the given \"haystack\" of mappings.\n */\nBasicSourceMapConsumer.prototype._findMapping =\n  function SourceMapConsumer_findMapping(aNeedle, aMappings, aLineName,\n                                         aColumnName, aComparator, aBias) {\n    // To return the position we are searching for, we must first find the\n    // mapping for the given position and then return the opposite position it\n    // points to. Because the mappings are sorted, we can use binary search to\n    // find the best mapping.\n\n    if (aNeedle[aLineName] <= 0) {\n      throw new TypeError('Line must be greater than or equal to 1, got '\n                          + aNeedle[aLineName]);\n    }\n    if (aNeedle[aColumnName] < 0) {\n      throw new TypeError('Column must be greater than or equal to 0, got '\n                          + aNeedle[aColumnName]);\n    }\n\n    return binarySearch.search(aNeedle, aMappings, aComparator, aBias);\n  };\n\n/**\n * Compute the last column for each generated mapping. The last column is\n * inclusive.\n */\nBasicSourceMapConsumer.prototype.computeColumnSpans =\n  function SourceMapConsumer_computeColumnSpans() {\n    for (var index = 0; index < this._generatedMappings.length; ++index) {\n      var mapping = this._generatedMappings[index];\n\n      // Mappings do not contain a field for the last generated columnt. We\n      // can come up with an optimistic estimate, however, by assuming that\n      // mappings are contiguous (i.e. given two consecutive mappings, the\n      // first mapping ends where the second one starts).\n      if (index + 1 < this._generatedMappings.length) {\n        var nextMapping = this._generatedMappings[index + 1];\n\n        if (mapping.generatedLine === nextMapping.generatedLine) {\n          mapping.lastGeneratedColumn = nextMapping.generatedColumn - 1;\n          continue;\n        }\n      }\n\n      // The last mapping for each line spans the entire line.\n      mapping.lastGeneratedColumn = Infinity;\n    }\n  };\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nBasicSourceMapConsumer.prototype.originalPositionFor =\n  function SourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._generatedMappings,\n      \"generatedLine\",\n      \"generatedColumn\",\n      util.compareByGeneratedPositionsDeflated,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._generatedMappings[index];\n\n      if (mapping.generatedLine === needle.generatedLine) {\n        var source = util.getArg(mapping, 'source', null);\n        if (source !== null) {\n          source = this._sources.at(source);\n          source = util.computeSourceURL(this.sourceRoot, source, this._sourceMapURL);\n        }\n        var name = util.getArg(mapping, 'name', null);\n        if (name !== null) {\n          name = this._names.at(name);\n        }\n        return {\n          source: source,\n          line: util.getArg(mapping, 'originalLine', null),\n          column: util.getArg(mapping, 'originalColumn', null),\n          name: name\n        };\n      }\n    }\n\n    return {\n      source: null,\n      line: null,\n      column: null,\n      name: null\n    };\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nBasicSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function BasicSourceMapConsumer_hasContentsOfAllSources() {\n    if (!this.sourcesContent) {\n      return false;\n    }\n    return this.sourcesContent.length >= this._sources.size() &&\n      !this.sourcesContent.some(function (sc) { return sc == null; });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nBasicSourceMapConsumer.prototype.sourceContentFor =\n  function SourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    if (!this.sourcesContent) {\n      return null;\n    }\n\n    var index = this._findSourceIndex(aSource);\n    if (index >= 0) {\n      return this.sourcesContent[index];\n    }\n\n    var relativeSource = aSource;\n    if (this.sourceRoot != null) {\n      relativeSource = util.relative(this.sourceRoot, relativeSource);\n    }\n\n    var url;\n    if (this.sourceRoot != null\n        && (url = util.urlParse(this.sourceRoot))) {\n      // XXX: file:// URIs and absolute paths lead to unexpected behavior for\n      // many users. We can help them out when they expect file:// URIs to\n      // behave like it would if they were running a local HTTP server. See\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=885597.\n      var fileUriAbsPath = relativeSource.replace(/^file:\\/\\//, \"\");\n      if (url.scheme == \"file\"\n          && this._sources.has(fileUriAbsPath)) {\n        return this.sourcesContent[this._sources.indexOf(fileUriAbsPath)]\n      }\n\n      if ((!url.path || url.path == \"/\")\n          && this._sources.has(\"/\" + relativeSource)) {\n        return this.sourcesContent[this._sources.indexOf(\"/\" + relativeSource)];\n      }\n    }\n\n    // This function is used recursively from\n    // IndexedSourceMapConsumer.prototype.sourceContentFor. In that case, we\n    // don't want to throw if we can't find the source - we just want to\n    // return null, so we provide a flag to exit gracefully.\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + relativeSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *   - bias: Either 'SourceMapConsumer.GREATEST_LOWER_BOUND' or\n *     'SourceMapConsumer.LEAST_UPPER_BOUND'. Specifies whether to return the\n *     closest element that is smaller than or greater than the one we are\n *     searching for, respectively, if the exact element cannot be found.\n *     Defaults to 'SourceMapConsumer.GREATEST_LOWER_BOUND'.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nBasicSourceMapConsumer.prototype.generatedPositionFor =\n  function SourceMapConsumer_generatedPositionFor(aArgs) {\n    var source = util.getArg(aArgs, 'source');\n    source = this._findSourceIndex(source);\n    if (source < 0) {\n      return {\n        line: null,\n        column: null,\n        lastColumn: null\n      };\n    }\n\n    var needle = {\n      source: source,\n      originalLine: util.getArg(aArgs, 'line'),\n      originalColumn: util.getArg(aArgs, 'column')\n    };\n\n    var index = this._findMapping(\n      needle,\n      this._originalMappings,\n      \"originalLine\",\n      \"originalColumn\",\n      util.compareByOriginalPositions,\n      util.getArg(aArgs, 'bias', SourceMapConsumer.GREATEST_LOWER_BOUND)\n    );\n\n    if (index >= 0) {\n      var mapping = this._originalMappings[index];\n\n      if (mapping.source === needle.source) {\n        return {\n          line: util.getArg(mapping, 'generatedLine', null),\n          column: util.getArg(mapping, 'generatedColumn', null),\n          lastColumn: util.getArg(mapping, 'lastGeneratedColumn', null)\n        };\n      }\n    }\n\n    return {\n      line: null,\n      column: null,\n      lastColumn: null\n    };\n  };\n\nexports.BasicSourceMapConsumer = BasicSourceMapConsumer;\n\n/**\n * An IndexedSourceMapConsumer instance represents a parsed source map which\n * we can query for information. It differs from BasicSourceMapConsumer in\n * that it takes \"indexed\" source maps (i.e. ones with a \"sections\" field) as\n * input.\n *\n * The first parameter is a raw source map (either as a JSON string, or already\n * parsed to an object). According to the spec for indexed source maps, they\n * have the following attributes:\n *\n *   - version: Which version of the source map spec this map is following.\n *   - file: Optional. The generated file this source map is associated with.\n *   - sections: A list of section definitions.\n *\n * Each value under the \"sections\" field has two fields:\n *   - offset: The offset into the original specified at which this section\n *       begins to apply, defined as an object with a \"line\" and \"column\"\n *       field.\n *   - map: A source map definition. This source map could also be indexed,\n *       but doesn't have to be.\n *\n * Instead of the \"map\" field, it's also possible to have a \"url\" field\n * specifying a URL to retrieve a source map from, but that's currently\n * unsupported.\n *\n * Here's an example source map, taken from the source map spec[0], but\n * modified to omit a section which uses the \"url\" field.\n *\n *  {\n *    version : 3,\n *    file: \"app.js\",\n *    sections: [{\n *      offset: {line:100, column:10},\n *      map: {\n *        version : 3,\n *        file: \"section.js\",\n *        sources: [\"foo.js\", \"bar.js\"],\n *        names: [\"src\", \"maps\", \"are\", \"fun\"],\n *        mappings: \"AAAA,E;;ABCDE;\"\n *      }\n *    }],\n *  }\n *\n * The second parameter, if given, is a string whose value is the URL\n * at which the source map was found.  This URL is used to compute the\n * sources array.\n *\n * [0]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit#heading=h.535es3xeprgt\n */\nfunction IndexedSourceMapConsumer(aSourceMap, aSourceMapURL) {\n  var sourceMap = aSourceMap;\n  if (typeof aSourceMap === 'string') {\n    sourceMap = util.parseSourceMapInput(aSourceMap);\n  }\n\n  var version = util.getArg(sourceMap, 'version');\n  var sections = util.getArg(sourceMap, 'sections');\n\n  if (version != this._version) {\n    throw new Error('Unsupported version: ' + version);\n  }\n\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n\n  var lastOffset = {\n    line: -1,\n    column: 0\n  };\n  this._sections = sections.map(function (s) {\n    if (s.url) {\n      // The url field will require support for asynchronicity.\n      // See https://github.com/mozilla/source-map/issues/16\n      throw new Error('Support for url field in sections not implemented.');\n    }\n    var offset = util.getArg(s, 'offset');\n    var offsetLine = util.getArg(offset, 'line');\n    var offsetColumn = util.getArg(offset, 'column');\n\n    if (offsetLine < lastOffset.line ||\n        (offsetLine === lastOffset.line && offsetColumn < lastOffset.column)) {\n      throw new Error('Section offsets must be ordered and non-overlapping.');\n    }\n    lastOffset = offset;\n\n    return {\n      generatedOffset: {\n        // The offset fields are 0-based, but we use 1-based indices when\n        // encoding/decoding from VLQ.\n        generatedLine: offsetLine + 1,\n        generatedColumn: offsetColumn + 1\n      },\n      consumer: new SourceMapConsumer(util.getArg(s, 'map'), aSourceMapURL)\n    }\n  });\n}\n\nIndexedSourceMapConsumer.prototype = Object.create(SourceMapConsumer.prototype);\nIndexedSourceMapConsumer.prototype.constructor = SourceMapConsumer;\n\n/**\n * The version of the source mapping spec that we are consuming.\n */\nIndexedSourceMapConsumer.prototype._version = 3;\n\n/**\n * The list of original sources.\n */\nObject.defineProperty(IndexedSourceMapConsumer.prototype, 'sources', {\n  get: function () {\n    var sources = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      for (var j = 0; j < this._sections[i].consumer.sources.length; j++) {\n        sources.push(this._sections[i].consumer.sources[j]);\n      }\n    }\n    return sources;\n  }\n});\n\n/**\n * Returns the original source, line, and column information for the generated\n * source's line and column positions provided. The only argument is an object\n * with the following properties:\n *\n *   - line: The line number in the generated source.  The line number\n *     is 1-based.\n *   - column: The column number in the generated source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - source: The original source file, or null.\n *   - line: The line number in the original source, or null.  The\n *     line number is 1-based.\n *   - column: The column number in the original source, or null.  The\n *     column number is 0-based.\n *   - name: The original identifier, or null.\n */\nIndexedSourceMapConsumer.prototype.originalPositionFor =\n  function IndexedSourceMapConsumer_originalPositionFor(aArgs) {\n    var needle = {\n      generatedLine: util.getArg(aArgs, 'line'),\n      generatedColumn: util.getArg(aArgs, 'column')\n    };\n\n    // Find the section containing the generated position we're trying to map\n    // to an original position.\n    var sectionIndex = binarySearch.search(needle, this._sections,\n      function(needle, section) {\n        var cmp = needle.generatedLine - section.generatedOffset.generatedLine;\n        if (cmp) {\n          return cmp;\n        }\n\n        return (needle.generatedColumn -\n                section.generatedOffset.generatedColumn);\n      });\n    var section = this._sections[sectionIndex];\n\n    if (!section) {\n      return {\n        source: null,\n        line: null,\n        column: null,\n        name: null\n      };\n    }\n\n    return section.consumer.originalPositionFor({\n      line: needle.generatedLine -\n        (section.generatedOffset.generatedLine - 1),\n      column: needle.generatedColumn -\n        (section.generatedOffset.generatedLine === needle.generatedLine\n         ? section.generatedOffset.generatedColumn - 1\n         : 0),\n      bias: aArgs.bias\n    });\n  };\n\n/**\n * Return true if we have the source content for every source in the source\n * map, false otherwise.\n */\nIndexedSourceMapConsumer.prototype.hasContentsOfAllSources =\n  function IndexedSourceMapConsumer_hasContentsOfAllSources() {\n    return this._sections.every(function (s) {\n      return s.consumer.hasContentsOfAllSources();\n    });\n  };\n\n/**\n * Returns the original source content. The only argument is the url of the\n * original source file. Returns null if no original source content is\n * available.\n */\nIndexedSourceMapConsumer.prototype.sourceContentFor =\n  function IndexedSourceMapConsumer_sourceContentFor(aSource, nullOnMissing) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      var content = section.consumer.sourceContentFor(aSource, true);\n      if (content) {\n        return content;\n      }\n    }\n    if (nullOnMissing) {\n      return null;\n    }\n    else {\n      throw new Error('\"' + aSource + '\" is not in the SourceMap.');\n    }\n  };\n\n/**\n * Returns the generated line and column information for the original source,\n * line, and column positions provided. The only argument is an object with\n * the following properties:\n *\n *   - source: The filename of the original source.\n *   - line: The line number in the original source.  The line number\n *     is 1-based.\n *   - column: The column number in the original source.  The column\n *     number is 0-based.\n *\n * and an object is returned with the following properties:\n *\n *   - line: The line number in the generated source, or null.  The\n *     line number is 1-based. \n *   - column: The column number in the generated source, or null.\n *     The column number is 0-based.\n */\nIndexedSourceMapConsumer.prototype.generatedPositionFor =\n  function IndexedSourceMapConsumer_generatedPositionFor(aArgs) {\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n\n      // Only consider this section if the requested source is in the list of\n      // sources of the consumer.\n      if (section.consumer._findSourceIndex(util.getArg(aArgs, 'source')) === -1) {\n        continue;\n      }\n      var generatedPosition = section.consumer.generatedPositionFor(aArgs);\n      if (generatedPosition) {\n        var ret = {\n          line: generatedPosition.line +\n            (section.generatedOffset.generatedLine - 1),\n          column: generatedPosition.column +\n            (section.generatedOffset.generatedLine === generatedPosition.line\n             ? section.generatedOffset.generatedColumn - 1\n             : 0)\n        };\n        return ret;\n      }\n    }\n\n    return {\n      line: null,\n      column: null\n    };\n  };\n\n/**\n * Parse the mappings in a string in to a data structure which we can easily\n * query (the ordered arrays in the `this.__generatedMappings` and\n * `this.__originalMappings` properties).\n */\nIndexedSourceMapConsumer.prototype._parseMappings =\n  function IndexedSourceMapConsumer_parseMappings(aStr, aSourceRoot) {\n    this.__generatedMappings = [];\n    this.__originalMappings = [];\n    for (var i = 0; i < this._sections.length; i++) {\n      var section = this._sections[i];\n      var sectionMappings = section.consumer._generatedMappings;\n      for (var j = 0; j < sectionMappings.length; j++) {\n        var mapping = sectionMappings[j];\n\n        var source = section.consumer._sources.at(mapping.source);\n        source = util.computeSourceURL(section.consumer.sourceRoot, source, this._sourceMapURL);\n        this._sources.add(source);\n        source = this._sources.indexOf(source);\n\n        var name = null;\n        if (mapping.name) {\n          name = section.consumer._names.at(mapping.name);\n          this._names.add(name);\n          name = this._names.indexOf(name);\n        }\n\n        // The mappings coming from the consumer for the section have\n        // generated positions relative to the start of the section, so we\n        // need to offset them to be relative to the start of the concatenated\n        // generated file.\n        var adjustedMapping = {\n          source: source,\n          generatedLine: mapping.generatedLine +\n            (section.generatedOffset.generatedLine - 1),\n          generatedColumn: mapping.generatedColumn +\n            (section.generatedOffset.generatedLine === mapping.generatedLine\n            ? section.generatedOffset.generatedColumn - 1\n            : 0),\n          originalLine: mapping.originalLine,\n          originalColumn: mapping.originalColumn,\n          name: name\n        };\n\n        this.__generatedMappings.push(adjustedMapping);\n        if (typeof adjustedMapping.originalLine === 'number') {\n          this.__originalMappings.push(adjustedMapping);\n        }\n      }\n    }\n\n    quickSort(this.__generatedMappings, util.compareByGeneratedPositionsDeflated);\n    quickSort(this.__originalMappings, util.compareByOriginalPositions);\n  };\n\nexports.IndexedSourceMapConsumer = IndexedSourceMapConsumer;\n","/*\n * Copyright 2009-2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE.txt or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nexports.SourceMapGenerator = require('./lib/source-map-generator').SourceMapGenerator;\nexports.SourceMapConsumer = require('./lib/source-map-consumer').SourceMapConsumer;\nexports.SourceNode = require('./lib/source-node').SourceNode;\n","// tslint:disable:no-conditional-assignment\nimport {SourceMapConsumer} from \"source-map/source-map\";\n\nexport class ErrorMapper {\n  // Cache consumer\n  private static _consumer?: SourceMapConsumer;\n\n  public static get consumer(): SourceMapConsumer {\n    if (this._consumer == null) {\n      this._consumer = new SourceMapConsumer(require(\"main.js.map\"));\n    }\n\n    return this._consumer;\n  }\n\n  // Cache previously mapped traces to improve performance\n  public static cache: { [key: string]: string } = {};\n\n  /**\n   * Generates a stack trace using a source map generate original symbol names.\n   *\n   * WARNING - EXTREMELY high CPU cost for first call after reset - >30 CPU! Use sparingly!\n   * (Consecutive calls after a reset are more reasonable, ~0.1 CPU/ea)\n   *\n   * @param {Error | string} error The error or original stack trace\n   * @returns {string} The source-mapped stack trace\n   */\n  public static sourceMappedStackTrace(error: Error | string): string {\n    const stack: string = error instanceof Error ? error.stack as string : error;\n    if (this.cache.hasOwnProperty(stack)) {\n      return this.cache[stack];\n    }\n\n    const re = /^\\s+at\\s+(.+?\\s+)?\\(?([0-z._\\-\\\\\\/]+):(\\d+):(\\d+)\\)?$/gm;\n    let match: RegExpExecArray | null;\n    let outStack = error.toString();\n\n    while (match = re.exec(stack)) {\n      if (match[2] === \"main\") {\n        const pos = this.consumer.originalPositionFor({\n          column: parseInt(match[4], 10),\n          line: parseInt(match[3], 10)\n        });\n\n        if (pos.line != null) {\n          if (pos.name) {\n            outStack += `\\n    at ${pos.name} (${pos.source}:${pos.line}:${pos.column})`;\n          } else {\n            if (match[1]) {\n              // no original source file name known - use file name from given trace\n              outStack += `\\n    at ${match[1]} (${pos.source}:${pos.line}:${pos.column})`;\n            } else {\n              // no original source file name known or in given trace - omit name\n              outStack += `\\n    at ${pos.source}:${pos.line}:${pos.column}`;\n            }\n          }\n        } else {\n          // no known position\n          break;\n        }\n      } else {\n        // no more parseable lines\n        break;\n      }\n    }\n\n    this.cache[stack] = outStack;\n    return outStack;\n  }\n\n  public static wrapLoop(loop: () => void): () => void {\n    return () => {\n      try {\n        loop();\n      } catch (e) {\n        if (e instanceof Error) {\n          if (\"sim\" in Game.rooms) {\n            const message = `Source maps don't work in the simulator - displaying original error`;\n            console.log(`<span style='color:red'>${message}<br>${_.escape(e.stack)}</span>`);\n            Game.notify(_.escape(e.stack), 30)\n          } else {\n            console.log(`<span style='color:red'>${_.escape(this.sourceMappedStackTrace(e))}</span>`);\n            Game.notify(_.escape(this.sourceMappedStackTrace(e)), 30)\n          }\n        } else {\n          // can't handle it\n          throw e;\n        }\n        throw e;\n      }\n    };\n  }\n}\n","'use strict';\n\nlet usedOnStart = 0;\nlet enabled = false;\nlet depth = 0;\n\nfunction AlreadyWrappedError() {\n  this.name = 'AlreadyWrappedError';\n  this.message = 'Error attempted to double wrap a function.';\n  this.stack = ((new Error())).stack;\n}\n\nfunction setupProfiler() {\n  depth = 0; // reset depth, this needs to be done each tick.\n  Game.profiler = {\n    stream(duration, filter) {\n      setupMemory('stream', duration || 10, filter);\n    },\n    email(duration, filter) {\n      setupMemory('email', duration || 100, filter);\n    },\n    profile(duration, filter) {\n      setupMemory('profile', duration || 100, filter);\n    },\n    background(filter) {\n      setupMemory('background', false, filter);\n    },\n    restart() {\n      if (Profiler.isProfiling()) {\n        const filter = Memory.profiler.filter;\n        let duration = false;\n        if (!!Memory.profiler.disableTick) {\n          // Calculate the original duration, profile is enabled on the tick after the first call,\n          // so add 1.\n          duration = Memory.profiler.disableTick - Memory.profiler.enabledTick + 1;\n        }\n        const type = Memory.profiler.type;\n        setupMemory(type, duration, filter);\n      }\n    },\n    reset: resetMemory,\n    output: Profiler.output,\n  };\n\n  overloadCPUCalc();\n}\n\nfunction setupMemory(profileType, duration, filter) {\n  resetMemory();\n  const disableTick = Number.isInteger(duration) ? Game.time + duration : false;\n  if (!Memory.profiler) {\n    Memory.profiler = {\n      map: {},\n      totalTime: 0,\n      enabledTick: Game.time + 1,\n      disableTick,\n      type: profileType,\n      filter,\n    };\n  }\n}\n\nfunction resetMemory() {\n  Memory.profiler = null;\n}\n\nfunction overloadCPUCalc() {\n  if (Game.rooms.sim) {\n    usedOnStart = 0; // This needs to be reset, but only in the sim.\n    Game.cpu.getUsed = function getUsed() {\n      return performance.now() - usedOnStart;\n    };\n  }\n}\n\nfunction getFilter() {\n  return Memory.profiler.filter;\n}\n\nconst functionBlackList = [\n  'getUsed', // Let's avoid wrapping this... may lead to recursion issues and should be inexpensive.\n  'constructor', // es6 class constructors need to be called with `new`\n];\n\nfunction wrapFunction(name, originalFunction) {\n  if (originalFunction.profilerWrapped) { throw new AlreadyWrappedError(); }\n  function wrappedFunction() {\n    if (Profiler.isProfiling()) {\n      const nameMatchesFilter = name === getFilter();\n      const start = Game.cpu.getUsed();\n      if (nameMatchesFilter) {\n        depth++;\n      }\n      const result = originalFunction.apply(this, arguments);\n      if (depth > 0 || !getFilter()) {\n        const end = Game.cpu.getUsed();\n        Profiler.record(name, end - start);\n      }\n      if (nameMatchesFilter) {\n        depth--;\n      }\n      return result;\n    }\n\n    return originalFunction.apply(this, arguments);\n  }\n\n  wrappedFunction.profilerWrapped = true;\n  wrappedFunction.toString = () =>\n    `// screeps-profiler wrapped function:\\n${originalFunction.toString()}`;\n\n  return wrappedFunction;\n}\n\nfunction hookUpPrototypes() {\n  Profiler.prototypes.forEach(proto => {\n    profileObjectFunctions(proto.val, proto.name);\n  });\n}\n\nfunction profileObjectFunctions(object, label) {\n  const objectToWrap = object.prototype ? object.prototype : object;\n\n  Object.getOwnPropertyNames(objectToWrap).forEach(functionName => {\n    const extendedLabel = `${label}.${functionName}`;\n\n    const isBlackListed = functionBlackList.indexOf(functionName) !== -1;\n    if (isBlackListed) {\n      return;\n    }\n\n    const descriptor = Object.getOwnPropertyDescriptor(objectToWrap, functionName);\n    if (!descriptor) {\n      return;\n    }\n\n    const hasAccessor = descriptor.get || descriptor.set;\n    if (hasAccessor) {\n      const configurable = descriptor.configurable;\n      if (!configurable) {\n        return;\n      }\n\n      const profileDescriptor = {};\n\n      if (descriptor.get) {\n        const extendedLabelGet = `${extendedLabel}:get`;\n        profileDescriptor.get = profileFunction(descriptor.get, extendedLabelGet);\n      }\n\n      if (descriptor.set) {\n        const extendedLabelSet = `${extendedLabel}:set`;\n        profileDescriptor.set = profileFunction(descriptor.set, extendedLabelSet);\n      }\n\n      Object.defineProperty(objectToWrap, functionName, profileDescriptor);\n      return;\n    }\n\n    const isFunction = typeof descriptor.value === 'function';\n    if (!isFunction) {\n      return;\n    }\n    const originalFunction = objectToWrap[functionName];\n    objectToWrap[functionName] = profileFunction(originalFunction, extendedLabel);\n  });\n\n  return objectToWrap;\n}\n\nfunction profileFunction(fn, functionName) {\n  const fnName = functionName || fn.name;\n  if (!fnName) {\n    console.log('Couldn\\'t find a function name for - ', fn);\n    console.log('Will not profile this function.');\n    return fn;\n  }\n\n  return wrapFunction(fnName, fn);\n}\n\nconst Profiler = {\n  printProfile() {\n    console.log(Profiler.output());\n  },\n\n  emailProfile() {\n    Game.notify(Profiler.output(1000));\n  },\n\n  output(passedOutputLengthLimit) {\n    const outputLengthLimit = passedOutputLengthLimit || 1000;\n    if (!Memory.profiler || !Memory.profiler.enabledTick) {\n      return 'Profiler not active.';\n    }\n\n    const endTick = Math.min(Memory.profiler.disableTick || Game.time, Game.time);\n    const startTick = Memory.profiler.enabledTick + 1;\n    const elapsedTicks = endTick - startTick;\n    const header = 'calls\\t\\ttime\\t\\tavg\\t\\tfunction';\n    const footer = [\n      `Avg: ${(Memory.profiler.totalTime / elapsedTicks).toFixed(2)}`,\n      `Total: ${Memory.profiler.totalTime.toFixed(2)}`,\n      `Ticks: ${elapsedTicks}`,\n    ].join('\\t');\n\n    const lines = [header];\n    let currentLength = header.length + 1 + footer.length;\n    const allLines = Profiler.lines();\n    let done = false;\n    while (!done && allLines.length) {\n      const line = allLines.shift();\n      // each line added adds the line length plus a new line character.\n      if (currentLength + line.length + 1 < outputLengthLimit) {\n        lines.push(line);\n        currentLength += line.length + 1;\n      } else {\n        done = true;\n      }\n    }\n    lines.push(footer);\n    return lines.join('\\n');\n  },\n\n  lines() {\n    const stats = Object.keys(Memory.profiler.map).map(functionName => {\n      const functionCalls = Memory.profiler.map[functionName];\n      return {\n        name: functionName,\n        calls: functionCalls.calls,\n        totalTime: functionCalls.time,\n        averageTime: functionCalls.time / functionCalls.calls,\n      };\n    }).sort((val1, val2) => {\n      return val2.totalTime - val1.totalTime;\n    });\n\n    const lines = stats.map(data => {\n      return [\n        data.calls,\n        data.totalTime.toFixed(1),\n        data.averageTime.toFixed(3),\n        data.name,\n      ].join('\\t\\t');\n    });\n\n    return lines;\n  },\n\n  prototypes: [\n    { name: 'Game', val: Game },\n    { name: 'Room', val: Room },\n    { name: 'Structure', val: Structure },\n    { name: 'Spawn', val: Spawn },\n    { name: 'Creep', val: Creep },\n    { name: 'RoomPosition', val: RoomPosition },\n    { name: 'Source', val: Source },\n    { name: 'Flag', val: Flag },\n  ],\n\n  record(functionName, time) {\n    if (!Memory.profiler.map[functionName]) {\n      Memory.profiler.map[functionName] = {\n        time: 0,\n        calls: 0,\n      };\n    }\n    Memory.profiler.map[functionName].calls++;\n    Memory.profiler.map[functionName].time += time;\n  },\n\n  endTick() {\n    if (Game.time >= Memory.profiler.enabledTick) {\n      const cpuUsed = Game.cpu.getUsed();\n      Memory.profiler.totalTime += cpuUsed;\n      Profiler.report();\n    }\n  },\n\n  report() {\n    if (Profiler.shouldPrint()) {\n      Profiler.printProfile();\n    } else if (Profiler.shouldEmail()) {\n      Profiler.emailProfile();\n    }\n  },\n\n  isProfiling() {\n    if (!enabled || !Memory.profiler) {\n      return false;\n    }\n    return !Memory.profiler.disableTick || Game.time <= Memory.profiler.disableTick;\n  },\n\n  type() {\n    return Memory.profiler.type;\n  },\n\n  shouldPrint() {\n    const streaming = Profiler.type() === 'stream';\n    const profiling = Profiler.type() === 'profile';\n    const onEndingTick = Memory.profiler.disableTick === Game.time;\n    return streaming || (profiling && onEndingTick);\n  },\n\n  shouldEmail() {\n    return Profiler.type() === 'email' && Memory.profiler.disableTick === Game.time;\n  },\n};\n\nmodule.exports = {\n  wrap(callback) {\n    if (enabled) {\n      setupProfiler();\n    }\n\n    if (Profiler.isProfiling()) {\n      usedOnStart = Game.cpu.getUsed();\n\n      // Commented lines are part of an on going experiment to keep the profiler\n      // performant, and measure certain types of overhead.\n\n      // var callbackStart = Game.cpu.getUsed();\n      const returnVal = callback();\n      // var callbackEnd = Game.cpu.getUsed();\n      Profiler.endTick();\n      // var end = Game.cpu.getUsed();\n\n      // var profilerTime = (end - start) - (callbackEnd - callbackStart);\n      // var callbackTime = callbackEnd - callbackStart;\n      // var unaccounted = end - profilerTime - callbackTime;\n      // console.log('total-', end, 'profiler-', profilerTime, 'callbacktime-',\n      // callbackTime, 'start-', start, 'unaccounted', unaccounted);\n      return returnVal;\n    }\n\n    return callback();\n  },\n\n  enable() {\n    enabled = true;\n    hookUpPrototypes();\n  },\n\n  output: Profiler.output,\n\n  registerObject: profileObjectFunctions,\n  registerFN: profileFunction,\n  registerClass: profileObjectFunctions,\n};\n","\"use strict\";\r\nimport * as logger from 'logger';\r\n\r\nStructure.prototype.reservedEnergy = 0;\r\n\r\nStructure.prototype.initTick = function() {\r\n    this.reservedEnergy = 0;\r\n}\r\n\r\nStructure.prototype.needsRepair = function() {\r\n    if (this.hits < this.hitsMax - 1700) {\r\n        if (this.structureType == STRUCTURE_ROAD && this.hitsMax > ROAD_HITS * CONSTRUCTION_COST_ROAD_SWAMP_RATIO) return false // only repair roads if they are on swamp or cheaper (NOT tunnels)\r\n        return true\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n","\"use strict\";\r\n\r\nvar log_enabled = [ '',\r\n//  'spawn.recyclecreeps',\r\n//    'spawn.expandcreep'\r\n//  'creep.runscout',\r\n//    'creep.rundefender'\r\n//    'creep.runstransporter',\r\n//      'creep.runkeeperkiller',\r\n//    'spawn.spawncreepbyrole',\r\n//    'creep.runworker',\r\n//      'creep.runattacker',\r\n      //'creep.runcolonist',\r\n//      'creep.dofindenergy'\r\n  'creep.dowork',\r\n//      'creep.fleefrom',\r\n//    'spawn.run',\r\n//    'room.findharvestrooms',\r\n//    'roomobject.buildpath',\r\n//    'room.run'\r\n//      'room.autobuild',\r\n      //'room.validbuildingspot',\r\n//      'room.findenergydroppoints'\r\n//  'structure.needsrepair'\r\n//  'matrix_avoidkeeper'\r\n//  'structureterminal.run'\r\n//  'colonize'\r\n  //'cleanmemory'\r\n//  'unclaimbases'\r\n  //'creep.dofindenergy'\r\n//  'traveler'\r\n  //'base.run'\r\n\r\n\r\n]\r\n\r\nvar log_names = [ //'harvesterW7N43_W7N43_8661'//'Worker7828959'\r\n  'Worker10700218'\r\n]\r\n\r\n  function log(caller: string, message: Object, name: string = '' ) {\r\n    if (log_names.length > 0 && name.length > 0) {\r\n      let notFound = true;\r\n      for (let log_name of log_names) if (log_name == name) notFound = false;\r\n      if (notFound) return;\r\n    }\r\n    for (var i=0;i<log_enabled.length;i++) if (caller == log_enabled[i]) console.log(caller + ':' + name +  ': ' + JSON.stringify(message));\r\n  }\r\n\r\n  export { log };\r\n","\"use strict\";\r\n\r\nimport * as myFlags from 'myflags';\r\n\r\n\r\nconst FLAG_DESTROY_PRIM = COLOR_RED;\r\nconst FLAG_DESTROY_SEC = COLOR_WHITE;\r\n\r\nconst FLAG_REPAIR_PRIM = COLOR_PURPLE;\r\nconst FLAG_REPAIR_SEC = COLOR_PURPLE;\r\nconst FLAG_REPAIRNOW_PRIM = COLOR_PURPLE;\r\nconst FLAG_REPAIRNOW_SEC = COLOR_WHITE;\r\nconst FLAG_ROAD_PRIM = COLOR_BROWN;\r\nconst FLAG_ROAD_SEC = COLOR_BROWN;\r\n\r\nRoomPosition.prototype.createDestroyFlag = function() {\r\n    if (this.findInRange(FIND_FLAGS,0,{filter: (flag: Flag) => { return flag.color == FLAG_DESTROY_PRIM, flag.secondaryColor == FLAG_DESTROY_SEC}}).length == 0) {\r\n        this.createFlag (undefined, FLAG_DESTROY_PRIM, FLAG_DESTROY_SEC);\r\n    }\r\n}\r\n\r\nRoomPosition.prototype.createRepairFlag = function() {\r\n    if (this.findInRange(FIND_FLAGS,0,{filter: (flag: Flag) => { return flag.color == FLAG_REPAIR_PRIM, flag.secondaryColor == FLAG_REPAIR_SEC}}).length == 0) {\r\n        this.createFlag (undefined, FLAG_REPAIR_PRIM, FLAG_REPAIR_SEC);\r\n    }\r\n}\r\nRoomPosition.prototype.createRepairNowFlag = function() {\r\n    if (this.findInRange(FIND_FLAGS,0,{filter: (flag: Flag) => { return flag.color == FLAG_REPAIRNOW_PRIM, flag.secondaryColor == FLAG_REPAIRNOW_SEC}}).length == 0) {\r\n        this.createFlag (undefined, FLAG_REPAIRNOW_PRIM, FLAG_REPAIRNOW_SEC);\r\n    }\r\n}\r\n\r\nRoomPosition.prototype.getStructure = function() {\r\n    var structures = this.lookFor(LOOK_STRUCTURES);\r\n    for (var structure of structures) {\r\n        if (structure.structureType != STRUCTURE_ROAD) return structure;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nRoomPosition.prototype.getNearestLink = function() {\r\n    return this.findClosestByRange(FIND_MY_STRUCTURES,\r\n        {filter: (structure) => {return structure.structureType == STRUCTURE_LINK}});\r\n}\r\n\r\nRoomPosition.prototype.getInvader = function(){\r\n    var invaders = Game.rooms[this.roomName].find(FIND_HOSTILE_CREEPS, {filter: o => {return o.owner.username != 'Source Keeper'}});\r\n    var target = this.findClosestByPath(invaders);\r\n    var targetHealParts = 0;\r\n    for (var invader of invaders) {\r\n        var body = invader.body;\r\n        var healParts = 0;\r\n        for (let bodyPart of body) if (bodyPart.type == HEAL) healParts++;\r\n        if (healParts > targetHealParts) {\r\n            target = invader;\r\n            targetHealParts = healParts;\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\nRoomPosition.prototype.createRoadFlag = function() {\r\n    let flagName = 'R' + Game.time + '_' + this.roomName + this.x + this.y;\r\n    return this.createFlag(flagName ,FLAG_ROAD_PRIM, FLAG_ROAD_SEC)\r\n}\r\n","\"use strict\";\r\n\r\nimport * as logger from 'logger';\r\n//import * as Traveler from 'Traveler';\r\n\r\nimport 'pos';\r\n\r\n\r\nexport default function() {};\r\n\r\n// get container near roomobject\r\nRoomObject.prototype.getContainer = function() {\r\n    var result:RoomObject[] = this.pos.findInRange(FIND_STRUCTURES, 1, {filter: (structure: Structure) => {return structure.structureType == STRUCTURE_CONTAINER}});\r\n    if (result.length > 1) result[1].destroy();\r\n    if (result == undefined) result = this.pos.findInRange(FIND_MY_CONSTRUCTION_SITES, 1, {filter: (csite: ConstructionSite) => {return csite.structureType == STRUCTURE_CONTAINER}});\r\n    if (result == undefined) result = [this];\r\n    //if (result == undefined) result = this.pos.findInRange(FIND_DROPPED_RESOURCES,1)[0];\r\n    return result[0];\r\n}\r\n\r\n//build path\r\nRoomObject.prototype.buildPath = function(dest: RoomPosition, buildcontainer = false, buildlink = false, buildterminal = false) {\r\n    logger.log('roomobject.buildpath', this.pos + ' to ' + dest)\r\n    var result = PathFinder.search(this.pos,{pos: dest, range: 1},{maxOps: 100000 ,\r\n                                                                    plainCost: 8,\r\n                                                                    swampCost: 10,\r\n                                                                    roomCallback: function(roomName) {\r\n                                                                        let costMatrix = new PathFinder.CostMatrix;\r\n                                                                        let room = Game.rooms[roomName];\r\n                                                                        let scoutInfo = Game.atlas.getScoutInfo(roomName);\r\n                                                                        if (scoutInfo == undefined || scoutInfo.hasEnemyCreeps) return false; // don't build path in enemy territory\r\n                                                                        logger.log ('roomobject.buildpath', roomName)\r\n                                                                        if (!room) return costMatrix;\r\n                                                                        let structures = room.find(FIND_STRUCTURES);\r\n                                                                        for (let structure of structures) {\r\n                                                                            let value;\r\n                                                                            switch (structure.structureType) {\r\n                                                                                case STRUCTURE_ROAD:\r\n                                                                                    value = 6;\r\n                                                                                    break;\r\n                                                                                case STRUCTURE_CONTAINER:\r\n                                                                                    value = 1;\r\n                                                                                    break;\r\n                                                                                case STRUCTURE_LINK:\r\n                                                                                    value = 1;\r\n                                                                                    break;\r\n                                                                                case STRUCTURE_WALL:\r\n                                                                                    value = 8 + Math.ceil(structure.hits * 246 / structure.hitsMax)\r\n                                                                                default:\r\n                                                                                    value = 255;\r\n                                                                                    break;\r\n\r\n                                                                            }\r\n                                                                            costMatrix.set(structure.pos.x, structure.pos.y, value);\r\n                                                                        }\r\n                                                                        // road construction site tellen als gebouwde weg.\r\n                                                                        for (let csite of room.find(FIND_CONSTRUCTION_SITES, {filter: (csite:ConstructionSite) => {return csite.structureType == STRUCTURE_ROAD }})) {\r\n                                                                            costMatrix.set(csite.pos.x, csite.pos.y, 6);\r\n\r\n                                                                        }\r\n\r\n                                                                        // om keepers heenbouwen\r\n                                                                        for(var invader of Game.rooms[roomName].find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username == 'Source Keeper'}})) {\r\n                                                                            for (var x=-3; x <=3; x++) {\r\n                                                                                for (var y=-3; y <=3; y++) {\r\n                                                                                    costMatrix.set(invader.pos.x + x,invader.pos.y + y,255) // set square 3x3 around invader nonwalkable\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n\r\n                                                                        for(var lair of room.find(FIND_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_KEEPER_LAIR} })) {\r\n                                                                            for (var x=-3; x <=3; x++) {\r\n                                                                                for (var y=-3; y <=3; y++) {\r\n                                                                                    costMatrix.set(lair.pos.x + x,lair.pos.y + y,255) // set square 3x3 around invader nonwalkable\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n\r\n                                                                        return costMatrix;\r\n                                                                    }\r\n                                                                  }) ;\r\n//    console.log ('buildpath: ' + result.incomplete  + ' ' + result.ops)\r\n\r\n logger.log('roomobject.buildpath', result)\r\nfor(var i=result.path.length-1;i>0;i--){ // 0 niet bouwen, dat is de structure zelf omgekeerd bouwen, eerst container en pad vanaf container.\r\n        var pos = result.path[i];\r\n        let targetRoom = Game.rooms[pos.roomName]\r\n        if (targetRoom == undefined) continue;\r\n      //  if (i>100) logger.log('roomobject.buildpath', i + ' ' + pos)\r\n        if (targetRoom) targetRoom.visual.circle(pos)   ;\r\n        var structures = pos.lookFor(LOOK_STRUCTURES);\r\n        var flags = pos.lookFor(LOOK_FLAGS);\r\n        var hasRoad = false;\r\n        var hasWall = false;\r\n        for (var j=0;j<structures.length;j++) if (structures[j].structureType == STRUCTURE_ROAD) {\r\n            hasRoad = true;\r\n            var roadHitsPct = structures[j].hits / structures[j].hitsMax;\r\n        }\r\n        for (var j=0;j<structures.length;j++) if (structures[j].structureType == STRUCTURE_WALL) hasWall = true;\r\n        //else if (roadHitsPct < 0.25) pos.createRepairNowFlag();\r\n        //else if (roadHitsPct < 0.9) pos.createRepairFlag();\r\n        if (hasWall) pos.createDestroyFlag();\r\n        if (buildcontainer && i == result.path.length -1 ) {  // container bouwen bij bestemming\r\n            var hasContainer = false\r\n            for (var j=0;j<structures.length;j++) if (structures[j].structureType == STRUCTURE_CONTAINER) hasContainer = true;\r\n            if (hasContainer == false) logger.log ('roombobject.buildpath', pos.createConstructionSite(STRUCTURE_CONTAINER));\r\n        }\r\n        if (buildlink && i == result.path.length - 2) { // linkbouwen 2 bij controller vandaan\r\n            let hasLink = false;\r\n            for (let structure of structures) if (structure.structureType == STRUCTURE_LINK) hasLink = true;\r\n            if (hasLink == false) pos.createConstructionSite (STRUCTURE_LINK);\r\n        }\r\n        if (targetRoom && buildterminal && i == result.path.length -3 && targetRoom.controller && targetRoom.controller.level >= 6) {\r\n            let hasTerminal = false;\r\n            if (targetRoom.controller.pos.findInRange(FIND_MY_STRUCTURES, 3, {filter: (o:Structure) => {return o.structureType == STRUCTURE_TERMINAL}}).length>=1) hasTerminal = true;\r\n            if (hasTerminal == false) {\r\n                if (targetRoom.terminal) targetRoom.terminal.destroy();\r\n                pos.createConstructionSite (STRUCTURE_TERMINAL);\r\n            }\r\n        }\r\n        if (hasRoad == false && flags.length == 0 && pos.x > 0 && pos.x <49 && pos.y > 0 && pos.y < 49) pos.createRoadFlag(Math.floor(Game.time/1000)); //pos.createConstructionSite(STRUCTURE_ROAD);\r\n    }\r\n}\r\n","/**\n * To start using Traveler, require it in main.js:\n * Example: var Traveler = require('Traveler.js');\n */\ndeclare var _:any;\nimport * as logger from 'logger';\n\n\nexport class Traveler {\n\n    private static structureMatrixCache: {[roomName: string]: CostMatrix} = {};\n    private static creepMatrixCache: {[roomName: string]: CostMatrix} = {};\n    private static creepMatrixTick: number;\n    private static structureMatrixTick: number;\n    private static creepName:string;\n\n    /**\n     * move creep to destination\n     * @param creep\n     * @param destination\n     * @param options\n     * @returns {number}\n     */\n\n    public static travelTo(creep: Creep, destination: HasPos|RoomPosition, options: TravelToOptions = {}): number {\n        logger.log('traveler', 'running traveler', creep.name);\n        // uncomment if you would like to register hostile rooms entered\n        // this.updateRoomStatus(creep.room);\n        if (options.avoidKeeper == undefined) options.avoidKeeper = true;\n\n        if (!destination) {\n            return ERR_INVALID_ARGS;\n        }\n\n        if (creep.fatigue > 0) {\n            Traveler.circle(creep.pos, \"aqua\", .3);\n            return ERR_TIRED;\n        }\n\n        destination = this.normalizePos(destination);\n        this.creepName = creep.name;\n\n\n        // manage case where creep is nearby destination\n        let rangeToDestination = creep.pos.getRangeTo(destination);\n        if (options.range && rangeToDestination <= options.range) {\n            return OK;\n        } else if (rangeToDestination <= 1) {\n            if (rangeToDestination === 1 && !options.range) {\n                let direction = creep.pos.getDirectionTo(destination);\n                if (options.returnData) {\n                    options.returnData.nextPos = destination;\n                    options.returnData.path = direction.toString();\n                }\n                return creep.move(direction);\n            }\n            return OK;\n        }\n\n        //save destination for easy reference outside traveler\n        creep.memory.destination = {roomName: destination.roomName, x: destination.x, y:destination.y};\n\n\n        // repath if entering SK room and repath often in SK rooms and avoid keepers\n        if (creep.room.isSKLair()) {\n            logger.log('traveler', 'in SK room!', creep.name)\n            //options.repath = 0.2;\n            if (options.avoidKeeper) options.roomCallback = matrix_AvoidKeeper\n            if (creep.memory.lastRoomName != creep.room.name) options.repath = 1;\n        };\n        creep.memory.lastRoomName = creep.room.name;\n\n        // initialize data object\n        if (!creep.memory._trav) {\n            delete creep.memory._travel;\n            creep.memory._trav = {};\n        }\n        let travelData = creep.memory._trav as TravelData;\n\n        let state = this.deserializeState(travelData, destination);\n\n        // if stuck = 1000 within appproach distance. do nothing\n        //if (state.stuckCount == 1000) return 0;\n\n        // uncomment to visualize destination\n        // this.circle(destination.pos, \"orange\");\n\n        // check if creep is stuck\n        if (this.isStuck(creep, state)) {\n            logger.log('traveler', 'stuck!', creep.name)\n            state.stuckCount++;\n            Traveler.circle(creep.pos, \"magenta\", state.stuckCount * .2);\n        } else {\n            state.stuckCount = 0;\n        }\n\n        let newPath = false;\n\n        // handle case where creep is stuck\n        if (!options.stuckValue) { options.stuckValue = DEFAULT_STUCK_VALUE; }\n        if (!state.incomplete && state.stuckCount >= options.stuckValue && Math.random() > .5) {\n            logger.log('traveler', 'fixing stuck', creep.name)\n\n            options.ignoreCreeps = false;\n            options.freshMatrix = true;\n            newPath = true;\n        }\n\n        // TODO:handle case where creep moved by some other function, but destination is still the same\n\n        // delete path cache if destination is different\n        if (!this.samePos(state.destination, destination)) {\n            if (options.movingTarget && state.destination.isNearTo(destination)) {\n                travelData.path += state.destination.getDirectionTo(destination);\n                state.destination = destination;\n                state.incomplete = false;\n            } else {\n                newPath = true;\n            }\n        }\n\n        if (options.repath && Math.random() < options.repath) {\n            logger.log('traveler', 'doing random repath', creep.name)\n            // add some chance that you will find a new path randomly\n            newPath = true;\n        }\n\n        // wait 50 ticks for incomplete path saves cpu\n        if (state.incomplete && state.stuckCount >= 50) {\n            logger.log('traveler', 'completely stuckwith incomplete. waiting', creep.name)\n            newPath = true;\n            state.stuckCount = 0;\n        }\n\n        // pathfinding\n        if (newPath || (!travelData.path && !state.incomplete)) {\n            logger.log('traveler', 'finding new travel path', this.creepName)\n\n            newPath = true;\n            if (creep.spawning) { return ERR_BUSY; }\n\n            state.destination = destination;\n\n            let cpu = Game.cpu.getUsed();\n            let ret = this.findTravelPath(creep.pos, destination, options);\n\n            let cpuUsed = Game.cpu.getUsed() - cpu;\n            state.cpu = _.round(cpuUsed + state.cpu);\n            if (state.cpu > REPORT_CPU_THRESHOLD) {\n                // see note at end of file for more info on this\n                console.log(`TRAVELER: heavy cpu use: ${creep.name}, cpu: ${state.cpu} origin: ${\n                    creep.pos}, dest: ${destination}`);\n            }\n\n            let color = \"orange\";\n            if (ret.incomplete) {\n                // uncommenting this is a great way to diagnose creep behavior issues\n                console.log(`TRAVELER: incomplete path for ${creep.name}`);\n                color = \"red\";\n                state.incomplete = true;\n/*                if (options.approach) {\n                    if (rangeToDestination <= options.approach) {\n                        state.stuckCount = 1000;\n                    } else\n                        state.stuckCount = 100;\n                } */\n            } else { state.incomplete = false;}\n\n            if (options.returnData) {\n                options.returnData.pathfinderReturn = ret;\n            }\n\n            travelData.path = Traveler.serializePath(creep.pos, ret.path, color);\n            state.stuckCount = 0;\n        }\n\n        this.serializeState(creep, destination, state, travelData);\n\n        if (!travelData.path || travelData.path.length === 0) {\n            return ERR_NO_PATH;\n        }\n\n        // consume path\n        if (state.stuckCount === 0 && !newPath) {\n            travelData.path = travelData.path.substr(1);\n        }\n\n        let nextDirection:any = parseInt(travelData.path[0], 10);\n        if (options.returnData) {\n            if (nextDirection) {\n                let nextPos = Traveler.positionAtDirection(creep.pos, nextDirection);\n                if (nextPos) { options.returnData.nextPos = nextPos; }\n            }\n            options.returnData.state = state;\n            options.returnData.path = travelData.path;\n        }\n        return creep.move(nextDirection);\n    }\n\n    /**\n     * make position objects consistent so that either can be used as an argument\n     * @param destination\n     * @returns {any}\n     */\n\n    public static normalizePos(destination: HasPos|RoomPosition): RoomPosition {\n        if (!(destination instanceof RoomPosition)) {\n            return destination.pos;\n        }\n        return destination;\n    }\n\n    /**\n     * check if room should be avoided by findRoute algorithm\n     * @param roomName\n     * @returns {RoomMemory|number}\n     */\n\n    public static checkAvoid(roomName: string) {\n        //return false;\n        let scoutInfo = Game.atlas.getScoutInfo(roomName)\n        let result =  (scoutInfo == undefined || (scoutInfo.hasEnemyCreeps));\n        logger.log('traveler', `checkavoid: ${roomName} : ${result}`, this.creepName)\n        //logger.log('traveler', scoutInfo, this.creepName)\n        return result;\n    }\n\n    /**\n     * check if a position is an exit\n     * @param pos\n     * @returns {boolean}\n     */\n\n    public static isExit(pos: Coord): boolean {\n        return pos.x === 0 || pos.y === 0 || pos.x === 49 || pos.y === 49;\n    }\n\n    /**\n     * check two coordinates match\n     * @param pos1\n     * @param pos2\n     * @returns {boolean}\n     */\n\n    public static sameCoord(pos1: Coord, pos2: Coord): boolean {\n        return pos1.x === pos2.x && pos1.y === pos2.y;\n    }\n\n    /**\n     * check if two positions match\n     * @param pos1\n     * @param pos2\n     * @returns {boolean}\n     */\n\n    public static samePos(pos1: RoomPosition, pos2: RoomPosition) {\n        return this.sameCoord(pos1, pos2) && pos1.roomName === pos2.roomName;\n    }\n\n    /**\n     * draw a circle at position\n     * @param pos\n     * @param color\n     * @param opacity\n     */\n\n    public static circle(pos: RoomPosition, color: string, opacity?: number) {\n        new RoomVisual(pos.roomName).circle(pos, {\n            radius: .45, fill: \"transparent\", stroke: color, strokeWidth: .15, opacity: opacity});\n    }\n\n    /**\n     * update memory on whether a room should be avoided based on controller owner\n     * @param room\n     */\n\n    public static updateRoomStatus(room: Room) {\n        if (!room) { return; }\n        if (room.controller) {\n            if (room.controller.owner && !room.controller.my) {\n                room.memory.avoid = 1;\n            } else {\n                delete room.memory.avoid;\n            }\n        }\n    }\n\n    /**\n     * find a path from origin to destination\n     * @param origin\n     * @param destination\n     * @param options\n     * @returns {PathfinderReturn}\n     */\n\n    public static findTravelPath(origin: RoomPosition|HasPos, destination: RoomPosition|HasPos,\n                                 options: TravelToOptions = {}): PathfinderReturn {\n\n        _.defaults(options, {\n            ignoreCreeps: true,\n            maxOps: DEFAULT_MAXOPS,\n            range: 1,\n        });\n\n        if (options.movingTarget) {\n            options.range = 0;\n        }\n\n        origin = this.normalizePos(origin);\n        destination = this.normalizePos(destination);\n        let originRoomName = origin.roomName;\n        let destRoomName = destination.roomName;\n\n        // check to see whether findRoute should be used\n        let roomDistance = Game.map.getRoomLinearDistance(origin.roomName, destination.roomName);\n        let allowedRooms = options.route;\n        if (!allowedRooms && (options.useFindRoute || (options.useFindRoute === undefined && roomDistance > 2))) {\n            logger.log('traveler', 'using findroute', this.creepName)\n\n            let route = this.findRoute(origin.roomName, destination.roomName, options);\n            if (route) { allowedRooms = route; }\n        }\n\n        let roomsSearched = 0;\n\n        let callback = (roomName: string): CostMatrix | boolean => {\n\n            if (allowedRooms) {\n                if (!allowedRooms[roomName]) {\n                    return false;\n                }\n            } else if (!options.allowHostile && Traveler.checkAvoid(roomName)\n                && roomName !== destRoomName && roomName !== originRoomName) {\n                return false;\n            }\n\n            roomsSearched++;\n\n            let matrix;\n            let room = Game.rooms[roomName];\n            if (room) {\n                if (options.ignoreStructures) {\n                    matrix = new PathFinder.CostMatrix();\n                    if (!options.ignoreCreeps) {\n                        Traveler.addCreepsToMatrix(room, matrix);\n                    }\n                } else if (options.ignoreCreeps || roomName !== originRoomName) {\n                    matrix = this.getStructureMatrix(room, options.freshMatrix);\n                } else {\n                    matrix = this.getCreepMatrix(room);\n                }\n\n                if (options.obstacles) {\n                    matrix = matrix.clone();\n                    for (let obstacle of options.obstacles) {\n                        if (obstacle.pos.roomName !== roomName) { continue; }\n                        matrix.set(obstacle.pos.x, obstacle.pos.y, 0xff);\n                    }\n                }\n            }\n\n            if (options.roomCallback) {\n                if (!matrix) { matrix = new PathFinder.CostMatrix(); }\n                let outcome = options.roomCallback(roomName, matrix.clone());\n                if (outcome !== undefined) {\n                    return outcome;\n                }\n            }\n\n            return matrix as CostMatrix;\n        };\n\n        let ret = PathFinder.search(origin, {pos: destination, range: options.range!}, {\n            maxOps: options.maxOps,\n            maxRooms: options.maxRooms,\n            plainCost: options.offRoad ? 1 : options.ignoreRoads ? 1 : 2,\n            swampCost: options.offRoad ? 1 : options.ignoreRoads ? 5 : 10,\n            roomCallback: callback,\n        } );\n\n        if (ret.incomplete && options.ensurePath) {\n\n            if (options.useFindRoute === undefined) {\n\n                // handle case where pathfinder failed at a short distance due to not using findRoute\n                // can happen for situations where the creep would have to take an uncommonly indirect path\n                // options.allowedRooms and options.routeCallback can also be used to handle this situation\n                if (roomDistance <= 2) {\n                    console.log(`TRAVELER: path failed without findroute, trying with options.useFindRoute = true`);\n                    console.log(`from: ${origin}, destination: ${destination}`);\n                    options.useFindRoute = true;\n                    ret = this.findTravelPath(origin, destination, options);\n                    console.log(`TRAVELER: second attempt was ${ret.incomplete ? \"not \" : \"\"}successful`);\n                    return ret;\n                }\n\n                // TODO: handle case where a wall or some other obstacle is blocking the exit assumed by findRoute\n            } else {\n\n            }\n        }\n\n        return ret;\n    }\n\n    /**\n     * find a viable sequence of rooms that can be used to narrow down pathfinder's search algorithm\n     * @param origin\n     * @param destination\n     * @param options\n     * @returns {{}}\n     */\n\n    public static findRoute(origin: string, destination: string,\n                            options: TravelToOptions = {}): {[roomName: string]: boolean } | void {\n\n        let restrictDistance = options.restrictDistance || Game.map.getRoomLinearDistance(origin, destination) + 10;\n        let allowedRooms = { [ origin ]: true, [ destination ]: true };\n\n        let highwayBias = 1;\n        if (options.preferHighway) {\n            highwayBias = 2.5;\n            if (options.highwayBias) {\n                highwayBias = options.highwayBias;\n            }\n        }\n\n        let ret:any = Game.map.findRoute(origin, destination, {\n            routeCallback: (roomName: string) => {\n\n                if (options.routeCallback) {\n                    let outcome = options.routeCallback(roomName);\n                    if (outcome !== undefined) {\n                        return outcome;\n                    }\n                }\n\n                let rangeToRoom = Game.map.getRoomLinearDistance(origin, roomName);\n                if (rangeToRoom > restrictDistance) {\n                    // room is too far out of the way\n                    return Number.POSITIVE_INFINITY;\n                }\n\n                if (!options.allowHostile && Traveler.checkAvoid(roomName) &&\n                    roomName !== destination && roomName !== origin) {\n                    // room is marked as \"avoid\" in room memory\n                    return Number.POSITIVE_INFINITY;\n                }\n\n                let parsed;\n                if (options.preferHighway) {\n                    parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any;\n                    let isHighway = (parsed[1] % 10 === 0) || (parsed[2] % 10 === 0);\n                    if (isHighway) {\n                        return 1;\n                    }\n                }\n                // SK rooms are avoided when there is no vision in the room, harvested-from SK rooms are allowed\n/*                if (!options.allowSK && !Game.rooms[roomName]) {\n                    if (!parsed) { parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any; }\n                    let fMod = parsed[1] % 10;\n                    let sMod = parsed[2] % 10;\n                    let isSK =  !(fMod === 5 && sMod === 5) &&\n                        ((fMod >= 4) && (fMod <= 6)) &&\n                        ((sMod >= 4) && (sMod <= 6));\n                    if (isSK) {\n                        return 10 * highwayBias;\n                    }\n                }\n*/\n                return highwayBias;\n            },\n        });\n\n        if (!_.isArray(ret)) {\n            console.log(`couldn't findRoute to ${destination}`);\n            return;\n        } else {\n            for (let value of ret) {\n                allowedRooms[value.room] = true;\n            }\n        }\n\n        return allowedRooms;\n    }\n\n    /**\n     * check how many rooms were included in a route returned by findRoute\n     * @param origin\n     * @param destination\n     * @returns {number}\n     */\n\n    public static routeDistance(origin: string, destination: string): number | void {\n        let linearDistance = Game.map.getRoomLinearDistance(origin, destination);\n        if (linearDistance >= 32) {\n            return linearDistance;\n        }\n\n        let allowedRooms = this.findRoute(origin, destination);\n        if (allowedRooms) {\n            return Object.keys(allowedRooms).length;\n        }\n    }\n\n    /**\n     * build a cost matrix based on structures in the room. Will be cached for more than one tick. Requires vision.\n     * @param room\n     * @param freshMatrix\n     * @returns {any}\n     */\n\n    public static getStructureMatrix(room: Room, freshMatrix?: boolean): CostMatrix {\n        if (!this.structureMatrixCache[room.name] || (freshMatrix && Game.time !== this.structureMatrixTick)) {\n            this.structureMatrixTick = Game.time;\n            let matrix = new PathFinder.CostMatrix();\n            this.structureMatrixCache[room.name] = Traveler.addStructuresToMatrix(room, matrix, 1);\n        }\n        return this.structureMatrixCache[room.name];\n    }\n\n    /**\n     * build a cost matrix based on creeps and structures in the room. Will be cached for one tick. Requires vision.\n     * @param room\n     * @returns {any}\n     */\n\n    public static getCreepMatrix(room: Room) {\n        //reset creep matrix at new tick\n        if (Game.time !== this.creepMatrixTick) {\n            this.creepMatrixCache = {};\n            this.creepMatrixTick = Game.time;\n        }\n\n        if (this.creepMatrixCache[room.name] == undefined ) {\n//            this.creepMatrixTick = Game.time;\n            this.creepMatrixCache[room.name] = Traveler.addCreepsToMatrix(room,\n                this.getStructureMatrix(room, true).clone());\n        }\n        return this.creepMatrixCache[room.name];\n    }\n\n    /**\n     * add structures to matrix so that impassible structures can be avoided and roads given a lower cost\n     * @param room\n     * @param matrix\n     * @param roadCost\n     * @returns {CostMatrix}\n     */\n\n    public static addStructuresToMatrix(room: Room, matrix: CostMatrix, roadCost: number): CostMatrix {\n\n        let impassibleStructures: Structure[] = [];\n        for (let structure of room.find<Structure>(FIND_STRUCTURES)) {\n            if (structure instanceof StructureRampart) {\n                if (!structure.my && !structure.isPublic) {\n                    impassibleStructures.push(structure);\n                }\n            } else if (structure instanceof StructureRoad) {\n                matrix.set(structure.pos.x, structure.pos.y, roadCost);\n            } else if (structure instanceof StructureContainer) {\n                matrix.set(structure.pos.x, structure.pos.y, 5);\n            } else {\n                impassibleStructures.push(structure);\n            }\n        }\n\n        for (let site of room.find(FIND_MY_CONSTRUCTION_SITES)) {\n            if (site.structureType === STRUCTURE_CONTAINER || site.structureType === STRUCTURE_ROAD\n                || site.structureType === STRUCTURE_RAMPART) { continue; }\n            matrix.set(site.pos.x, site.pos.y, 0xff);\n        }\n\n        for (let structure of impassibleStructures) {\n            matrix.set(structure.pos.x, structure.pos.y, 0xff);\n        }\n\n        return matrix;\n    }\n\n    /**\n     * add creeps to matrix so that they will be avoided by other creeps\n     * @param room\n     * @param matrix\n     * @returns {CostMatrix}\n     */\n\n    public static addCreepsToMatrix(room: Room, matrix: CostMatrix): CostMatrix {\n        room.find(FIND_CREEPS).forEach((creep: Creep) => matrix.set(creep.pos.x, creep.pos.y, 0xff) );\n        return matrix;\n    }\n\n    /**\n     * serialize a path, traveler style. Returns a string of directions.\n     * @param startPos\n     * @param path\n     * @param color\n     * @returns {string}\n     */\n\n    public static serializePath(startPos: RoomPosition, path: RoomPosition[], color = \"orange\"): string {\n        let serializedPath = \"\";\n        let lastPosition = startPos;\n        this.circle(startPos, color);\n        for (let position of path) {\n            if (position.roomName === lastPosition.roomName) {\n                new RoomVisual(position.roomName)\n                    .line(position, lastPosition, {color: color, lineStyle: \"dashed\"});\n                serializedPath += lastPosition.getDirectionTo(position);\n            }\n            lastPosition = position;\n        }\n        return serializedPath;\n    }\n\n    /**\n     * returns a position at a direction relative to origin\n     * @param origin\n     * @param direction\n     * @returns {RoomPosition}\n     */\n\n    public static positionAtDirection(origin: RoomPosition, direction: number): RoomPosition | void {\n        let offsetX = [0, 0, 1, 1, 1, 0, -1, -1, -1];\n        let offsetY = [0, -1, -1, 0, 1, 1, 1, 0, -1];\n        let x = origin.x + offsetX[direction];\n        let y = origin.y + offsetY[direction];\n        if (x > 49 || x < 0 || y > 49 || y < 0) { return; }\n        return new RoomPosition(x, y, origin.roomName);\n    }\n\n    /**\n     * convert room avoidance memory from the old pattern to the one currently used\n     * @param cleanup\n     */\n\n    public static patchMemory(cleanup = false) {\n        if (!Memory.empire) { return; }\n        if (!Memory.empire.hostileRooms) { return; }\n        let count = 0;\n        for (let roomName in Memory.empire.hostileRooms) {\n            if (Memory.empire.hostileRooms[roomName]) {\n                if (!Memory.rooms[roomName]) { Memory.rooms[roomName] = {} as any; }\n                Memory.rooms[roomName].avoid = 1;\n                count++;\n            }\n            if (cleanup) {\n                delete Memory.empire.hostileRooms[roomName];\n            }\n        }\n        if (cleanup) {\n            delete Memory.empire.hostileRooms;\n        }\n\n        console.log(`TRAVELER: room avoidance data patched for ${count} rooms`);\n    }\n\n    private static deserializeState(travelData: TravelData, destination: RoomPosition): TravelState {\n        let state = {} as TravelState;\n        if (travelData.state) {\n            state.lastCoord = {x: travelData.state[STATE_PREV_X], y: travelData.state[STATE_PREV_Y] };\n            state.cpu = travelData.state[STATE_CPU];\n            state.stuckCount = travelData.state[STATE_STUCK];\n            state.incomplete = travelData.state[STATE_INCOMPLETE]\n            state.destination = new RoomPosition(travelData.state[STATE_DEST_X], travelData.state[STATE_DEST_Y],\n                travelData.state[STATE_DEST_ROOMNAME]);\n        } else {\n            state.cpu = 0;\n            state.destination = destination;\n            state.incomplete = false;\n        }\n        return state;\n    }\n\n    private static serializeState(creep: Creep, destination: RoomPosition, state: TravelState, travelData: TravelData) {\n        travelData.state = [creep.pos.x, creep.pos.y, state.stuckCount, state.cpu, destination.x, destination.y,\n            destination.roomName, state.incomplete];\n    }\n\n    private static isStuck(creep: Creep, state: TravelState): boolean {\n        let stuck = false;\n        if (state.lastCoord !== undefined) {\n            if (this.sameCoord(creep.pos, state.lastCoord)) {\n                // didn't move\n                stuck = true;\n            } else if (this.isExit(creep.pos) && this.isExit(state.lastCoord)) {\n                // moved against exit\n                stuck = true;\n            }\n        }\n\n        return stuck;\n    }\n}\n\n// this might be higher than you wish, setting it lower is a great way to diagnose creep behavior issues. When creeps\n// need to repath to often or they aren't finding valid paths, it can sometimes point to problems elsewhere in your code\nconst REPORT_CPU_THRESHOLD = 1000;\n\nconst DEFAULT_MAXOPS = 20000;\nconst DEFAULT_STUCK_VALUE = 2;\nconst STATE_PREV_X = 0;\nconst STATE_PREV_Y = 1;\nconst STATE_STUCK = 2;\nconst STATE_CPU = 3;\nconst STATE_DEST_X = 4;\nconst STATE_DEST_Y = 5;\nconst STATE_DEST_ROOMNAME = 6;\nconst STATE_INCOMPLETE = 7;\n\n// assigns a function to Creep.prototype: creep.travelTo(destination)\nCreep.prototype.travelTo = function(destination: RoomPosition|{pos: RoomPosition}, options?: TravelToOptions) {\n    //if (options == undefined) options = {};\n    //if (!options.roomCallback && this.role != 'keeperkiller') options.roomCallback = matrix_AvoidKeeper;\n    return Traveler.travelTo(this, destination, options);\n};\n\n\n// this can be further optimised by also caching if there is vision.\nvar keeperMatrix_cache : {[key:string] : CostMatrix } = {};\nfunction matrix_AvoidKeeper (roomName: string, costMatrix: CostMatrix) {\n    let room = Game.rooms[roomName];\n    if (room) {\n        for(var invader of room.find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username == 'Source Keeper'}})) {\n            for (var x=-3; x <=3; x++) {\n                for (var y=-3; y <=3; y++) {\n                    costMatrix.set(invader.pos.x + x,invader.pos.y + y,255) // set square 3x3 around invader nonwalkable\n                }\n            }\n        }\n        for(var lair of room.find(FIND_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_KEEPER_LAIR} })) {\n            for (var x=-1; x <=1; x++) {\n                for (var y=-1; y <=1; y++) {\n                    costMatrix.set(lair.pos.x + x,lair.pos.y + y,255) // set square 3x3 around invader nonwalkable\n                }\n            }\n        }\n        keeperMatrix_cache[roomName] = costMatrix;\n    } else {\n        if (keeperMatrix_cache[roomName]) return keeperMatrix_cache[roomName];\n    }\n    return costMatrix;\n}\n","\"use strict\";\r\n\r\nimport * as logger from 'logger';\r\n//import * as Traveler from 'Traveler';\r\n\r\nimport 'pos';\r\n\r\n\r\nexport default function() {};\r\n\r\n// get container near roomobject\r\nRoomObject.prototype.getContainer = function() {\r\n    var result:RoomObject[] = this.pos.findInRange(FIND_STRUCTURES, 1, {filter: (structure: Structure) => {return structure.structureType == STRUCTURE_CONTAINER}});\r\n    if (result.length > 1) result[1].destroy();\r\n    if (result == undefined) result = this.pos.findInRange(FIND_MY_CONSTRUCTION_SITES, 1, {filter: (csite: ConstructionSite) => {return csite.structureType == STRUCTURE_CONTAINER}});\r\n    if (result == undefined) result = [this];\r\n    //if (result == undefined) result = this.pos.findInRange(FIND_DROPPED_RESOURCES,1)[0];\r\n    return result[0];\r\n}\r\n\r\n//build path\r\nRoomObject.prototype.buildPath = function(dest: RoomPosition, buildcontainer = false, buildlink = false, buildterminal = false) {\r\n    logger.log('roomobject.buildpath', this.pos + ' to ' + dest)\r\n    var result = PathFinder.search(this.pos,{pos: dest, range: 1},{maxOps: 100000 ,\r\n                                                                    plainCost: 8,\r\n                                                                    swampCost: 10,\r\n                                                                    roomCallback: function(roomName) {\r\n                                                                        let costMatrix = new PathFinder.CostMatrix;\r\n                                                                        let room = Game.rooms[roomName];\r\n                                                                        let scoutInfo = Game.atlas.getScoutInfo(roomName);\r\n                                                                        if (scoutInfo == undefined || scoutInfo.hasEnemyCreeps) return false; // don't build path in enemy territory\r\n                                                                        logger.log ('roomobject.buildpath', roomName)\r\n                                                                        if (!room) return costMatrix;\r\n                                                                        let structures = room.find(FIND_STRUCTURES);\r\n                                                                        for (let structure of structures) {\r\n                                                                            let value;\r\n                                                                            switch (structure.structureType) {\r\n                                                                                case STRUCTURE_ROAD:\r\n                                                                                    value = 6;\r\n                                                                                    break;\r\n                                                                                case STRUCTURE_CONTAINER:\r\n                                                                                    value = 1;\r\n                                                                                    break;\r\n                                                                                case STRUCTURE_LINK:\r\n                                                                                    value = 1;\r\n                                                                                    break;\r\n                                                                                case STRUCTURE_WALL:\r\n                                                                                    value = 8 + Math.ceil(structure.hits * 246 / structure.hitsMax)\r\n                                                                                default:\r\n                                                                                    value = 255;\r\n                                                                                    break;\r\n\r\n                                                                            }\r\n                                                                            costMatrix.set(structure.pos.x, structure.pos.y, value);\r\n                                                                        }\r\n                                                                        // road construction site tellen als gebouwde weg.\r\n                                                                        for (let csite of room.find(FIND_CONSTRUCTION_SITES, {filter: (csite:ConstructionSite) => {return csite.structureType == STRUCTURE_ROAD }})) {\r\n                                                                            costMatrix.set(csite.pos.x, csite.pos.y, 6);\r\n\r\n                                                                        }\r\n\r\n                                                                        // om keepers heenbouwen\r\n                                                                        for(var invader of Game.rooms[roomName].find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username == 'Source Keeper'}})) {\r\n                                                                            for (var x=-3; x <=3; x++) {\r\n                                                                                for (var y=-3; y <=3; y++) {\r\n                                                                                    costMatrix.set(invader.pos.x + x,invader.pos.y + y,255) // set square 3x3 around invader nonwalkable\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n\r\n                                                                        for(var lair of room.find(FIND_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_KEEPER_LAIR} })) {\r\n                                                                            for (var x=-3; x <=3; x++) {\r\n                                                                                for (var y=-3; y <=3; y++) {\r\n                                                                                    costMatrix.set(lair.pos.x + x,lair.pos.y + y,255) // set square 3x3 around invader nonwalkable\r\n                                                                                }\r\n                                                                            }\r\n                                                                        }\r\n\r\n                                                                        return costMatrix;\r\n                                                                    }\r\n                                                                  }) ;\r\n//    console.log ('buildpath: ' + result.incomplete  + ' ' + result.ops)\r\n\r\n logger.log('roomobject.buildpath', result)\r\nfor(var i=result.path.length-1;i>0;i--){ // 0 niet bouwen, dat is de structure zelf omgekeerd bouwen, eerst container en pad vanaf container.\r\n        var pos = result.path[i];\r\n        let targetRoom = Game.rooms[pos.roomName]\r\n        if (targetRoom == undefined) continue;\r\n      //  if (i>100) logger.log('roomobject.buildpath', i + ' ' + pos)\r\n        if (targetRoom) targetRoom.visual.circle(pos)   ;\r\n        var structures = pos.lookFor(LOOK_STRUCTURES);\r\n        var flags = pos.lookFor(LOOK_FLAGS);\r\n        var hasRoad = false;\r\n        var hasWall = false;\r\n        for (var j=0;j<structures.length;j++) if (structures[j].structureType == STRUCTURE_ROAD) {\r\n            hasRoad = true;\r\n            var roadHitsPct = structures[j].hits / structures[j].hitsMax;\r\n        }\r\n        for (var j=0;j<structures.length;j++) if (structures[j].structureType == STRUCTURE_WALL) hasWall = true;\r\n        //else if (roadHitsPct < 0.25) pos.createRepairNowFlag();\r\n        //else if (roadHitsPct < 0.9) pos.createRepairFlag();\r\n        if (hasWall) pos.createDestroyFlag();\r\n        if (buildcontainer && i == result.path.length -1 ) {  // container bouwen bij bestemming\r\n            var hasContainer = false\r\n            for (var j=0;j<structures.length;j++) if (structures[j].structureType == STRUCTURE_CONTAINER) hasContainer = true;\r\n            if (hasContainer == false) logger.log ('roombobject.buildpath', pos.createConstructionSite(STRUCTURE_CONTAINER));\r\n        }\r\n        if (buildlink && i == result.path.length - 2) { // linkbouwen 2 bij controller vandaan\r\n            let hasLink = false;\r\n            for (let structure of structures) if (structure.structureType == STRUCTURE_LINK) hasLink = true;\r\n            if (hasLink == false) pos.createConstructionSite (STRUCTURE_LINK);\r\n        }\r\n        if (targetRoom && buildterminal && i == result.path.length -3 && targetRoom.controller && targetRoom.controller.level >= 6) {\r\n            let hasTerminal = false;\r\n            if (targetRoom.controller.pos.findInRange(FIND_MY_STRUCTURES, 3, {filter: (o:Structure) => {return o.structureType == STRUCTURE_TERMINAL}}).length>=1) hasTerminal = true;\r\n            if (hasTerminal == false) {\r\n                if (targetRoom.terminal) targetRoom.terminal.destroy();\r\n                pos.createConstructionSite (STRUCTURE_TERMINAL);\r\n            }\r\n        }\r\n        if (hasRoad == false && flags.length == 0 && pos.x > 0 && pos.x <49 && pos.y > 0 && pos.y < 49) pos.createRoadFlag(Math.floor(Game.time/1000)); //pos.createConstructionSite(STRUCTURE_ROAD);\r\n    }\r\n}\r\n","\"use strict\";\r\nimport * as logger from 'logger';\r\n\r\nStructure.prototype.reservedEnergy = 0;\r\n\r\nStructure.prototype.initTick = function() {\r\n    this.reservedEnergy = 0;\r\n}\r\n\r\nStructure.prototype.needsRepair = function() {\r\n    if (this.hits < this.hitsMax - 1700) {\r\n        if (this.structureType == STRUCTURE_ROAD && this.hitsMax > ROAD_HITS * CONSTRUCTION_COST_ROAD_SWAMP_RATIO) return false // only repair roads if they are on swamp or cheaper (NOT tunnels)\r\n        return true\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\n","/**\n * To start using Traveler, require it in main.js:\n * Example: var Traveler = require('Traveler.js');\n */\ndeclare var _:any;\nimport * as logger from 'logger';\n\n\nexport class Traveler {\n\n    private static structureMatrixCache: {[roomName: string]: CostMatrix} = {};\n    private static creepMatrixCache: {[roomName: string]: CostMatrix} = {};\n    private static creepMatrixTick: number;\n    private static structureMatrixTick: number;\n    private static creepName:string;\n\n    /**\n     * move creep to destination\n     * @param creep\n     * @param destination\n     * @param options\n     * @returns {number}\n     */\n\n    public static travelTo(creep: Creep, destination: HasPos|RoomPosition, options: TravelToOptions = {}): number {\n        logger.log('traveler', 'running traveler', creep.name);\n        // uncomment if you would like to register hostile rooms entered\n        // this.updateRoomStatus(creep.room);\n        if (options.avoidKeeper == undefined) options.avoidKeeper = true;\n\n        if (!destination) {\n            return ERR_INVALID_ARGS;\n        }\n\n        if (creep.fatigue > 0) {\n            Traveler.circle(creep.pos, \"aqua\", .3);\n            return ERR_TIRED;\n        }\n\n        destination = this.normalizePos(destination);\n        this.creepName = creep.name;\n\n\n        // manage case where creep is nearby destination\n        let rangeToDestination = creep.pos.getRangeTo(destination);\n        if (options.range && rangeToDestination <= options.range) {\n            return OK;\n        } else if (rangeToDestination <= 1) {\n            if (rangeToDestination === 1 && !options.range) {\n                let direction = creep.pos.getDirectionTo(destination);\n                if (options.returnData) {\n                    options.returnData.nextPos = destination;\n                    options.returnData.path = direction.toString();\n                }\n                return creep.move(direction);\n            }\n            return OK;\n        }\n\n        //save destination for easy reference outside traveler\n        creep.memory.destination = {roomName: destination.roomName, x: destination.x, y:destination.y};\n\n\n        // repath if entering SK room and repath often in SK rooms and avoid keepers\n        if (creep.room.isSKLair()) {\n            logger.log('traveler', 'in SK room!', creep.name)\n            //options.repath = 0.2;\n            if (options.avoidKeeper) options.roomCallback = matrix_AvoidKeeper\n            if (creep.memory.lastRoomName != creep.room.name) options.repath = 1;\n        };\n        creep.memory.lastRoomName = creep.room.name;\n\n        // initialize data object\n        if (!creep.memory._trav) {\n            delete creep.memory._travel;\n            creep.memory._trav = {};\n        }\n        let travelData = creep.memory._trav as TravelData;\n\n        let state = this.deserializeState(travelData, destination);\n\n        // if stuck = 1000 within appproach distance. do nothing\n        //if (state.stuckCount == 1000) return 0;\n\n        // uncomment to visualize destination\n        // this.circle(destination.pos, \"orange\");\n\n        // check if creep is stuck\n        if (this.isStuck(creep, state)) {\n            logger.log('traveler', 'stuck!', creep.name)\n            state.stuckCount++;\n            Traveler.circle(creep.pos, \"magenta\", state.stuckCount * .2);\n        } else {\n            state.stuckCount = 0;\n        }\n\n        let newPath = false;\n\n        // handle case where creep is stuck\n        if (!options.stuckValue) { options.stuckValue = DEFAULT_STUCK_VALUE; }\n        if (!state.incomplete && state.stuckCount >= options.stuckValue && Math.random() > .5) {\n            logger.log('traveler', 'fixing stuck', creep.name)\n\n            options.ignoreCreeps = false;\n            options.freshMatrix = true;\n            newPath = true;\n        }\n\n        // TODO:handle case where creep moved by some other function, but destination is still the same\n\n        // delete path cache if destination is different\n        if (!this.samePos(state.destination, destination)) {\n            if (options.movingTarget && state.destination.isNearTo(destination)) {\n                travelData.path += state.destination.getDirectionTo(destination);\n                state.destination = destination;\n                state.incomplete = false;\n            } else {\n                newPath = true;\n            }\n        }\n\n        if (options.repath && Math.random() < options.repath) {\n            logger.log('traveler', 'doing random repath', creep.name)\n            // add some chance that you will find a new path randomly\n            newPath = true;\n        }\n\n        // wait 50 ticks for incomplete path saves cpu\n        if (state.incomplete && state.stuckCount >= 50) {\n            logger.log('traveler', 'completely stuckwith incomplete. waiting', creep.name)\n            newPath = true;\n            state.stuckCount = 0;\n        }\n\n        // pathfinding\n        if (newPath || (!travelData.path && !state.incomplete)) {\n            logger.log('traveler', 'finding new travel path', this.creepName)\n\n            newPath = true;\n            if (creep.spawning) { return ERR_BUSY; }\n\n            state.destination = destination;\n\n            let cpu = Game.cpu.getUsed();\n            let ret = this.findTravelPath(creep.pos, destination, options);\n\n            let cpuUsed = Game.cpu.getUsed() - cpu;\n            state.cpu = _.round(cpuUsed + state.cpu);\n            if (state.cpu > REPORT_CPU_THRESHOLD) {\n                // see note at end of file for more info on this\n                console.log(`TRAVELER: heavy cpu use: ${creep.name}, cpu: ${state.cpu} origin: ${\n                    creep.pos}, dest: ${destination}`);\n            }\n\n            let color = \"orange\";\n            if (ret.incomplete) {\n                // uncommenting this is a great way to diagnose creep behavior issues\n                console.log(`TRAVELER: incomplete path for ${creep.name}`);\n                color = \"red\";\n                state.incomplete = true;\n/*                if (options.approach) {\n                    if (rangeToDestination <= options.approach) {\n                        state.stuckCount = 1000;\n                    } else\n                        state.stuckCount = 100;\n                } */\n            } else { state.incomplete = false;}\n\n            if (options.returnData) {\n                options.returnData.pathfinderReturn = ret;\n            }\n\n            travelData.path = Traveler.serializePath(creep.pos, ret.path, color);\n            state.stuckCount = 0;\n        }\n\n        this.serializeState(creep, destination, state, travelData);\n\n        if (!travelData.path || travelData.path.length === 0) {\n            return ERR_NO_PATH;\n        }\n\n        // consume path\n        if (state.stuckCount === 0 && !newPath) {\n            travelData.path = travelData.path.substr(1);\n        }\n\n        let nextDirection:any = parseInt(travelData.path[0], 10);\n        if (options.returnData) {\n            if (nextDirection) {\n                let nextPos = Traveler.positionAtDirection(creep.pos, nextDirection);\n                if (nextPos) { options.returnData.nextPos = nextPos; }\n            }\n            options.returnData.state = state;\n            options.returnData.path = travelData.path;\n        }\n        return creep.move(nextDirection);\n    }\n\n    /**\n     * make position objects consistent so that either can be used as an argument\n     * @param destination\n     * @returns {any}\n     */\n\n    public static normalizePos(destination: HasPos|RoomPosition): RoomPosition {\n        if (!(destination instanceof RoomPosition)) {\n            return destination.pos;\n        }\n        return destination;\n    }\n\n    /**\n     * check if room should be avoided by findRoute algorithm\n     * @param roomName\n     * @returns {RoomMemory|number}\n     */\n\n    public static checkAvoid(roomName: string) {\n        //return false;\n        let scoutInfo = Game.atlas.getScoutInfo(roomName)\n        let result =  (scoutInfo == undefined || (scoutInfo.hasEnemyCreeps));\n        logger.log('traveler', `checkavoid: ${roomName} : ${result}`, this.creepName)\n        //logger.log('traveler', scoutInfo, this.creepName)\n        return result;\n    }\n\n    /**\n     * check if a position is an exit\n     * @param pos\n     * @returns {boolean}\n     */\n\n    public static isExit(pos: Coord): boolean {\n        return pos.x === 0 || pos.y === 0 || pos.x === 49 || pos.y === 49;\n    }\n\n    /**\n     * check two coordinates match\n     * @param pos1\n     * @param pos2\n     * @returns {boolean}\n     */\n\n    public static sameCoord(pos1: Coord, pos2: Coord): boolean {\n        return pos1.x === pos2.x && pos1.y === pos2.y;\n    }\n\n    /**\n     * check if two positions match\n     * @param pos1\n     * @param pos2\n     * @returns {boolean}\n     */\n\n    public static samePos(pos1: RoomPosition, pos2: RoomPosition) {\n        return this.sameCoord(pos1, pos2) && pos1.roomName === pos2.roomName;\n    }\n\n    /**\n     * draw a circle at position\n     * @param pos\n     * @param color\n     * @param opacity\n     */\n\n    public static circle(pos: RoomPosition, color: string, opacity?: number) {\n        new RoomVisual(pos.roomName).circle(pos, {\n            radius: .45, fill: \"transparent\", stroke: color, strokeWidth: .15, opacity: opacity});\n    }\n\n    /**\n     * update memory on whether a room should be avoided based on controller owner\n     * @param room\n     */\n\n    public static updateRoomStatus(room: Room) {\n        if (!room) { return; }\n        if (room.controller) {\n            if (room.controller.owner && !room.controller.my) {\n                room.memory.avoid = 1;\n            } else {\n                delete room.memory.avoid;\n            }\n        }\n    }\n\n    /**\n     * find a path from origin to destination\n     * @param origin\n     * @param destination\n     * @param options\n     * @returns {PathfinderReturn}\n     */\n\n    public static findTravelPath(origin: RoomPosition|HasPos, destination: RoomPosition|HasPos,\n                                 options: TravelToOptions = {}): PathfinderReturn {\n\n        _.defaults(options, {\n            ignoreCreeps: true,\n            maxOps: DEFAULT_MAXOPS,\n            range: 1,\n        });\n\n        if (options.movingTarget) {\n            options.range = 0;\n        }\n\n        origin = this.normalizePos(origin);\n        destination = this.normalizePos(destination);\n        let originRoomName = origin.roomName;\n        let destRoomName = destination.roomName;\n\n        // check to see whether findRoute should be used\n        let roomDistance = Game.map.getRoomLinearDistance(origin.roomName, destination.roomName);\n        let allowedRooms = options.route;\n        if (!allowedRooms && (options.useFindRoute || (options.useFindRoute === undefined && roomDistance > 2))) {\n            logger.log('traveler', 'using findroute', this.creepName)\n\n            let route = this.findRoute(origin.roomName, destination.roomName, options);\n            if (route) { allowedRooms = route; }\n        }\n\n        let roomsSearched = 0;\n\n        let callback = (roomName: string): CostMatrix | boolean => {\n\n            if (allowedRooms) {\n                if (!allowedRooms[roomName]) {\n                    return false;\n                }\n            } else if (!options.allowHostile && Traveler.checkAvoid(roomName)\n                && roomName !== destRoomName && roomName !== originRoomName) {\n                return false;\n            }\n\n            roomsSearched++;\n\n            let matrix;\n            let room = Game.rooms[roomName];\n            if (room) {\n                if (options.ignoreStructures) {\n                    matrix = new PathFinder.CostMatrix();\n                    if (!options.ignoreCreeps) {\n                        Traveler.addCreepsToMatrix(room, matrix);\n                    }\n                } else if (options.ignoreCreeps || roomName !== originRoomName) {\n                    matrix = this.getStructureMatrix(room, options.freshMatrix);\n                } else {\n                    matrix = this.getCreepMatrix(room);\n                }\n\n                if (options.obstacles) {\n                    matrix = matrix.clone();\n                    for (let obstacle of options.obstacles) {\n                        if (obstacle.pos.roomName !== roomName) { continue; }\n                        matrix.set(obstacle.pos.x, obstacle.pos.y, 0xff);\n                    }\n                }\n            }\n\n            if (options.roomCallback) {\n                if (!matrix) { matrix = new PathFinder.CostMatrix(); }\n                let outcome = options.roomCallback(roomName, matrix.clone());\n                if (outcome !== undefined) {\n                    return outcome;\n                }\n            }\n\n            return matrix as CostMatrix;\n        };\n\n        let ret = PathFinder.search(origin, {pos: destination, range: options.range!}, {\n            maxOps: options.maxOps,\n            maxRooms: options.maxRooms,\n            plainCost: options.offRoad ? 1 : options.ignoreRoads ? 1 : 2,\n            swampCost: options.offRoad ? 1 : options.ignoreRoads ? 5 : 10,\n            roomCallback: callback,\n        } );\n\n        if (ret.incomplete && options.ensurePath) {\n\n            if (options.useFindRoute === undefined) {\n\n                // handle case where pathfinder failed at a short distance due to not using findRoute\n                // can happen for situations where the creep would have to take an uncommonly indirect path\n                // options.allowedRooms and options.routeCallback can also be used to handle this situation\n                if (roomDistance <= 2) {\n                    console.log(`TRAVELER: path failed without findroute, trying with options.useFindRoute = true`);\n                    console.log(`from: ${origin}, destination: ${destination}`);\n                    options.useFindRoute = true;\n                    ret = this.findTravelPath(origin, destination, options);\n                    console.log(`TRAVELER: second attempt was ${ret.incomplete ? \"not \" : \"\"}successful`);\n                    return ret;\n                }\n\n                // TODO: handle case where a wall or some other obstacle is blocking the exit assumed by findRoute\n            } else {\n\n            }\n        }\n\n        return ret;\n    }\n\n    /**\n     * find a viable sequence of rooms that can be used to narrow down pathfinder's search algorithm\n     * @param origin\n     * @param destination\n     * @param options\n     * @returns {{}}\n     */\n\n    public static findRoute(origin: string, destination: string,\n                            options: TravelToOptions = {}): {[roomName: string]: boolean } | void {\n\n        let restrictDistance = options.restrictDistance || Game.map.getRoomLinearDistance(origin, destination) + 10;\n        let allowedRooms = { [ origin ]: true, [ destination ]: true };\n\n        let highwayBias = 1;\n        if (options.preferHighway) {\n            highwayBias = 2.5;\n            if (options.highwayBias) {\n                highwayBias = options.highwayBias;\n            }\n        }\n\n        let ret:any = Game.map.findRoute(origin, destination, {\n            routeCallback: (roomName: string) => {\n\n                if (options.routeCallback) {\n                    let outcome = options.routeCallback(roomName);\n                    if (outcome !== undefined) {\n                        return outcome;\n                    }\n                }\n\n                let rangeToRoom = Game.map.getRoomLinearDistance(origin, roomName);\n                if (rangeToRoom > restrictDistance) {\n                    // room is too far out of the way\n                    return Number.POSITIVE_INFINITY;\n                }\n\n                if (!options.allowHostile && Traveler.checkAvoid(roomName) &&\n                    roomName !== destination && roomName !== origin) {\n                    // room is marked as \"avoid\" in room memory\n                    return Number.POSITIVE_INFINITY;\n                }\n\n                let parsed;\n                if (options.preferHighway) {\n                    parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any;\n                    let isHighway = (parsed[1] % 10 === 0) || (parsed[2] % 10 === 0);\n                    if (isHighway) {\n                        return 1;\n                    }\n                }\n                // SK rooms are avoided when there is no vision in the room, harvested-from SK rooms are allowed\n/*                if (!options.allowSK && !Game.rooms[roomName]) {\n                    if (!parsed) { parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(roomName) as any; }\n                    let fMod = parsed[1] % 10;\n                    let sMod = parsed[2] % 10;\n                    let isSK =  !(fMod === 5 && sMod === 5) &&\n                        ((fMod >= 4) && (fMod <= 6)) &&\n                        ((sMod >= 4) && (sMod <= 6));\n                    if (isSK) {\n                        return 10 * highwayBias;\n                    }\n                }\n*/\n                return highwayBias;\n            },\n        });\n\n        if (!_.isArray(ret)) {\n            console.log(`couldn't findRoute to ${destination}`);\n            return;\n        } else {\n            for (let value of ret) {\n                allowedRooms[value.room] = true;\n            }\n        }\n\n        return allowedRooms;\n    }\n\n    /**\n     * check how many rooms were included in a route returned by findRoute\n     * @param origin\n     * @param destination\n     * @returns {number}\n     */\n\n    public static routeDistance(origin: string, destination: string): number | void {\n        let linearDistance = Game.map.getRoomLinearDistance(origin, destination);\n        if (linearDistance >= 32) {\n            return linearDistance;\n        }\n\n        let allowedRooms = this.findRoute(origin, destination);\n        if (allowedRooms) {\n            return Object.keys(allowedRooms).length;\n        }\n    }\n\n    /**\n     * build a cost matrix based on structures in the room. Will be cached for more than one tick. Requires vision.\n     * @param room\n     * @param freshMatrix\n     * @returns {any}\n     */\n\n    public static getStructureMatrix(room: Room, freshMatrix?: boolean): CostMatrix {\n        if (!this.structureMatrixCache[room.name] || (freshMatrix && Game.time !== this.structureMatrixTick)) {\n            this.structureMatrixTick = Game.time;\n            let matrix = new PathFinder.CostMatrix();\n            this.structureMatrixCache[room.name] = Traveler.addStructuresToMatrix(room, matrix, 1);\n        }\n        return this.structureMatrixCache[room.name];\n    }\n\n    /**\n     * build a cost matrix based on creeps and structures in the room. Will be cached for one tick. Requires vision.\n     * @param room\n     * @returns {any}\n     */\n\n    public static getCreepMatrix(room: Room) {\n        //reset creep matrix at new tick\n        if (Game.time !== this.creepMatrixTick) {\n            this.creepMatrixCache = {};\n            this.creepMatrixTick = Game.time;\n        }\n\n        if (this.creepMatrixCache[room.name] == undefined ) {\n//            this.creepMatrixTick = Game.time;\n            this.creepMatrixCache[room.name] = Traveler.addCreepsToMatrix(room,\n                this.getStructureMatrix(room, true).clone());\n        }\n        return this.creepMatrixCache[room.name];\n    }\n\n    /**\n     * add structures to matrix so that impassible structures can be avoided and roads given a lower cost\n     * @param room\n     * @param matrix\n     * @param roadCost\n     * @returns {CostMatrix}\n     */\n\n    public static addStructuresToMatrix(room: Room, matrix: CostMatrix, roadCost: number): CostMatrix {\n\n        let impassibleStructures: Structure[] = [];\n        for (let structure of room.find<Structure>(FIND_STRUCTURES)) {\n            if (structure instanceof StructureRampart) {\n                if (!structure.my && !structure.isPublic) {\n                    impassibleStructures.push(structure);\n                }\n            } else if (structure instanceof StructureRoad) {\n                matrix.set(structure.pos.x, structure.pos.y, roadCost);\n            } else if (structure instanceof StructureContainer) {\n                matrix.set(structure.pos.x, structure.pos.y, 5);\n            } else {\n                impassibleStructures.push(structure);\n            }\n        }\n\n        for (let site of room.find(FIND_MY_CONSTRUCTION_SITES)) {\n            if (site.structureType === STRUCTURE_CONTAINER || site.structureType === STRUCTURE_ROAD\n                || site.structureType === STRUCTURE_RAMPART) { continue; }\n            matrix.set(site.pos.x, site.pos.y, 0xff);\n        }\n\n        for (let structure of impassibleStructures) {\n            matrix.set(structure.pos.x, structure.pos.y, 0xff);\n        }\n\n        return matrix;\n    }\n\n    /**\n     * add creeps to matrix so that they will be avoided by other creeps\n     * @param room\n     * @param matrix\n     * @returns {CostMatrix}\n     */\n\n    public static addCreepsToMatrix(room: Room, matrix: CostMatrix): CostMatrix {\n        room.find(FIND_CREEPS).forEach((creep: Creep) => matrix.set(creep.pos.x, creep.pos.y, 0xff) );\n        return matrix;\n    }\n\n    /**\n     * serialize a path, traveler style. Returns a string of directions.\n     * @param startPos\n     * @param path\n     * @param color\n     * @returns {string}\n     */\n\n    public static serializePath(startPos: RoomPosition, path: RoomPosition[], color = \"orange\"): string {\n        let serializedPath = \"\";\n        let lastPosition = startPos;\n        this.circle(startPos, color);\n        for (let position of path) {\n            if (position.roomName === lastPosition.roomName) {\n                new RoomVisual(position.roomName)\n                    .line(position, lastPosition, {color: color, lineStyle: \"dashed\"});\n                serializedPath += lastPosition.getDirectionTo(position);\n            }\n            lastPosition = position;\n        }\n        return serializedPath;\n    }\n\n    /**\n     * returns a position at a direction relative to origin\n     * @param origin\n     * @param direction\n     * @returns {RoomPosition}\n     */\n\n    public static positionAtDirection(origin: RoomPosition, direction: number): RoomPosition | void {\n        let offsetX = [0, 0, 1, 1, 1, 0, -1, -1, -1];\n        let offsetY = [0, -1, -1, 0, 1, 1, 1, 0, -1];\n        let x = origin.x + offsetX[direction];\n        let y = origin.y + offsetY[direction];\n        if (x > 49 || x < 0 || y > 49 || y < 0) { return; }\n        return new RoomPosition(x, y, origin.roomName);\n    }\n\n    /**\n     * convert room avoidance memory from the old pattern to the one currently used\n     * @param cleanup\n     */\n\n    public static patchMemory(cleanup = false) {\n        if (!Memory.empire) { return; }\n        if (!Memory.empire.hostileRooms) { return; }\n        let count = 0;\n        for (let roomName in Memory.empire.hostileRooms) {\n            if (Memory.empire.hostileRooms[roomName]) {\n                if (!Memory.rooms[roomName]) { Memory.rooms[roomName] = {} as any; }\n                Memory.rooms[roomName].avoid = 1;\n                count++;\n            }\n            if (cleanup) {\n                delete Memory.empire.hostileRooms[roomName];\n            }\n        }\n        if (cleanup) {\n            delete Memory.empire.hostileRooms;\n        }\n\n        console.log(`TRAVELER: room avoidance data patched for ${count} rooms`);\n    }\n\n    private static deserializeState(travelData: TravelData, destination: RoomPosition): TravelState {\n        let state = {} as TravelState;\n        if (travelData.state) {\n            state.lastCoord = {x: travelData.state[STATE_PREV_X], y: travelData.state[STATE_PREV_Y] };\n            state.cpu = travelData.state[STATE_CPU];\n            state.stuckCount = travelData.state[STATE_STUCK];\n            state.incomplete = travelData.state[STATE_INCOMPLETE]\n            state.destination = new RoomPosition(travelData.state[STATE_DEST_X], travelData.state[STATE_DEST_Y],\n                travelData.state[STATE_DEST_ROOMNAME]);\n        } else {\n            state.cpu = 0;\n            state.destination = destination;\n            state.incomplete = false;\n        }\n        return state;\n    }\n\n    private static serializeState(creep: Creep, destination: RoomPosition, state: TravelState, travelData: TravelData) {\n        travelData.state = [creep.pos.x, creep.pos.y, state.stuckCount, state.cpu, destination.x, destination.y,\n            destination.roomName, state.incomplete];\n    }\n\n    private static isStuck(creep: Creep, state: TravelState): boolean {\n        let stuck = false;\n        if (state.lastCoord !== undefined) {\n            if (this.sameCoord(creep.pos, state.lastCoord)) {\n                // didn't move\n                stuck = true;\n            } else if (this.isExit(creep.pos) && this.isExit(state.lastCoord)) {\n                // moved against exit\n                stuck = true;\n            }\n        }\n\n        return stuck;\n    }\n}\n\n// this might be higher than you wish, setting it lower is a great way to diagnose creep behavior issues. When creeps\n// need to repath to often or they aren't finding valid paths, it can sometimes point to problems elsewhere in your code\nconst REPORT_CPU_THRESHOLD = 1000;\n\nconst DEFAULT_MAXOPS = 20000;\nconst DEFAULT_STUCK_VALUE = 2;\nconst STATE_PREV_X = 0;\nconst STATE_PREV_Y = 1;\nconst STATE_STUCK = 2;\nconst STATE_CPU = 3;\nconst STATE_DEST_X = 4;\nconst STATE_DEST_Y = 5;\nconst STATE_DEST_ROOMNAME = 6;\nconst STATE_INCOMPLETE = 7;\n\n// assigns a function to Creep.prototype: creep.travelTo(destination)\nCreep.prototype.travelTo = function(destination: RoomPosition|{pos: RoomPosition}, options?: TravelToOptions) {\n    //if (options == undefined) options = {};\n    //if (!options.roomCallback && this.role != 'keeperkiller') options.roomCallback = matrix_AvoidKeeper;\n    return Traveler.travelTo(this, destination, options);\n};\n\n\n// this can be further optimised by also caching if there is vision.\nvar keeperMatrix_cache : {[key:string] : CostMatrix } = {};\nfunction matrix_AvoidKeeper (roomName: string, costMatrix: CostMatrix) {\n    let room = Game.rooms[roomName];\n    if (room) {\n        for(var invader of room.find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username == 'Source Keeper'}})) {\n            for (var x=-3; x <=3; x++) {\n                for (var y=-3; y <=3; y++) {\n                    costMatrix.set(invader.pos.x + x,invader.pos.y + y,255) // set square 3x3 around invader nonwalkable\n                }\n            }\n        }\n        for(var lair of room.find(FIND_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_KEEPER_LAIR} })) {\n            for (var x=-1; x <=1; x++) {\n                for (var y=-1; y <=1; y++) {\n                    costMatrix.set(lair.pos.x + x,lair.pos.y + y,255) // set square 3x3 around invader nonwalkable\n                }\n            }\n        }\n        keeperMatrix_cache[roomName] = costMatrix;\n    } else {\n        if (keeperMatrix_cache[roomName]) return keeperMatrix_cache[roomName];\n    }\n    return costMatrix;\n}\n","\"use strict\";\r\n\r\nvar log_enabled = [ '',\r\n//  'spawn.recyclecreeps',\r\n//    'spawn.expandcreep'\r\n//  'creep.runscout',\r\n//    'creep.rundefender'\r\n//    'creep.runstransporter',\r\n//      'creep.runkeeperkiller',\r\n//    'spawn.spawncreepbyrole',\r\n//    'creep.runworker',\r\n//      'creep.runattacker',\r\n      //'creep.runcolonist',\r\n//      'creep.dofindenergy'\r\n  'creep.dowork',\r\n//      'creep.fleefrom',\r\n//    'spawn.run',\r\n//    'room.findharvestrooms',\r\n//    'roomobject.buildpath',\r\n//    'room.run'\r\n//      'room.autobuild',\r\n      //'room.validbuildingspot',\r\n//      'room.findenergydroppoints'\r\n//  'structure.needsrepair'\r\n//  'matrix_avoidkeeper'\r\n//  'structureterminal.run'\r\n//  'colonize'\r\n  //'cleanmemory'\r\n//  'unclaimbases'\r\n  //'creep.dofindenergy'\r\n//  'traveler'\r\n  //'base.run'\r\n\r\n\r\n]\r\n\r\nvar log_names = [ //'harvesterW7N43_W7N43_8661'//'Worker7828959'\r\n  'Worker10700218'\r\n]\r\n\r\n  function log(caller: string, message: Object, name: string = '' ) {\r\n    if (log_names.length > 0 && name.length > 0) {\r\n      let notFound = true;\r\n      for (let log_name of log_names) if (log_name == name) notFound = false;\r\n      if (notFound) return;\r\n    }\r\n    for (var i=0;i<log_enabled.length;i++) if (caller == log_enabled[i]) console.log(caller + ':' + name +  ': ' + JSON.stringify(message));\r\n  }\r\n\r\n  export { log };\r\n","\"use strict\";\r\n\r\n\r\n\r\nmodule.exports = {\r\n    FLAG_DESTROY_PRIM: COLOR_RED,\r\n    FLAG_DESTROY_SEC: COLOR_WHITE,\r\n\r\n    FLAG_ATTACK_PRIM: COLOR_RED,\r\n    FLAG_ATTACK_SEC: COLOR_PURPLE,\r\n    FLAG_ATTACKWP_PRIM: COLOR_PURPLE,\r\n    FLAG_ATTACKWP_SEC: COLOR_BLUE,\r\n\r\n     getFlags (colorPrim, colorSec, startsWith ) {\r\n        var flags=[];\r\n        for(var flagname in Game.flags) {\r\n            var flag = Game.flags[flagname];\r\n            if (flag.color == colorPrim && flag.secondaryColor == colorSec  ) {\r\n                if (startsWith) {\r\n                    let flagStart = flagname.substring(0, startsWith.length);\r\n                    if (flagStart == startsWith) flags.push(flag);\r\n                } else flags.push(flag);\r\n            }\r\n        }\r\n        return flags;\r\n    },\r\n\r\n    getDestroyFlags() {\r\n        return this.getFlags(this.FLAG_DESTROY_PRIM, this.FLAG_DESTROY_SEC);\r\n    },\r\n\r\n    getAttackFlags() {\r\n        let flags = this.getFlags(this.FLAG_ATTACK_PRIM, this.FLAG_ATTACK_SEC);\r\n        flags.sort((flaga, flagb) => {return flaga.name > flagb.name})\r\n        return flags;\r\n    },\r\n\r\n    getAttackWPFlags(wpCode) {\r\n        let flags = this.getFlags(this.FLAG_ATTACKWP_PRIM, this.FLAG_ATTACKWP_SEC, wpCode);\r\n        flags.sort((flaga, flagb) => {return flaga.name > flagb.name})\r\n        return flags;\r\n    }\r\n}\r\n","\"use strict\";\r\n//require ('room');\r\nrequire ('roomobject');\r\nrequire ('structure');\r\nvar Traveler = require('Traveler');\r\nvar logger = require ('logger');\r\nvar myFlags = require('myflags');\r\n\r\nconst emergencyUpgradeMin = 3100;\r\nconst emergencyUpgradeMax = 5000;\r\nconst WORKER_IDLE_UPGRADE = 30000;\r\nconst TERMINAL_FILL = 75000;\r\nconst MY_SIGN = 'JDAZ: Autonomous AI 🐺'\r\nconst CREEP_DEFENSE_DISTANCE = 4;\r\nconst CONSTRUCTION_MIN_STORED_ENERGY = 4000; // minimum amount of stored energy for new construction to start. If less then this, workers will not construct. This prevents workers from eating\r\n                            // up all the energy that is needed for creep construction\r\n\r\nfunction matrix_AvoidKeeper (roomName, costMatrix) {\r\n    logger.log('matrix_avoidkeeper', roomName)\r\n    if (Game.rooms[roomName]) {\r\n        for(var invader of Game.rooms[roomName].find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username == 'Source Keeper'}})) {\r\n            for (var x=-3; x <=3; x++) {\r\n                for (var y=-3; y <=3; y++) {\r\n                    costMatrix.set(invader.pos.x + x,invader.pos.y + y,255) // set square 3x3 around invader nonwalkable\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return costMatrix;\r\n}\r\n\r\nCreep.prototype._say = Creep.prototype.say;\r\n\r\nCreep.prototype.say = function(message) {\r\n    //this._say(message);\r\n    return;\r\n}\r\n\r\n\r\nCreep.prototype.visualize = function(){\r\n    this.room.visual.text (this.memory.role.charAt(0).toUpperCase(), this.pos, {stroke: '#000000', font: '0.4', strokeWidth: 0.1})\r\n}\r\n\r\nCreep.prototype.run = function() {\r\n    this.visualize()\r\n    if (this.memory.recycle) {\r\n        this.recycle();\r\n        return;\r\n    }\r\n    if (this.memory.sleep) {\r\n        this.say('ZzZz')\r\n        return;\r\n    }\r\n\r\n    //ga naar ingeprogrammeerde bestemming;\r\n    if (this.memory.destination && this.memory.role != 'worker' && this.memory.role != 'scout' && this.room.name != this.memory.destination.roomName) {\r\n        this.say ('dest')\r\n        let destination = new RoomPosition(this.memory.destination.x, this.memory.destination.y, this.memory.destination.roomName)\r\n        this.travelTo (destination);\r\n        if (this.pos.isNearTo(destination)) delete this.memory.destination;\r\n        return;\r\n    }\r\n\r\n    switch (this.memory.role) {\r\n    case 'worker':\r\n        this.runWorker();\r\n        return;\r\n    case 'harvester':\r\n        this.runHarvester();\r\n        return;\r\n    case 'transporter':\r\n        this.runTransporter();\r\n        return;\r\n    case 'reserver':\r\n        this.runReserver();\r\n        return;\r\n    case 'upgrader':\r\n        this.runUpgrader();\r\n        return;\r\n    case 'filler':\r\n        this.runFiller();\r\n        return;\r\n    case 'scout':\r\n        this.runScout();\r\n        return;\r\n    case 'defender':\r\n        this.runDefender();\r\n        return;\r\n    case 'attacker':\r\n        this.runAttacker();\r\n        return;\r\n    case 'colonist':\r\n        this.runColonist();\r\n        return;\r\n    case 'reserver':\r\n        this.runReserver();\r\n        return;\r\n    case 'initializer':\r\n        this.runInitializer();\r\n        return;\r\n    case 'keeperkiller':\r\n        this.runKeeperKiller();\r\n        return;\r\n    }\r\n}\r\n\r\nCreep.prototype.runKeeperKiller = function() {\r\n    this.doHeal();\r\n    if (this.memory.targetRoomName != this.room.name) {\r\n        if (this.memory.birthTime == undefined) this.memory.birthTime = Game.time\r\n        this.travelTo(Game.atlas.getRoomCenter(this.memory.targetRoomName));\r\n        this.memory.travelTime = Game.time - this.memory.birthTime\r\n        return;\r\n    } else {\r\n        let hostile = this.pos.findClosestByPath(FIND_HOSTILE_CREEPS)\r\n        if (hostile) {\r\n            logger.log('runkeeperkiller', 'attacking ' + hostile.name)\r\n            let range = this.pos.getRangeTo(hostile.pos)\r\n            if (range == 5 && this.hits < this.hitsMax) return //\r\n            let options = {};\r\n            if (this.rangedAttack(hostile) == ERR_NOT_IN_RANGE) this.travelTo(hostile.pos, {avoidKeeper: false});\r\n            if (range < 3) this.fleeFrom(hostile);\r\n            //if (this.attack(hostile) == ERR_NOT_IN_RANGE) this.travelTo(hostile.pos, {avoidKeeper: false});\r\n        } else {\r\n            let lairs = this.room.find(FIND_STRUCTURES, {filter: o => {return o.structureType == STRUCTURE_KEEPER_LAIR}})\r\n            lairs.sort( (a,b) => {\r\n                if (a.ticksToSpawn < b.ticksToSpawn) return -1\r\n                if (a.ticksToSpawn > b.ticksToSpawn) return 1\r\n                return 0;\r\n            })\r\n            let dest = lairs[0].pos;\r\n            if (!this.pos.inRangeTo(dest,3)) this.travelTo(dest);\r\n        }\r\n    }\r\n    if (this.memory.travelTime + 150 + 50 <= this.ticksToLive) this.replace = true;\r\n    return;\r\n}\r\n\r\nCreep.prototype.runScout = function() {\r\n    logger.log('creep.runscout', 'Running scout ', this.name)\r\n    if (!this.firstRun) {\r\n        this.notifyWhenAttacked(false);\r\n        this.firstRun = false;\r\n    }\r\n    //this.room.memory.lastSeenByScout = Game.time;\r\n    let exits = Game.map.describeExits(this.room.name);\r\n    let destRoomName = this.memory.destRoomName;\r\n    if (destRoomName == this.room.name) destRoomName = undefined\r\n    if (destRoomName == undefined) {\r\n        logger.log ('creep.runscout', 'Checking new rooms', this.name)\r\n        let destRoomLastVisit = Game.time;\r\n        for (let exitKey in exits) {\r\n            let roomName = exits[exitKey]\r\n            logger.log ('creep.runscout', 'Checking ' + roomName, this.name)\r\n            //logger.log ('creep.runscout', Memory.rooms[roomName], this.name)\r\n            let scoutInfo = Game.atlas.getScoutInfo(roomName)\r\n            if (Game.map.isRoomAvailable(roomName) && scoutInfo) {\r\n                let lastSeenByScout = scoutInfo.lastSeen;\r\n                logger.log ('creep.runscout', 'room lastseen' + roomName + ' ' + lastSeenByScout, this.name)\r\n                if (lastSeenByScout == undefined) lastSeenByScout = 0;\r\n                if (lastSeenByScout < destRoomLastVisit) {\r\n                    destRoomName = roomName;\r\n                    destRoomLastVisit = lastSeenByScout;\r\n                }\r\n            } else if (Game.map.isRoomAvailable(roomName)  && Game.map.getRoomLinearDistance(roomName, this.memory.HomeRoomName)<=10) {//) { // never visited, max 10 rooms away\r\n                logger.log ('creep.runscout', 'No room memory new destination! ' + roomName, this.name)\r\n                destRoomName = roomName;\r\n                break;\r\n            }\r\n        }\r\n        if (destRoomName == undefined) {\r\n            logger.log ('creep.runscout', 'no room found, picking random', this.name)\r\n            let keys = Object.keys (exits);\r\n            let exitKey = keys[Math.floor(keys.length * Math.random())];\r\n            destRoomName = exits[exitKey];\r\n        }\r\n    }\r\n    this.memory.destRoomName = destRoomName;\r\n    logger.log ('creep.runscout', 'Moving to room ' + destRoomName, this.name)\r\n    //let nearInvader = (this.pos.findInRange(FIND_HOSTILE_CREEPS, 4).length > 0)?1:0;\r\n    //let exitArray = this.room.find(this.room.findExitTo(destRoomName));\r\n    //let dest = exitArray[Math.floor(exitArray.length/2)]\r\n    let dest = Game.atlas.getRoomCenter(destRoomName);\r\n    logger.log('creep.runscout', 'dest: ' + dest, this.name)\r\n    this.travelTo (dest);\r\n}\r\n\r\nCreep.prototype.runAttacker = function() {\r\n    /*\r\n    if (!this.memory.startAttack) {\r\n        if (this.pos.findInRange(FIND_MY_CREEPS,4,{filter: (creep) =>{return creep.memory.role == 'attacker' && creep.name != this.name}}).length > 0) {\r\n            this.memory.startAttack = true;\r\n            this.say('Go');\r\n        } else {\r\n            this.say('Wait');\r\n            return;\r\n        }\r\n    }*/\r\n\r\n    this.doHeal();\r\n\r\n\r\n    let attackFlags = myFlags.getAttackFlags();\r\n    let targetRoomName = this.memory.targetRoomName;\r\n\r\n\r\n\r\n    let hostileCreeps = this.pos.findInRange(FIND_HOSTILE_CREEPS,3);\r\n    if (hostileCreeps.length > 0) {\r\n        logger.log('creep.runattacker', 'hostile creeps, enganging')\r\n        let hostileCreep = this.pos.findClosestByPath(hostileCreeps);\r\n        if (this.pos.isNearTo(hostileCreep)) {\r\n            this.attack (hostileCreep);\r\n            return;\r\n        } else if (hostileCreep) {\r\n            this.travelTo (hostileCreep);\r\n            return;\r\n        }\r\n    }\r\n\r\n    // fodder niet te dicht bij laten komne\r\n    if( this.body.length == 1 && attackFlags.length > 0) {\r\n        if (this.room.name == targetRoomName){\r\n\r\n            // zelfmoord plegen als hij in de weg staat voor dikke creep\r\n             if(this.pos.findInRange(FIND_MY_CREEPS,1,{filter: (creep) =>{return creep.memory.role == 'attacker' && creep.body.length > 1}}).length>0) {\r\n                 this.suicide();\r\n             } else { // anders vijandelijke creeps verstikken\r\n                this.doAttack();\r\n             }\r\n             return;\r\n        }\r\n    }\r\n\r\n    // towers aanvullen\r\n    let tower = this.pos.findClosestByPath(FIND_HOSTILE_STRUCTURES,{filter: (structure) => {return structure.structureType == STRUCTURE_TOWER}});\r\n    if (tower) {\r\n        if (this.pos.isNearTo(tower)) {\r\n            this.attack(tower);\r\n            return;\r\n        } else {\r\n            this.travelTo(tower);\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    // target aanvallen\r\n    if (this.pos.isNearTo(attackFlags[0])) {\r\n        let structure = attackFlags[0].pos.getStructure();\r\n        if (structure) {\r\n            this.attack(structure);\r\n            return;\r\n        } else {\r\n            attackFlags[0].remove();\r\n            return;\r\n        }\r\n    }\r\n\r\n    if (!this.memory.attackWP) this.memory.attackWP = 0\r\n    let wpFlags = myFlags.getAttackWPFlags(this.memory.HomeRoomName);\r\n    if (this.memory.attackWP < wpFlags.length) {\r\n        if (this.pos.isNearTo(wpFlags[this.memory.attackWP])) this.memory.attackWP++;\r\n    }\r\n    if (this.memory.attackWP < wpFlags.length) {\r\n        logger.log('creep.runattacker', 'moving to attackWPflag ' +wpFlags[this.memory.attackWP].pos);\r\n        this.travelTo(wpFlags[this.memory.attackWP], {range: 1,costCallback: matrix_AvoidKeeper});\r\n        return;\r\n    }\r\n\r\n    if (attackFlags[0]) {\r\n        logger.log('creep.runattacker', this.name + ' moving to attackflag ' + attackFlags[0].pos);\r\n        this.travelTo(attackFlags[0],{range: 1, costCallback: matrix_AvoidKeeper});\r\n    }    else {\r\n        logger.log ('doing generic attack')\r\n        this.doAttack();\r\n    }\r\n\r\n    //indien geen attackflag, dan naar target room gaan\r\n    if (attackFlags == undefined) {\r\n        if (this.doAttack()) {\r\n            return;\r\n        } else {\r\n            this.travelTo (Game.atlas.getRoomCenter(targetRoomName))\r\n        }\r\n    }\r\n\r\n    return;\r\n}\r\n\r\nCreep.prototype.runColonist = function() {\r\n    //console.log ('creep.colonist', 'RUNNING COLONIST ' +this.name + ' at ' +this.pos)\r\n//    var redFlags = []; // attack flags\r\n//    var yellowFlags = []; // colonize flag\r\n//    var curFlag = this.memory.curFlag;\r\n    var hasClaimPart = false;\r\n    var hasAttackPart = false;\r\n    for (var i=0; i < this.body.length;i++) {\r\n        if (this.body[i].type == CLAIM) hasClaimPart = true;\r\n        if (this.body[i].type == ATTACK) hasAttackPart = true;\r\n    }\r\n/*    if (curFlag == undefined) curFlag = 0;\r\n    for (var flagname in Game.flags) {\r\n        var flag = Game.flags[flagname]\r\n        if (flag.color==COLOR_YELLOW && flag.name.startsWith( this.memory.HomeRoomName)) yellowFlags.push(flag);\r\n        if (flag.color==COLOR_RED) redFlags.push(flag);\r\n    }\r\n*/\r\n    if (Memory.colRoom == undefined ) return;\r\n    logger.log('creep.runcolonist', 'running colonist ' + this.name)\r\n\r\n\r\n\r\n    var targetRoomName = Memory.colRoom;\r\n    let targetRoom = Game.rooms[targetRoomName];\r\n\r\n    //indien room niet zichtbaar, er naar toe moven\r\n    if (targetRoom != this.room) {\r\n        this.say('C');\r\n        this.travelTo(new RoomPosition(Memory.colX, Memory.colY, Memory.colRoom));\r\n        return;\r\n    }\r\n\r\n    //console.log ( hasClaimPart)\r\n    // indien room van ander, attacken\r\n    //console.log (targetRoom.controller.me)\r\n    if (hasClaimPart && !targetRoom.controller.my && targetRoom.controller.owner) {\r\n        //console.log ('attacking controller')\r\n        if (this.attackController(targetRoom.controller) == ERR_NOT_IN_RANGE) this.travelTo(targetRoom.controller);\r\n        return;\r\n    }\r\n\r\n    // indien room niet van mij, claimen\r\n    if (hasClaimPart && !targetRoom.controller.my) {\r\n        //console.log ('claiming controller')\r\n        if (this.claimController(targetRoom.controller)== ERR_NOT_IN_RANGE) {\r\n            this.travelTo(targetRoom.controller);\r\n            this.say ('controller')\r\n        }\r\n        return;\r\n    }\r\n\r\n    if (targetRoom.controller.my && this.room.name == targetRoomName) {\r\n        // controller is van mij. yellow flag verwijderen, spawn building site plaatsen en een worker worden.\r\n        this.travelTo(targetRoom.controller);\r\n        targetRoom.createConstructionSite(Memory.colX, Memory.colY,STRUCTURE_SPAWN);\r\n        this.memory.role = 'worker';\r\n        this.memory.HomeRoomName = targetRoomName;\r\n        return;\r\n    } else {\r\n        // move naar controller\r\n        //console.log ('moving to controller')\r\n        this.travelTo(targetRoom.controller);\r\n        this.say('zz')\r\n        return;\r\n    }\r\n}\r\n\r\nCreep.prototype.runFiller = function () {\r\n    this.idle = false;\r\n    if (this.carry.energy == 0)\r\n        this.memory.state = 'findEnergy';\r\n    if (this.carry.energy == this.carryCapacity)\r\n        this.memory.state = 'doWork';\r\n\r\n    switch(this.memory.state) {\r\n        case 'findEnergy':\r\n            this.doFindEnergy(this);\r\n            return;\r\n        case 'doWork':\r\n            if (this.doFill()) return;\r\n            this.memory.state = 'findEnergy'\r\n            return;\r\n    }\r\n}\r\n\r\nCreep.prototype.doFill = function () {\r\n    //returns true als hij kan fillen, anders false als er niets te vullen valt.\r\n\r\n\r\n    var creep = this;\r\n    var target;\r\n\r\n    //energie naar toren indien er een invader is\r\n    if (this.room.getInvader() !== undefined) {\r\n        target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n            filter: (structure) => {\r\n                return ((    structure.structureType == STRUCTURE_TOWER\r\n                            ) && structure.energy  < structure.energyCapacity)\r\n                }\r\n            });\r\n    }\r\n\r\n    //energie brengen naar spawn en link\r\n    if (target == undefined) {\r\n        let targets = this.room.find(FIND_STRUCTURES, {\r\n        filter: (structure) => {\r\n            return ((    structure.structureType == STRUCTURE_EXTENSION\r\n                    || structure.structureType == STRUCTURE_SPAWN\r\n                        ) && structure.energy  < structure.energyCapacity)\r\n            }\r\n        });\r\n        if (this.room.storage && this.memory.role == 'filler') {\r\n            let link = this.room.storage.pos.getNearestLink()\r\n            if (link && link.energy < link.energyCapacity) targets.push(link);\r\n        }\r\n        target = this.pos.findClosestByPath(targets);\r\n    };\r\n\r\n    //energie brengen naar toren\r\n    if (target == undefined) {\r\n        target = creep.pos.findClosestByPath(FIND_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return ((    structure.structureType == STRUCTURE_TOWER\r\n                                    ) && structure.energy < structure.energyCapacity)\r\n                        }\r\n                    });\r\n    }\r\n\r\n\r\n    //energie brengen naar terminal\r\n    if (target == undefined && this.room.controller && this.room.controller.level >= 8) {\r\n        target = creep.pos.findClosestByPath(FIND_MY_STRUCTURES, {\r\n                    filter: (structure) => {\r\n                        return ((    structure.structureType == STRUCTURE_TERMINAL\r\n                                    ) && _.sum(structure.store) < TERMINAL_FILL)\r\n                        }\r\n                    });\r\n    }\r\n\r\n    // indien er een grote stapel losse energie is, de storage gaan vullen\r\n    if (target == undefined) {\r\n        let largeDroppedEnergy = creep.room.find(FIND_DROPPED_RESOURCES, {filter: (dropped) => {return dropped.amount > 2000\r\n            && dropped.resourceType == RESOURCE_ENERGY\r\n            }});\r\n        if (largeDroppedEnergy.length>0) {\r\n            target = creep.room.storage;\r\n        }\r\n    }\r\n\r\n    if (target) {\r\n    //console.log ('target: ' + target + ' energy: ' +target.energy + ' reserved: ' + target.reservedEnergy + ' capacity: ' + target.energyCapacity);\r\n        if (creep.transfer(target, RESOURCE_ENERGY)==ERR_NOT_IN_RANGE) {\r\n            creep.travelTo(target,{visualizePathStyle: {stroke: '#ffffff'}});\r\n        }\r\n            //            creep.say('W');\r\n        return true;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nCreep.prototype.doAttack = function(){\r\n    var hostilecreep = this.pos.getInvader();\r\n    if (hostilecreep == undefined) hostilecreep = this.pos.findClosestByPath(FIND_HOSTILE_STRUCTURES,{filter: (structure) => {structure.structureType != STRUCTURE_CONTROLLER}});\r\n    if (hostilecreep) {\r\n        //console.log ('creep '+ this.name + ' attacking ' + hostilecreep)\r\n        this.rangedAttack(hostilecreep);\r\n        this.attack(hostilecreep);\r\n        if (!this.pos.isNearTo(hostilecreep)) this.travelTo(hostilecreep);\r\n        this.say('A')\r\n        return true;\r\n    } else\r\n    {\r\n        return false;\r\n    }\r\n}\r\n\r\nCreep.prototype.doHeal = function() {\r\n    let hasHeal=false;\r\n    for (let bodypart of this.body) if (bodypart.type == HEAL) hasHeal = true;\r\n    if (hasHeal){\r\n        let woundedCreeps = this.pos.findInRange(FIND_MY_CREEPS, 3, {filter: (creep) => {return creep.hits < creep.hitsMax}});\r\n        if (woundedCreeps.length > 0) this.heal( this.pos.findClosestByRange(woundedCreeps));\r\n    }\r\n}\r\n\r\nCreep.prototype.autoBuild = function() {\r\n//    console.log('CREEP AUTOBUILD')\r\n    //if (this.room.find(FIND_MY_CONSTRUCTION_SITES).length > 0) return //niet autobouwen als er nog iets te bouwen is;\r\n    var role = this.memory.role;\r\n    if (role == 'transporter' || role == 'courier') {\r\n        if (this.pos.lookFor(LOOK_STRUCTURES).length == 0) {\r\n//            this.room.createConstructionSite(this.pos,STRUCTURE_ROAD);\r\n        }\r\n    }\r\n\r\n    if (role == 'harvester' && this.pos.findInRange(FIND_SOURCES,1).length>0 ) {\r\n        if (this.pos.findInRange(FIND_STRUCTURES, 2, {filter: (structure) => {return structure.structureType == STRUCTURE_CONTAINER}}).length == 0)\r\n            if (this.pos.findInRange(FIND_CONSTRUCTION_SITES,2, {filter: (csite) => {return csite.structureType == STRUCTURE_CONTAINER}}).length == 0) {\r\n//                this.room.createConstructionSite(this.pos,STRUCTURE_CONTAINER);\r\n            }\r\n    }\r\n\r\n}\r\n\r\nCreep.prototype.runUpgrader = function() {\r\n     this.idle = false;\r\n    if (this.carry.energy == 0)\r\n        this.memory.state = 'findEnergy';\r\n    if (this.carry.energy == this.carryCapacity)\r\n        this.memory.state = 'doWork';\r\n\r\n    switch(this.memory.state) {\r\n        case 'findEnergy':\r\n            this.doFindEnergy(this);\r\n            return;\r\n        case 'doWork':\r\n            this.doUpgrade(this);\r\n            return;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nCreep.prototype.doUpgrade = function() {\r\n    switch (this.upgradeController(this.room.controller)) {\r\n        case ERR_NOT_IN_RANGE:\r\n            this.travelTo(this.room.controller);\r\n            return;\r\n    }\r\n}\r\n\r\nCreep.prototype.runReserver = function() {\r\n//    console.log ('running scout' + this.name + 'in room ' +this.room)\r\n    var roomName = this.memory.targetRoomName;\r\n    var room = Game.rooms[roomName]\r\n    if (this.room.controller && (!this.room.controller.sign || this.room.controller.sign.text != MY_SIGN ) && this.body.length > 1) {\r\n        logger.log('creep.runreserver', this.room.controller.sign);\r\n        if (this.signController(this.room.controller, MY_SIGN) == ERR_NOT_IN_RANGE ) {\r\n            this.travelTo(this.room.controller.pos)\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    if (room && room.controller) {\r\n        if (this.body.length == 1 && room.controller && !this.pos.isNearTo(room.controller.pos)) {\r\n            this.travelTo(room.controller.pos);\r\n        }\r\n        if (room.controller && room.controller.owner && !room.controller.my) {\r\n            if (this.attackController(room.controller) == ERR_NOT_IN_RANGE) {\r\n                this.travelTo(room.controller.pos);\r\n            }\r\n        } else if (this.reserveController(room.controller) == ERR_NOT_IN_RANGE) {\r\n            this.travelTo(room.controller.pos);\r\n            //console.log('going to controller')\r\n        } else if(room.controller == undefined) {\r\n            if (this.travelTo(Game.atlas.getRoomCenter(roomName))!= OK) this.memory.sleep = true;\r\n        }\r\n    }\r\n    else {\r\n        if (roomName) {\r\n            this.travelTo(Game.atlas.getRoomCenter(roomName), );\r\n        }\r\n    };\r\n\r\n};\r\n\r\nCreep.prototype.runDefender = function() {\r\n    logger.log ('creep.rundefender', this.name)\r\n    this.doHeal();\r\n    var room = this.room;\r\n    // defend this room\r\n    if(this.room.find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username != 'Source Keeper'}}).length>0) {\r\n//        console.log ('defending this room')\r\n        this.doAttack();\r\n        return;\r\n    } else {\r\n        //defend other harvest rooms\r\n        var harvestRooms = Game.rooms[this.memory.HomeRoomName].findHarvestRooms();\r\n        for(var i=0; i<harvestRooms.length;i++) {\r\n            var room = Game.rooms[harvestRooms[i]];\r\n            var hostileCreeps = [];\r\n            if (room) hostileCreeps = room.find(FIND_HOSTILE_CREEPS, {filter: (creep) => {return creep.owner.username != 'Source Keeper'}});\r\n            if (hostileCreeps.length>0){\r\n                this.memory.attackRoom = room.name;\r\n                this.travelTo(hostileCreeps[0]);\r\n                return;\r\n            }\r\n        }\r\n        if (this.memory.attackRoom) {\r\n            this.travelTo(Game.atlas.getRoomCenter(this.memory.attackRoom));\r\n            if (this.room.name == this.memory.attackRoom) delete this.memory.attackRoom;\r\n            return;\r\n        } else {\r\n            //niks meer te doen, recyclen. prevent recycling\r\n            this.recycle();\r\n            /*\r\n            //destroyflags kapot maken\r\n            logger.log('creep.rundefender', myFlags.getDestroyFlags())\r\n\r\n            for(var flag of myFlags.getDestroyFlags()) {\r\n                logger.log('creep.rundefender', 'checking destroy flag '+flag.name + flag.pos.roomName + this.room.name)\r\n                logger.log('creep.rundefender', Game.map.findRoute(this.room.name, flag.pos.roomName))\r\n                if (Game.map.findRoute(this.room.name, flag.pos.roomName).length <= CREEP_DEFENSE_DISTANCE) {\r\n                    if(!this.pos.isNearTo(flag.pos)) {\r\n                        this.travelTo(flag);\r\n                    }\r\n                    if (flag.room) {\r\n                        var structure = flag.pos.getStructure();\r\n                        if (structure) {\r\n                            this.attack(structure);\r\n                            this.rangedAttack(structure);\r\n                            return;\r\n                        } else {\r\n                            flag.remove();\r\n                        }\r\n                    }\r\n                }\r\n            } */\r\n\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nCreep.prototype.recycle = function() {\r\n    this.memory.recycle = true;\r\n    var spawn = Game.rooms[this.memory.HomeRoomName].getSpawn()\r\n    var target = spawn.getContainer();\r\n    if (!target) target = spawn;\r\n    if (spawn.recycleCreep(this) == ERR_NOT_IN_RANGE) this.travelTo(target);\r\n}\r\n\r\nCreep.prototype.runTransporter = function() {\r\n    if (this.memory.timeStartTransport == undefined) this.memory.timeStartTransport = Game.time;\r\n\r\n    // vluchten van keepers\r\n    if (this.room.isSKLair()) {\r\n        if (this.fleeFromKeeper()) return true;\r\n    }\r\n\r\n\r\n    var source =  Game.getObjectById(this.memory.targetSourceId);\r\n    var container = source?source.getContainer():undefined;\r\n    if (!(container instanceof StructureContainer)) container = undefined\r\n\r\n    if (_.sum(this.carry) == 0 || _.sum(this.carry) < this.carryCapacity && container && container.pos.isNearTo(this.pos) ) { // leeg, energy ophalen\r\n        //logger.log('creep.runstransporter', 'going to source ' + source)\r\n        if (source && container) {\r\n            //wachten indien je naast een transporter staat die aan het loaden is\r\n //           if (this.pos.findInRange(FIND_MY_CREEPS, 1, {filter: (creep) => {   let carry = _.sum(creep.carry);\r\n//                                                                            return creep.name != this.name && creep.memory.role == 'transporter' && carry > 0 && carry < creep.carryCapacity && creep.memory.targetSourceId == this.memory.targetSourceId\r\n//                                                                        }}).length > 0 ) return;\r\n            let energy = container.pos.lookFor(LOOK_ENERGY)[0];\r\n            if (!this.pos.isNearTo(container.pos)) this.travelTo(container.pos);\r\n            else {\r\n                let energyPickedUp = 0;\r\n                if (energy && energy.amount) {\r\n                    this.pickup(energy);\r\n                    energyPickedUp = energy.amount;\r\n                }\r\n                let withDrawAmount = Math.max (Math.min(this.carryCapacity - _.sum(this.carry) - energyPickedUp, container.store.energy), 0);\r\n                if (withDrawAmount > 0 ) this.withdraw(container, RESOURCE_ENERGY, withDrawAmount);\r\n                if (_.sum(this.carry) == 0){\r\n                    logger.log('creep.runstransporter', this.name + ' picking up energy in ' +this.room.name);\r\n                    logger.log('creep.runstransporter', 'withdrawamount: ' + withDrawAmount);\r\n                    let newLoad = container.store?(container.store.energy||0):0;\r\n                    if (energy) newLoad += energy.amount;\r\n                    logger.log('creep.runstransporter', 'energy?energy.amount:0: ' + (energy==undefined?0:energy.amount) );\r\n\r\n                    logger.log('creep.runstransporter', 'newload: ' + newLoad);\r\n                    if (!Memory.transportLoad[this.memory.targetSourceId]) Memory.transportLoad[this.memory.targetSourceId] =  newLoad;\r\n                    Memory.transportLoad[this.memory.targetSourceId] = Memory.transportLoad[this.memory.targetSourceId] /100 * 99 + newLoad/100;\r\n                    logger.log('creep.runstransporter', 'newtransportload: ' + Memory.transportLoad[this.memory.targetSourceId])\r\n                }\r\n            }\r\n        } else {\r\n            if (this.memory.sourceRoomName) this.travelTo (Game.atlas.getRoomCenter(this.memory.sourceRoomName))\r\n        }\r\n    }\r\n    else { // vol energie droppen\r\n/*        //energie pakken die naast hem ligt\r\n        if (_.sum(this.carry) < this.carryCapacity) {\r\n            let energy = this.pos.findInRange(FIND_DROPPED_RESOURCES,{filter: (resource) => {return resource.resourceType == RESOURCE_ENERGY}}, 1)[0];\r\n            if (energy) {\r\n                this.withdraw(energy);\r\n                return;\r\n            }\r\n        }\r\n*/\r\n        //energie brengen naar worker in sourcekeeper lair\r\n        if (Game.rooms[this.memory.HomeRoomName].controller.level < 7 && this.room.isSKLair() && this.room.find(FIND_CONSTRUCTION_SITES).length>0 ) {\r\n            let workerCreep = this.pos.findClosestByPath(FIND_MY_CREEPS, {filter: (creep) => {return creep.memory.role == 'worker'}})\r\n            if (workerCreep) {\r\n                if (this.pos.isNearTo(workerCreep)) {\r\n                    this.drop(RESOURCE_ENERGY);\r\n                } else {\r\n                    this.travelTo(workerCreep);\r\n                }\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (Memory.transportLoad == undefined) Memory.transportLoad = new Object;\r\n        var homeroom = Game.rooms[this.memory.HomeRoomName];\r\n\r\n        let container;\r\n        if (this.memory.dropPointID) {\r\n            container = Game.getObjectById (this.memory.dropPointID);\r\n        } else {\r\n            if (this.room.name != this.memory.HomeRoomName ){\r\n                this.travelTo(Game.rooms[this.memory.HomeRoomName].getSpawn());\r\n            } else {\r\n                container = this.pos.findClosestByPath(homeroom.findEnergyDropPoints(this.carry.energy));\r\n                //if (container == undefined) container = homeroom.storage;\r\n                if (container) this.memory.dropPointID = container.id;\r\n            }\r\n        }\r\n\r\n        // uitrekenen of hij vervangen moet worden\r\n        var lastTransportTime = this.memory.timeLastTransport;\r\n        var transportTime = Game.time - this.memory.timeStartTransport;\r\n        if (this.memory.replace == undefined && this.carry.energy / this.carryCapacity > 0.7 && lastTransportTime * 1.05 + (lastTransportTime - transportTime) + this.getSpawnTime() > this.ticksToLive\r\n            && this.carryCapacity * 1.5 > Game.rooms[this.memory.HomeRoomName].getEnergyCapacityAvailable())\r\n        {\r\n            this.memory.replace = true;\r\n            for (let creepName in Game.creeps) {\r\n                let creep = Game.creeps[creepName];\r\n                if (creep.name != this.name && creep.memory.targetSourceId == this.memory.targetSourceId && this.memory.role == 'transporter') this.memory.replace = false;\r\n            }\r\n        }\r\n\r\n        switch (this.transfer(container, RESOURCE_ENERGY)) {\r\n            case OK:\r\n                delete this.memory.dropPointID;\r\n                if (transportTime * 1.05 > this.ticksToLive) {\r\n                    this.recycle();\r\n                } else {\r\n                    this.memory.timeLastTransport = transportTime;\r\n                    this.memory.timeStartTransport = Game.time;\r\n                }\r\n                return;\r\n            case ERR_NOT_IN_RANGE:\r\n                this.travelTo(container.pos, {reusePath: 5, ignoreCreeps: false});\r\n                return;\r\n            case ERR_FULL:\r\n                //this.drop(RESOURCE_ENERGY);\r\n                this.say ('FULL');\r\n                delete this.memory.dropPointID;\r\n                return;\r\n        }\r\n    }\r\n}\r\n\r\nCreep.prototype.getSpawnTime = function() {\r\n    return this.body.length * 3;\r\n}\r\n\r\nCreep.prototype.runWorker = function () {\r\n    this.idle = false;\r\n\r\n    if (!this.room.isSKLair() && this.memory.birthRole == 'colonist' && this.room.find(FIND_HOSTILE_CREEPS).length>0){\r\n        var hasAttackPart = false;\r\n        for (var i=0; i < this.body.length;i++) {\r\n            if (this.body[i].type == ATTACK) hasAttackPart = true;\r\n        }\r\n        if (hasAttackPart) this.doAttack();\r\n        return;\r\n    }\r\n\r\n    if (this.carry.energy == 0)\r\n        this.memory.state = 'findEnergy';\r\n    if (this.carry.energy == this.carryCapacity)\r\n        this.memory.state = 'doWork';\r\n\r\n    switch(this.memory.state) {\r\n        case 'findEnergy':\r\n            this.doFindEnergy(this);\r\n            break;\r\n        case 'doWork':\r\n            this.doWork(this);\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nCreep.prototype.fleeFromKeeper = function() {\r\n    let keeper = this.pos.findInRange(FIND_HOSTILE_CREEPS, 5)[0];\r\n    if (keeper == undefined) keeper = this.pos.findInRange(FIND_STRUCTURES, 5, {filter: o=> {return o.structureType == STRUCTURE_KEEPER_LAIR && o.ticksToSpawn <= 5}})[0];\r\n    if (keeper && keeper.pos.inRangeTo(this.pos,4)) {\r\n        this.fleeFrom(keeper);\r\n    }\r\n    if (keeper) return true;\r\n}\r\n\r\nCreep.prototype.runHarvester = function() {\r\n    if (this.memory.timeStartTransport == undefined) this.memory.timeStartTransport = Game.time;\r\n\r\n    // vluchten van keepers\r\n    if (this.room.isSKLair()) {\r\n        if (this.fleeFromKeeper()) return true;\r\n    }\r\n\r\n\r\n    //console.log ( 'running harvester ' +this.name)\r\n    var sourceId = this.memory.targetSourceId;\r\n//    if (sourceId === undefined) {\r\n//        sourceId = this.findSource().id;\r\n//        this.memory.sourceId = sourceId;\r\n//    }\r\n\r\n\r\n    var source = Game.getObjectById(sourceId);\r\n    // move naar source of anders container bij source\r\n    var container;\r\n    if (source) container = source.getContainer();\r\n    var pos;\r\n    if (container) pos = container.pos;\r\n    else if (source) pos = source.pos;\r\n    if (pos == undefined && this.memory.targetRoomName) pos = Game.atlas.getRoomCenter(this.memory.targetRoomName)\r\n\r\n    if (this.memory.timeLastTransport == undefined) {\r\n        this.memory.timeLastTransport = Game.time - this.memory.timeStartTransport;\r\n    }\r\n\r\n\r\n    if (!this.pos.isEqualTo(pos)) this.travelTo(pos);\r\n    else if (this.harvest(source) == OK ) {\r\n        if (!this.memory.timeLastTransport) this.memory.timeLastTransport = Game.time - this.memory.timeStartTransport;\r\n        let scoutInfo = Game.atlas.getScoutInfo(this.room.name);\r\n        scoutInfo.lastHarvest = Game.time;\r\n        this.pos.createConstructionSite(STRUCTURE_CONTAINER);\r\n    }\r\n    let resource = this.pos.lookFor(LOOK_ENERGY)[0];\r\n/*    if (resource){\r\n        this.pickup(resource);\r\n        this.drop(RESOURCE_ENERGY);\r\n    }\r\n*/\r\n    //container bouwen / repairen indien nodig\r\n    if (container && container.hits < container.hitsMax) this.repair(container)\r\n    var constructionSite = this.pos.lookFor(LOOK_CONSTRUCTION_SITES)[0]\r\n    if (constructionSite) this.build(constructionSite)\r\n\r\n\r\n\r\n    // vervangen indien bijna dood\r\n    if (this.memory.timeLastTransport + this.getSpawnTime() > this.ticksToLive) {\r\n        this.memory.replace = true;\r\n        if(this.pos.findInRange(FIND_MY_CREEPS,1,{filter: (creep) => {return creep.memory.role == 'harvester' && creep.memory.targetSourceId == this.memory.targetSourceId}}).length>1) this.suicide();\r\n    }\r\n\r\n    // room markeren met homeroom\r\n    this.room.memory.HomeRoomName = this.memory.HomeRoomName;\r\n\r\n}\r\n\r\nCreep.prototype.fleeFrom = function(object) {\r\n    logger.log ('creep.fleefrom' , this.name + ' fleeing')\r\n    logger.log('creep.fleefrom', 'fleeing from' + object)\r\n    let path = PathFinder.search(this.pos, {pos: object.pos, range: 5}, {flee:true})\r\n    logger.log ('creep.fleefrom', path);\r\n    let result = this.moveByPath(path.path, {flee:true});\r\n    logger.log ('creep.fleefrom', result)\r\n    this.say ('FLEE')\r\n}\r\n\r\nCreep.prototype.doFindEnergy = function () {\r\n    logger.log('creep.dofindenergy', 'findenergy', this.name);\r\n    var creep = this;\r\n    // beschikbare energie zoeken\r\n\r\n    // if not a filler, prefer larger energy farther away.\r\n    let largeDroppedEnergy;\r\n    if (this.memory.role != 'filler') largeDroppedEnergy = creep.pos.findClosestByPath(FIND_DROPPED_RESOURCES, {filter: (dropped) => {return dropped.amount > 2000\r\n                                                                                                                                        && dropped.resourceType == RESOURCE_ENERGY\r\n                                                                                                                                        && !(dropped.pos.findInRange(FIND_HOSTILE_CREEPS,3).length>0)\r\n                                                                                                                                        }});\r\n\r\n    var droppedEnergy = creep.pos.findClosestByPath(FIND_DROPPED_RESOURCES, {filter: (dropped) => {return dropped.amount  >= 50\r\n                                                                                                && dropped.resourceType == RESOURCE_ENERGY\r\n                                                                                                && !(dropped.pos.findInRange(FIND_HOSTILE_CREEPS,3).length>0)\r\n                                                                                            }});\r\n    var tombstone = creep.pos.findClosestByPath(FIND_TOMBSTONES, {filter: (tombstone) => {return tombstone.store.energy  >= 50}})\r\n    var container = creep.pos.findClosestByPath(FIND_STRUCTURES, {filter: (structure) => {\r\n        return (structure.structureType == STRUCTURE_CONTAINER\r\n        || structure.structureType == STRUCTURE_STORAGE\r\n        || structure.structureType == STRUCTURE_TERMINAL// && (_.sum(structure.store) > TERMINAL_FILL || !structure.isActive() || this.controller.level < 8)\r\n        || (structure.structureType == STRUCTURE_LINK && this.memory.role != 'filler')\r\n        ) && (structure.store && structure.store.energy >= 100 || structure.energy && structure.energy >= 100)\r\n        }});\r\n\r\n    //valide targets in array stoppen\r\n    var targets = []\r\n    if (largeDroppedEnergy) targets = targets.concat(largeDroppedEnergy);\r\n    else {\r\n        if (droppedEnergy) targets = targets.concat(droppedEnergy);\r\n        if (tombstone) targets = targets.concat(tombstone);\r\n        if (container) targets = targets.concat(container);\r\n    };\r\n\r\n    var target = creep.pos.findClosestByPath(targets) // dichtbijzijne\r\n    logger.log('creep.dofindenergy', target, this.name);\r\n\r\n    if (target ) {\r\n\r\n        if (target instanceof Resource) {\r\n            if (creep.pickup(droppedEnergy) == ERR_NOT_IN_RANGE) {\r\n                creep.travelTo(droppedEnergy.pos);\r\n                creep.say ('🤜E' + droppedEnergy.pos.x +' '+ droppedEnergy.pos.y);\r\n            };\r\n            return;\r\n        }\r\n\r\n        // energie uit tombstone\r\n        if (tombstone == target) {\r\n            if (creep.withdraw(tombstone,RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {\r\n                creep.travelTo(tombstone.pos);\r\n                creep.say ('🤜T');\r\n                logger.log ('creep.dofindenergy' , 'picking up endergy from ts ' +tombstone.name   )\r\n            }\r\n        return;\r\n        }\r\n\r\n        if (container == target) {\r\n            if (creep.withdraw(container, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE )\r\n                this.say ('container')\r\n                creep.travelTo(container.pos);\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n    //in source keeper lairs niet vullen\r\n    if (this.room.isSKLair()) {\r\n        creep.idle=true;\r\n        creep.travelTo(Game.rooms[this.memory.HomeRoomName].controller.pos);\r\n        creep.say('home')\r\n        return;\r\n    }*/\r\n\r\n    // energie vinden bij source\r\n    let source;\r\n    if (this.room.isSKLair()) {\r\n        source = creep.pos.findClosestByPath(FIND_SOURCES_ACTIVE, {filter: o => { return o.pos.findInRange(FIND_HOSTILE_CREEPS,4).length == 0}});\r\n    } else {\r\n        source = creep.pos.findClosestByPath(FIND_SOURCES_ACTIVE);\r\n    }\r\n\r\n    if (source) {\r\n        if (creep.harvest(source) == ERR_NOT_IN_RANGE) {\r\n            creep.travelTo(source.pos,{visualizePathStyle: {stroke: '#ffff00'}})\r\n            creep.say ('F');\r\n        }\r\n        var container = source.getContainer();\r\n        return;\r\n    }\r\n\r\n    // geen energie gevonden, creep is idle\r\n    creep.say ('😴');\r\n    if (this.room.name != this.memory.HomeRoomName) {\r\n        creep.travelTo(Game.rooms[this.memory.HomeRoomName].controller.pos);\r\n        creep.say('home')\r\n    }\r\n    creep.idle = true;\r\n}\r\n\r\nCreep.prototype.doWork = function() {\r\n    var creep = this;\r\n\r\n\r\n    //Emergency controller upgrade!\r\n    target = creep.room.controller;\r\n    if (target && target.ticksToDowngrade <= emergencyUpgradeMin && target.my) this.room.memory.emergencyUpgrade = true;\r\n    if (target && target.ticksToDowngrade >= emergencyUpgradeMax && target.my) this.room.memory.emergencyUpgrade = false;\r\n\r\n    if (this.room.memory.emergencyUpgrade) {\r\n        //console.log ('emergency upgrade!')\r\n        creep.upgradeController(target)\r\n        if (!this.pos.isNearTo(target.pos)) creep.travelTo(target,{approach: 3});\r\n\r\n        return;\r\n    }\r\n\r\n\r\n    //console.log('trying fill')\r\n    if (this.room.name == this.memory.HomeRoomName && !this.room.hasFiller()) {\r\n        logger.log ('creep.dowork','no filler, foing to fill',this.name)\r\n        if (this.doFill()) return;\r\n    }\r\n\r\n\r\n\r\n    // repairen roads\r\n    logger.log ('creep.dowork','trying road repairs',this.name)\r\n    var target = undefined;\r\n    target= creep.pos.findInRange(FIND_STRUCTURES, 0, {filter: (structure) => {\r\n                    return (    structure.structureType == STRUCTURE_ROAD && structure.needsRepair())\r\n                    }\r\n                } )[0];\r\n    if (target) {\r\n        creep.repair(target)\r\n        return;\r\n    }\r\n\r\n\r\n\r\n    //anders constructen\r\n    //console.log ('trying constructions')\r\n\r\n    logger.log ('creep.dowork','trying construct ',this.name)\r\n    let res = this.room.getStoredEnergy()\r\n    if ( this.room.controller == undefined  // construct if there is no controller (roads/containers)\r\n        || (this.room.controller.level <=2  // construction always allowed if under level 3\r\n            || this.room.getEnergyCapacityAvailable() < 800   // construction always allowed if harvesters cannot be spawned\r\n            || res.capacity < CONSTRUCTION_MIN_STORED_ENERGY // or there is not enough storage capacity\r\n            || res.result >= CONSTRUCTION_MIN_STORED_ENERGY)) { // otherwise if there is enough stored energy not to starve 'fillers'\r\n        target = creep.pos.findClosestByPath(FIND_CONSTRUCTION_SITES);\r\n        if (target == undefined) { // niet gevonden, flags zoeken\r\n            target = creep.pos.findClosestByPath(FIND_FLAGS,  {filter: o => {return o.color = COLOR_BROWN && o.secondaryColor == COLOR_BROWN}}) ;\r\n            if (target) {\r\n                creep.travelTo(target);\r\n                target.pos.createConstructionSite(STRUCTURE_ROAD);\r\n                target.remove();\r\n            }\r\n        } else {\r\n            //console.log ('going to construction site ' + target )\r\n            if (creep.build(target) == ERR_NOT_IN_RANGE) {\r\n                creep.travelTo(target,{visualizePathStyle: {stroke: '#00ff00'}});\r\n            }\r\n            this.say('C')\r\n            return;\r\n        }\r\n    }\r\n\r\n    //doorgaan naar bestemming\r\n    logger.log ('creep.dowork','trying traveling to interroom destination ',this.name)\r\n    if (this.memory.destination && this.room.name != this.memory.destination.roomName) {\r\n        this.say ('dest')\r\n        this.travelTo (new RoomPosition(this.memory.destination.x, this.memory.destination.y, this.memory.destination.roomName));\r\n        return;\r\n    }\r\n\r\n    //werk buiten room vinden (alleen indien level groter dan 2)\r\n    let homeRoom = Game.rooms[this.memory.HomeRoomName]\r\n    if (!this.memory.assignedRoomName && homeRoom.controller && homeRoom.controller.level > 2) {\r\n        logger.log ('creep.runworker', 'worker finding room outside for creep ' + this.name)\r\n        var roomNames=Game.rooms[this.memory.HomeRoomName].findHarvestRooms();\r\n        logger.log ('creep.runworker', roomNames )\r\n        for (var i=0; i < roomNames.length; i++) {\r\n            var room = Game.rooms[roomNames[i]];\r\n            logger.log ('creep.runworker', 'worker finding room, checking room ' + roomNames[i] )\r\n            if (room && room.memory.workerAssignedName == undefined && this.memory.assignedRoomName == undefined && room.find(FIND_FLAGS, {filter: o => {return o.color = COLOR_BROWN && o.secondaryColor == COLOR_BROWN}}).length >0 ) {\r\n                room.memory.workerAssignedName = this.name; //worker assignen\r\n                this.memory.assignedRoomName = roomNames[i];\r\n                i = roomNames.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    //move naar construction in geassignde room\r\n    //    console.log ('find construction')\r\n    if (this.memory.assignedRoomName && this.memory.assignedRoomName != this.room.name){\r\n        var target = null;\r\n        var room = Game.rooms[this.memory.assignedRoomName];\r\n    //        console.log ('assigned to room ' + room.name)\r\n        if (room) {\r\n            //gewone construction zoeken\r\n            target=room.find(FIND_CONSTRUCTION_SITES)[0];\r\n            // road flags zoeken\r\n            if (!target) {\r\n                target = room.find(FIND_FLAGS, {filter: o => {return o.color = COLOR_BROWN && o.secondaryColor == COLOR_BROWN}})[0];\r\n            }\r\n            if (!target) { // geen construction sites meer\r\n                delete Memory.rooms[this.memory.assignedRoomName].workerAssignedName;\r\n                delete this.memory.assignedRoomName; // hij kan weer aan een andere room assigned worden\r\n            }\r\n        } else {\r\n            target = Game.atlas.getRoomCenter(this.memory.assignedRoomName);\r\n        }\r\n        //logger.log('creep.dowork', '' this.name)\r\n        this.travelTo (target);\r\n        return;\r\n    }\r\n\r\n    if (this.memory.assignedRoomName){\r\n        delete Memory.rooms[this.memory.assignedRoomName].workerAssignedName;\r\n        delete this.memory.assignedRoomName; // hij kan weer aan een andere room assigned worden\r\n    }\r\n\r\n\r\n    //anders naar huis\r\n    //console.log ('trying home')\r\n    if(this.room.name != this.memory.HomeRoomName && this.memory.HomeRoomName) {\r\n        creep.travelTo(Game.rooms[this.memory.HomeRoomName].controller.pos);\r\n        creep.say('home')\r\n        return;\r\n    }\r\n\r\n\r\n    //anders upgraden\r\n    // ALS:  level <=2 (nog geen containers)\r\n    //    of er is nog geen storage, dan een minimum vasthouden voor fillen (constructionminstoredenergy)\r\n    //    anders niet upgraden tenzij er ruim genoeg is (workeridleupgrade).\r\n    logger.log ('creep.dowork',`trying upgrade. energyAvailable: ${this.room.energyAvailable}, capacity: ${this.room.getEnergyCapacityAvailable()}`,this.name)\r\n    var target = creep.room.controller;\r\n    let result = this.room.getStoredEnergy();\r\n    logger.log ('creep.dowork',result,this.name)\r\n    if (target && ((!(this.room.storage && this.room.storage.isActive()) &&  result.result > CONSTRUCTION_MIN_STORED_ENERGY ) || result.result > WORKER_IDLE_UPGRADE || target.level <= 2)) {\r\n        logger.log ('creep.dowork',`upgrading`,this.name)\r\n        this.say('U')\r\n        creep.upgradeController(target);\r\n        if (!this.pos.isNearTo(target.pos)) creep.travelTo(target,{visualizePathStyle: {stroke: '#0000ff'}});\r\n        if (this.room.storage && this.room.storage.isActive()) creep.idle = true; // creep is idle als hij gaat upgraden. behalve als er nog geen storage is\r\n        return;\r\n    } else {\r\n        creep.idle = true;\r\n        this.doFill();\r\n        return;\r\n    }\r\n}\r\n\r\nCreep.prototype.runInitializer = function() {\r\n    //recyclen indien roomlevel niet 8 is.\r\n    if (this.room.controller.my && this.room.controller.level < 8 ) {\r\n        this.memory.recycle = true;\r\n        return;\r\n    }\r\n\r\n    //anders bij roomcontroller unclaimen en opnieuw claimen\r\n    if (this.pos.isNearTo(this.room.controller)) {\r\n        if (this.room.controller.my && this.room.controller.level >= 8) {\r\n            this.room.controller.unclaim();\r\n            return;\r\n        } else if (!this.room.controller.my) {\r\n            this.claimController(this.room.controller);\r\n            return;\r\n        }\r\n    } else this.travelTo (this.room.controller.pos);\r\n    return;\r\n}\r\n","\"use strict\";\r\n// aantal hits repairen van walls (per controller level)\r\nconst repairLevel = 10000;\r\n\r\nStructureTower.prototype.run = function() {\r\n    //console.log('RUNNING TOWER: ' + this);\r\n\r\n    var hostile = this.room.getInvader();\r\n    if (hostile) {\r\n        this.attack(hostile);\r\n        return;\r\n    }\r\n    var creepsHit = this.room.find(FIND_MY_CREEPS, {filter: (creep) => {return (creep.hits < creep.hitsMax );}} );\r\n    if (creepsHit.length > 0) {\r\n        this.heal(this.pos.findClosestByRange(creepsHit));\r\n        return;\r\n    }\r\n    var structuresHit = this.room.find(FIND_STRUCTURES, {filter: (structure) => {return (structure.structureType == STRUCTURE_CONTAINER && structure.hits < structure.hitsMax - 800 && structure.hits < repairLevel * structure.room.controller.level)}});\r\n    if (structuresHit.length > 0) {\r\n        var target = structuresHit[0];\r\n        for(var i = 1;i<structuresHit.length;i++) if (target.hits > structuresHit[i].hits) target = structuresHit[i];\r\n        this.repair(target);\r\n        return;\r\n    }\r\n}\r\n","\"use strict\"\r\n\r\nexport const COLONISATION_DIST = 10;\r\nexport const COLONISATION_TARGET_RECYCLE_TIME = 5000;\r\nexport const MY_USERNAME = 'Jerdaz';\r\nexport const USERNAME_SOURCEKEEPER = 'Source Keeper'\r\nexport const ENERGY_HISTORY_LENGTH = 10 // number of approx. days to track energy history of a base and use for average production\r\n","\"use strict\"\r\n\r\nexport const COLONISATION_DIST = 10;\r\nexport const COLONISATION_TARGET_RECYCLE_TIME = 5000;\r\nexport const MY_USERNAME = 'Jerdaz';\r\nexport const USERNAME_SOURCEKEEPER = 'Source Keeper'\r\nexport const ENERGY_HISTORY_LENGTH = 10 // number of approx. days to track energy history of a base and use for average production\r\n","\"use strict\";\r\n\r\n/*\r\n * Module code goes here. Use 'module.exports' to export things:\r\n * module.exports.thing = 'a thing';\r\n *\r\n * You can import it from another modules like this:\r\n * var mod = require('spawn');\r\n * mod.thing == 'a thing'; // true\r\n */\r\n\r\n var logger = require('logger');\r\n var myFlags = require('myflags');\r\n var consts = require('consts');\r\n\r\n const STORE_RESERVE_ENERGY = 50000 // energie vanaf wanneer er een upgrader wordt gemaakt\r\n const ATTACK_RESERVE_ENERGY = 10000;\r\n const INITIALIZER_ENERGY = 1200000;\r\n const SPAWN_UPGRADER_RATIO = 1; // hoeveel upgraders er gemaakt moeten worden per blok 'store_reserver_energy'.\r\n const BODY_SORT = {'tough': 1, 'move': 2, 'carry': 3, 'work': 4 , 'claim': 5, 'attack': 6, 'ranged_attack': 7, 'heal': 8};\r\n const GCL_NEW_COLONY = 10;\r\n\r\n //const BODY_SORT[TOUGH] =  {TOUGH: 1, MOVE: 2, CARRY: 3, WORK: 4 , CLAIM: 5, ATTACK: 6, RANGED_ATTACK: 7, HEAL: 8};\r\n\r\n /*Spawn.prototype.maxSpawnEnergy = function () {\r\n    return this.room.getEnergyCapacityAvailable();\r\n}\r\n\r\nSpawn.prototype.availableSpawnEnergy = function () {\r\n    return this.room.energyAvailable;\r\n}*/\r\n\r\n\r\n\r\nfunction findHarvestFlags (){\r\n    var flags=[];\r\n    for(var flagname in Game.flags) {\r\n        var flag = Game.flags[flagname];\r\n        if (flag.color == COLOR_GREEN) {\r\n            flags.push(flag);\r\n        }\r\n    }\r\n    return flags;\r\n}\r\n\r\n\r\nSpawn.prototype.getCreepCost = function (body) {\r\n    var cost = 0;\r\n    for (var i=0; i<body.length;i++) cost += BODYPART_COST[body[i]];\r\n    return cost;\r\n}\r\n\r\n//body van een creep repeteren tot beschikbare energy\r\nSpawn.prototype.expandCreep = function(body, minLength = 3, maxLength = MAX_CREEP_SIZE, emergencySpawn = false) {\r\n    logger.log('spawn.expandcreep', `${body}, ${minLength}, ${maxLength}` )\r\n    var result = [];\r\n    var i=0;\r\n    var maxEnergy = this.room.getEnergyCapacityAvailable();\r\n    if (emergencySpawn && !this.room.hasWorker() || this.room.getStoredEnergy().result < 50) maxEnergy = this.room.energyAvailable; // emergency respawn als alle creeps dood zijn;\r\n    while (this.getCreepCost(result) <= maxEnergy && result.length < Math.min(maxLength + 1, MAX_CREEP_SIZE + 1)) {\r\n        result.push(body[i++]);\r\n        i = i % body.length;\r\n    }\r\n    result.pop(); // de laatste er altijd uitgooien omdat die energie overschrijdt\r\n    result.sort((partA, partB) => {\r\n        logger.log('spawn.expandcreep', partA + partB + BODY_SORT[partA] +' '+BODY_SORT[partB] + BODY_SORT.carry)\r\n        if (BODY_SORT[partA] < BODY_SORT[partB]) return -1;\r\n        if (BODY_SORT[partA] > BODY_SORT[partB]) return 1;\r\n        return 0;\r\n    });\r\n\r\n    logger.log('spawn.expandcreep', result)\r\n    if (result.length>= minLength) return result;\r\n}\r\n\r\nSpawn.prototype.recycleCreeps = function () {\r\n    var creeps = this.pos.findInRange(FIND_MY_CREEPS,1,{filter: (creep) => {return creep.memory.recycle == true}});\r\n    logger.log ('spawn.recyclecreeps', creeps)\r\n    for (var creep of creeps) this.recycleCreep(creep);\r\n}\r\n\r\nSpawn.prototype.spawnCreepByRole = function (role, targetRoomName, targetSourceId = undefined) {\r\n    // return true indien spawn succesvol\r\n    var newName = role + this.room.name + '_' + targetRoomName + '_' + Game.time % 10000;\r\n    var body;\r\n    var source = Game.getObjectById(targetSourceId)\r\n    logger.log('spawn.spawncreepbyrole', 'Trying to spawn ' + role + ' for room ' + targetRoomName )\r\n    let room = Game.rooms[targetRoomName];\r\n    switch(role) {\r\n        case 'scout':\r\n            body = [MOVE];\r\n            break;\r\n        case 'reserver':\r\n            body = [MOVE];\r\n            var ticksToEnd;\r\n            if (room && room.controller && room.controller.reservation) ticksToEnd = room.controller.reservation.ticksToEnd\r\n            if (!ticksToEnd) ticksToEnd = 0;\r\n            if (room && room.controller && this.room.getEnergyCapacityAvailable() >= BODYPART_COST[MOVE] + BODYPART_COST[CLAIM] && room.find(FIND_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_CONTAINER}}).length > 0) {\r\n                if (ticksToEnd < 3900 && this.room.getEnergyCapacityAvailable() >= BODYPART_COST[MOVE]*2 + BODYPART_COST[CLAIM] * 2) body = [MOVE, MOVE, CLAIM, CLAIM];\r\n                else body = [MOVE, CLAIM];\r\n            } else if (room && room.controller && room.controller.level > 0 && !room.controller.my) body = this.expandCreep([MOVE,CLAIM]);\r\n            break;\r\n        case 'harvester':\r\n            body = [WORK,WORK,WORK,WORK,WORK,WORK,CARRY,MOVE,MOVE,MOVE];\r\n            let source = Game.getObjectById(targetSourceId);\r\n            if (source.energyCapacity >= 4000) {\r\n                body = [WORK,WORK,WORK,WORK,WORK,WORK,WORK,WORK,CARRY,MOVE,MOVE,MOVE,MOVE];\r\n            }\r\n\r\n            break;\r\n        case 'transporter':\r\n            let bodyTemplate = [MOVE,CARRY,CARRY];\r\n            var requiredSize = 1.05 * Math.ceil(Memory.transportLoad[targetSourceId] / 100) //transporter moet minimaal de actuele load  kunnen dragen.\r\n//            let energyDivider = Math.ceil((requiredSize * this.getCreepCost(bodyTemplate)) / this.room.getEnergyCapacityAvailable()) // indien niet genoeg energy, dan halve creeps maken zodat er dubbele tranporters komen\r\n//            let bodySizeDivider = Math.ceil(3*requiredSize / MAX_CREEP_SIZE) // indien te klein voor maximum size, kleiner maken zodat er meer gespawned worden\r\n//            let divider = Math.max(energyDivider,bodySizeDivider)\r\n            let maxLength = (3*requiredSize)// / divider\r\n            if (!maxLength) maxLength = MAX_CREEP_SIZE;\r\n//            logger.log('spawn.spawncreepbyrole', `maxLength: ${maxLength} requiredsize: ${requiredSize} energyDivider: ${energyDivider} bodysizeDivider: ${bodySizeDivider}`)\r\n            body = this.expandCreep(bodyTemplate, 2, maxLength)\r\n            break;\r\n        case 'attacker':\r\n            let spawnFodder;\r\n            if (room) {\r\n                spawnFodder = false;\r\n                let towers = room.find(FIND_HOSTILE_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_TOWER}});\r\n                logger.log('spawn.spawncreepbyrole', 'room  visible towers: ' + towers.length)\r\n                for (let tower of towers) if (tower.energy >= 100) spawnFodder = true;\r\n                if (room.find(FIND_MY_CREEPS).length > 10) spawnFodder = false;\r\n            } else {\r\n                let scoutInfo = Game.atlas.getScoutInfo(targetRoomName);\r\n                if (scoutInfo && scoutInfo.towerCount > 0) spawnFodder = true;\r\n            }\r\n            if (spawnFodder) {\r\n                body = [MOVE];\r\n            } else {\r\n                body = this.expandCreep([MOVE, ATTACK], 2);\r\n            }\r\n            break;\r\n        case 'upgrader':\r\n            if (this.room.controller && this.room.controller.level >= 8) {\r\n                body = this.expandCreep([MOVE,CARRY,WORK,WORK,WORK,MOVE,WORK,WORK,WORK,WORK], 23, 23 )\r\n            }\r\n            else if (this.room.getLinks().length >= 2 ) {\r\n                body = this.expandCreep([MOVE,CARRY,WORK,WORK,WORK,MOVE,WORK,WORK,WORK,WORK]);\r\n            } else {\r\n                body = this.expandCreep([MOVE,CARRY,WORK]);\r\n            }\r\n            break;\r\n        case 'initializer':\r\n            body = [MOVE,CLAIM];\r\n            break;\r\n        case 'keeperkiller':\r\n            body = _.fill(Array(25), MOVE);\r\n            body = body.concat(_.fill(Array(20), RANGED_ATTACK));\r\n            body = body.concat(_.fill(Array(5), HEAL));\r\n            //body = [MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,MOVE,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,ATTACK,HEAL,HEAL,HEAL,HEAL,HEAL];\r\n            break;\r\n    }\r\n    logger.log('spawn.spawncreepbyrole', 'body: '+ body)\r\n    if(this.spawnCreep(body, newName, {memory: {role: role, targetSourceId: targetSourceId, targetRoomName: targetRoomName, HomeRoomName: this.room.name}}) == OK) {\r\n        //console.log ('Spawned ' + role + ': ' + newName);\r\n        if (role == 'harvester' && source) this.buildPath(source.pos, false);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nSpawn.prototype.replaceCreeps = function() {\r\n    for (var creepName in Game.creeps) {\r\n        var creep = Game.creeps[creepName];\r\n        if (creep.memory.replace && !creep.memory.replaced && creep.memory.HomeRoomName == this.room.name) {\r\n            if (this.spawnCreepByRole(creep.memory.role, creep.memory.targetRoomName, creep.memory.targetSourceId)) {\r\n                logger.log('spawn.replacecreeps', 'replacing creep: ' + creep.name)\r\n                creep.memory.replaced = true\r\n            }\r\n            return true;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nSpawn.prototype.calculateAvgWorkers = function(roomCreeps) {\r\n    //idle workers uitrekeningen\r\n    var workerCreeps=_.filter(roomCreeps, (creep) => {return creep.memory.role == 'worker'});\r\n    // dode en vertrokken en nieuwe worker creeps meenemen in running avg\r\n    if (this.memory.lastWorkerCount == undefined) this.memory.lastWorkerCount = 0;\r\n    var lastWorkerCount = this.memory.lastWorkerCount;\r\n    if (lastWorkerCount != workerCreeps.length) {\r\n        for ( var i=0; i< this.room.memory.avgIdleWorkers.length;i++) this.room.memory.avgIdleWorkers[i]-= lastWorkerCount - workerCreeps.length; // dode creep meenemen in verwachte idle berekening\r\n    }\r\n    this.memory.lastWorkerCount = workerCreeps.length\r\n    var idleWorkers=0;\r\n    if (this.memory.idleWorkerCounter == null) this.memory.idleWorkerCounter = 0;\r\n    for (var i=0; i<workerCreeps.length;i++) if (workerCreeps[i].idle == true) idleWorkers++;\r\n    this.room.memory.avgIdleWorkers[Game.time % this.room.memory.avgIdleWorkers.length] = idleWorkers;\r\n    var runningAvgIdleWorkers = 0;\r\n    for(var i=0;i<this.room.memory.avgIdleWorkers.length;i++) runningAvgIdleWorkers += this.room.memory.avgIdleWorkers[i] / this.room.memory.avgIdleWorkers.length;\r\n\r\n    if (this.memory.idlePerc == undefined) this.memory.idlePerc = 0.5;\r\n    if (this.spawning) this.memory.idlePerc = this.memory.idlePerc / 1500 * 1499;\r\n    else  this.memory.idlePerc = this.memory.idlePerc / 1500 * 1499 + 1 / 1500;\r\n    logger.log('spawn.calculateavgworkers', `RUNNING SPAWN ${this.room.name}: Idle: ${Math.round(this.memory.idlePerc * 100)}% Workers: ` + workerCreeps.length + ' idleworkercounter: ' + idleWorkers + ' Running avg: ' + runningAvgIdleWorkers);\r\n    return runningAvgIdleWorkers;\r\n}\r\n\r\nSpawn.prototype.run = function(roomCreeps, runningAvgIdleWorkers) {\r\n    logger.log ('spawn.run', 'Running spawn in room ' + this.room)\r\n\r\n    //this.recycleCreeps();\r\n\r\n    // attack\r\n    let attacking = false;\r\n    let attackFlags = myFlags.getAttackFlags();\r\n    if (this.room.getStoredEnergy().result > ATTACK_RESERVE_ENERGY) {\r\n        if (attackFlags.length > 0) {\r\n            attacking = true;\r\n        }\r\n    }\r\n\r\n\r\n    //attacker maken als er al een staat te wachten\r\n    /*\r\n    if (this.pos.findInRange(FIND_MY_CREEPS,1,{filter: (creep) => {return creep.memory.role=='attacker' && !creep.memory.startAttack}}).length == 1) {\r\n        this.spawnCreepByRole('attacker');\r\n        return;\r\n    }*/\r\n\r\n    //workers spawnen\r\n    var harvestRooms = this.room.findHarvestRooms();\r\n   //6 goto (skipdefender);\r\n\r\n   //defenders maken (max 2 per room)\r\n\r\n   if (_.filter(roomCreeps, o => {return o.memory.role == 'defender'}).length < 2 ) {\r\n        for(var i=0;i<harvestRooms.length;i++) {\r\n\r\n\r\n            var roomName = harvestRooms[i];\r\n\r\n            // if room is in the center of a sector it spawns very strong defenders. it is a waste of resources\r\n            // to defend from it.\r\n            var roomXY = Game.atlas.getRoomCoordinates(roomName);\r\n            if (roomXY.x % 10 == 5 && roomXY.y % 10 == 5) continue;\r\n\r\n            var room = Game.rooms[roomName]\r\n\r\n            // defenders maken indien aangevallen\r\n            let hostileCreeps;\r\n            if (room) hostileCreeps = room.find(FIND_HOSTILE_CREEPS, {filter: o => {return o.owner.username != 'Source Keeper'}})\r\n            if (room && hostileCreeps.length>0) {\r\n                //let maxBodySize = 0;\r\n                //for (creep of hostileCreeps) if (creep.body.length > maxBodySize) maxBodySize = creep.body.length;\r\n                var newName = 'Defender' + Game.time;\r\n                //console.log('SPAWNING DEFENDER (invader in room: ' + room )\r\n                if(this.spawnCreep(this.expandCreep([MOVE,MOVE,MOVE,RANGED_ATTACK,RANGED_ATTACK,HEAL],4), newName, {memory: {role: 'defender', HomeRoomName: this.room.name}})==OK) console.log('SPAWNED DEFENDER')\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    // initialiser voor als level 8 met upgrade beperking en storage / terminal is vol\r\n    if (this.room.controller.level >= 8 && this.room.getStoredEnergy().result > INITIALIZER_ENERGY) {\r\n        // eerst veel upgraders spawnen\r\n        if (_.filter(roomCreeps, o => {return o.memory.role == 'upgrader'}).length < 9) {\r\n            this.spawnCreepByRole('upgrader');\r\n            return;\r\n        } else if(_.filter(roomCreeps, o => {return o.memory.role == 'initializer'}).length < 1) {\r\n            this.spawnCreepByRole('initializer');\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    // worker spawnen zelf spawenen\r\n    // indien de room een storage heeft, workers maximeren op 3 (upgraders nemen dan de rol over)\r\n        if (!attacking && runningAvgIdleWorkers < 0.5 && (!this.room.hasFiller() || _.filter(roomCreeps, o => {return o.memory.role == 'worker'}).length <= 3) ) {\r\n            var newName = 'Worker' + Game.time;\r\n            //console.log('SPAWNING WORKER')\r\n            if (this.spawnCreep(this.expandCreep([MOVE,WORK,CARRY], 3, MAX_CREEP_SIZE, true), newName,\r\n                {memory: {role: 'worker', HomeRoomName: this.room.name}}) == OK) {\r\n                //console.log('Spawned new worker: ' + newName);\r\n            }\r\n            return;\r\n        }\r\n//    }\r\n\r\n\r\n    //console.log('harvestrooms: ' + harvestRooms)\r\n\r\n    if (this.room.controller && this.room.controller.level < 3) return ; // pas bij level 3 geavanceerde creeps maken\r\n\r\n\r\n\r\n    //filler maken\r\n    if (_.filter(roomCreeps, o => {return o.memory.role == 'filler'}).length < 2 && _.find(roomCreeps, o => {return o.memory.role == 'harvester'})) {\r\n        var newName = 'Filler' +Game.time;\r\n        var size = Math.ceil(this.room.getEnergyCapacityAvailable() / 100 / 2) * 3\r\n        let result = this.spawnCreep(this.expandCreep([MOVE,CARRY,CARRY], 3, size), 'Filler' + Game.time, {memory: {role: 'filler', HomeRoomName: this.room.name}});\r\n        console.log('SPAWNING FILLER ' + result)\r\n            if(result == OK) {\r\n                console.log ('Spawned Filler: ' + newName);\r\n            }\r\n            return;\r\n        }\r\n\r\n    // attack\r\n    if (attacking) {\r\n        this.spawnCreepByRole('attacker', attackFlags[0].pos.roomName);\r\n        return;\r\n    }\r\n\r\n    //scout spawnen\r\n    let scoutCreepFound = false;\r\n    for (let creepName in Game.creeps) {\r\n        let creep = Game.creeps[creepName];\r\n        if (creep.memory.role == 'scout' && creep.memory.HomeRoomName == this.room.name) {\r\n            scoutCreepFound = true;\r\n            break;\r\n        }\r\n    }\r\n    if (!scoutCreepFound) {\r\n        this.spawnCreepByRole('scout');\r\n        return;\r\n    }\r\n\r\n    //colonizer spawnen\r\n\r\n/*    var yellowFlags = []; // colonize flag\r\n    for (var flagname in Game.flags) {\r\n        var flag = Game.flags[flagname];\r\n        if (flag.color==COLOR_YELLOW && flag.name.startsWith(this.room.name)) yellowFlags.push(flag);\r\n    }*/\r\n    if (Memory.colRoom && this.room.getEnergyCapacityAvailable() > 700 && Game.map.findRoute(this.room.name, Memory.colRoom).length <= consts.COLONISATION_DIST) {\r\n//        var flag = yellowFlags[0]\r\n        var needCreep=1; // 5 creeps produceren\r\n        var creepBody;\r\n        var room = Game.rooms[Memory.colRoom];\r\n        if (room) { // ik heb al zicht op de kamer\r\n            if (room.controller.my && room.find(FIND_MY_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_SPAWN}}).length>0) {\r\n                delete Memory.colRoom; // colonisatie voltooid!\r\n                needCreep = false;\r\n            } else if (!room.controller.my) {\r\n                creepBody = [MOVE,MOVE,CLAIM]; // claimer colonist (leeft kort veel move)\r\n                needCreep = 2; // beetje overbodig maar anders duur het te lang voor de sterke creep doodgaat.\r\n            }\r\n            else {\r\n                creepBody = this.expandCreep ([MOVE,WORK,MOVE,CARRY,MOVE,ATTACK]) // externe worker tot spawn er staat\r\n                needCreep = 7; // colonist verandert in worker als hij arriveert.\r\n            }\r\n        } else {\r\n            creepBody = [MOVE] // sterke verkenner / padmaker\r\n            needCreep = 1 // max 1 tegelijk\r\n        };\r\n\r\n        var creepcount = 0;\r\n        for (var creepname in Game.creeps) {\r\n            var creep=Game.creeps[creepname];\r\n            if (creep.memory.birthRole == 'colonist') creepcount++;\r\n        }\r\n        if (creepcount>=needCreep) needCreep=false;\r\n\r\n        if (needCreep) {\r\n            var newName =  'Colonist' + Game.time;\r\n            if(this.spawnCreep(creepBody, newName, {memory: {role: 'colonist', birthRole: 'colonist', HomeRoomName: this.room.name}}) == OK) {\r\n                console.log ('Spawned Colonist: ' + newName);\r\n            }\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //upgrader voor lokale controller\r\n    //console.log ('SPAWN: Upgraders')\r\n    let controllerContainer = this.room.controller.getContainer();\r\n    let storedEnergy = this.room.getStoredEnergy().result;\r\n    if ((storedEnergy > STORE_RESERVE_ENERGY) || (this.room.storage == undefined && this.room.find(FIND_STRUCTURES, {filter: (structure) => {return structure.structureType == STRUCTURE_CONTAINER && _.sum(structure.store) == structure.storeCapacity}}).length > 0)) {\r\n        var needCreep\r\n        if (this.room.controller && this.room.controller.level >= 8) needCreep = 1\r\n        else if (this.room.storage) needCreep = (storedEnergy - STORE_RESERVE_ENERGY) / (STORE_RESERVE_ENERGY * SPAWN_UPGRADER_RATIO);\r\n        else if (this.room.find(FIND_CONSTRUCTION_SITES).length>0) needCreep = 0;\r\n        else needCreep = 50;\r\n        var creepcount = 0;\r\n        for (var creepname in Game.creeps) {\r\n            var creep=Game.creeps[creepname];\r\n            if (creep.memory.role == 'upgrader' && creep.memory.HomeRoomName == this.room.name) creepcount++;\r\n        }\r\n        if (creepcount>=needCreep) needCreep=false;\r\n\r\n        if (needCreep) {\r\n            this.spawnCreepByRole('upgrader');\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //harvester en transporter spawnen.\r\n    //lokale sources\r\n    var sources =[]; //= this.room.findSources();\r\n\r\n\r\n//    sources in harvest areas erbij\r\n    for(var i=0;i<harvestRooms.length;i++) {\r\n        if (!Memory.rooms[harvestRooms[i]]) continue;\r\n        let scoutInfo = Game.atlas.getScoutInfo(harvestRooms[i])\r\n        if (scoutInfo == undefined) continue;\r\n        for (let sourceId in scoutInfo.sources) {\r\n            let smallestDistance = 999999;\r\n            let sourceInfo = scoutInfo.sources[sourceId];\r\n            for (let roomName in sourceInfo.roomDistance) {\r\n                if (sourceInfo.roomDistance[roomName] < smallestDistance) smallestDistance = sourceInfo.roomDistance[roomName];\r\n            }\r\n            if (sourceInfo.roomDistance && sourceInfo.roomDistance[this.room.name] == smallestDistance) {\r\n                //sources.push(Game.getObjectById(sourceId));\r\n                sources.push({sourceId: sourceId, distance: smallestDistance, roomName: harvestRooms[i]});\r\n            }\r\n        }\r\n    }\r\n    sources.sort((a,b) => {\r\n        if (a.distance < b.distance) return -1;\r\n        if (a.distance > b.distance) return 1;\r\n        else return 0;\r\n    })\r\n    logger.log('spawn.run', sources);\r\n\r\n    for(var i=0;i< sources.length;i++) {\r\n\r\n        // creeps replacen\r\n        for (let creep of roomCreeps) {\r\n            if (creep.memory.replace && !creep.memory.replaced && creep.memory.targetSourceId == sources[i].sourceId) {\r\n                if (this.spawnCreepByRole(creep.memory.role, creep.memory.targetRoomName, creep.memory.targetSourceId)) {\r\n                    logger.log('spawn.replacecreeps', 'replacing creep: ' + creep.name)\r\n                    creep.memory.replaced = true\r\n                }\r\n                return true;\r\n            }\r\n        }\r\n        let source = Game.getObjectById(sources[i].sourceId);\r\n\r\n        // reserver maken indien nodig (geen zicht)\r\n        if (this.room.name != sources[i].roomName) {\r\n            let hasReserver = false;\r\n            for (let creep of roomCreeps) {\r\n                if (creep.memory.role == 'reserver' && creep.memory.targetRoomName == sources[i].roomName) {\r\n                    hasReserver = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (!hasReserver) {\r\n                this.spawnCreepByRole('reserver', sources[i].roomName);\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (source) {\r\n            logger.log('spawn.run', 'spawning creeps for room ' + source.room.name + ' source: ' + source.id);\r\n            if (Game.atlas.getScoutInfo(source.room.name).hasKeepers) {\r\n                logger.log('spawn.run', 'checking if keeperkiller exists');\r\n                let hasKeeperKiller = false;\r\n                for (let creep of roomCreeps) {\r\n                    if (creep.memory.role == 'keeperkiller' && creep.memory.targetRoomName == sources[i].roomName) {\r\n                        hasKeeperKiller = true;\r\n                        break;\r\n                    }\r\n                }\r\n                if (!hasKeeperKiller) {\r\n                    this.spawnCreepByRole('keeperkiller', sources[i].roomName);\r\n                    return;\r\n                }\r\n\r\n                //continue; // tijdelijk overslaan totdat cleaner goed werkt nog geen harvesters maken;\r\n            }\r\n\r\n            let transportContainer = source.getContainer();\r\n            var needHarvester=true;\r\n            logger.log ('spawn.run', 'trying to spawn harvester for room ' + source.room.name + ' and source ' +source.id)\r\n            for (var creepname in Game.creeps) {\r\n                var creep=Game.creeps[creepname];\r\n                if (creep.memory.role == 'harvester' && creep.memory.targetSourceId == source.id) {\r\n                logger.log ('spawn.run', 'found harvester, stopping spawn ' +  creep.name)\r\n                    needHarvester =false;\r\n                }\r\n            }\r\n\r\n            if (needHarvester) {\r\n                logger.log ('spawn.run', 'room needs harvester calling spawncreepbyrole ' + source.room.name)\r\n                //console.log ('TRYING HARVESTER ' + source.room.name)\r\n                this.spawnCreepByRole('harvester', source.room.name, source.id);\r\n                return;\r\n            }\r\n            var needTransporter=true;\r\n            if (Memory.lastSourceNewTransportSpawn == undefined) Memory.lastSourceNewTransportSpawn = {};\r\n\r\n            let lastSpawnTime = Memory.lastSourceNewTransportSpawn[source.id];\r\n            if (Game.time - lastSpawnTime < 750) needTransporter = false;\r\n\r\n            //console.log ('SPAWN: Transporter ' + source.room.name)\r\n            if (needTransporter) {\r\n                for (var creepname in Game.creeps) {\r\n                    var creep=Game.creeps[creepname];\r\n                    if (creep.memory.role == 'transporter' && creep.memory.targetSourceId == source.id && transportContainer && transportContainer instanceof StructureContainer && transportContainer.store.energy < transportContainer.storeCapacity )\r\n                        needTransporter =false;\r\n                }\r\n            }\r\n\r\n            if (needTransporter && transportContainer && transportContainer instanceof StructureContainer) { // ook al is er een transporter nodig, alleen als de source een container heeft\r\n                if (this.spawnCreepByRole('transporter', source.room.name, source.id)) {\r\n                    Memory.lastSourceNewTransportSpawn[source.id] = Game.time;\r\n                }\r\n                return;\r\n            }\r\n//            else if (needTransporter) {\r\n//                console.log ('Spawner idle: Need container in room ' + source.room)\r\n//                return;\r\n//            }\r\n        }\r\n\r\n    }\r\n    //console.log ('SPAWN: Idle...Zz')\r\n\r\n/*    //transporters spawnen\r\n    var idleTransporters=0;\r\n    var creeps=this.room.find(FIND_MY_CREEPS,{filter: (creep) => {return creep.memory.role == 'transporter'}});\r\n    if (this.memory.idleTransporterCounter == null) this.memory.idleTransporterCounter = 0;\r\n    for (var i=0; i<creeps.length;i++) if (creeps[i].idle == true) idleTransporters++;\r\n    this.room.memory.avgIdleTransporters[Game.time % this.room.memory.avgIdleTransporters.length] = idleTransporters;\r\n    var runningAvgIdleTransporters = 0;\r\n    for(var i=0;i<this.room.memory.avgIdleTransporters.length;i++) runningAvgIdleTransporters += this.room.memory.avgIdleTransporters[i] / this.room.memory.avgIdleTransporters.length;\r\n    console.log('RUNNING SPAWN: Transporters: ' + creeps.length + ' idle: ' + idleTransporters + ' idleTransporterscounter: ' + idleTransporters + ' Running avg: ' + runningAvgIdleTransporters);\r\n    if ((this.memory.creephasdied == true && runningAvgIdleTransporters < 1.5) || runningAvgIdleTransporters < 0.5) {\r\n        var newName = 'Transporter' + Game.time;\r\n        if (this.spawnCreep([CARRY,CARRY,MOVE, CARRY,CARRY,MOVE, CARRY,CARRY,MOVE], newName,\r\n            {memory: {role: 'transporter'}}) == OK);\r\n            console.log('Spawned new transporter: ' + newName);\r\n            //meenemen in verwachte idle berekening\r\n            for ( var i=0; i< this.room.memory.avgIdleTransporters.length;i++) this.room.memory.avgIdleTransporters[i]+=1;\r\n        return;\r\n\r\n    } else if (this.memory.creephasdied == true) for ( var i=0; i< this.room.memory.avgIdleTransporters.length;i++) this.room.memory.avgIdleTransporters[i]-=1; // dode creep meenemen in verwachte idle berekening\r\n*/\r\n}\r\n\r\nmodule.exports = {\r\n\r\n};\r\n","\"use strict\";\r\n\r\nStructureLink.prototype.run = function() {\r\n    if (this.isSource == undefined) {\r\n        if (this.pos.findInRange(FIND_STRUCTURES,2,{filter: (structure: Structure) => {return structure.structureType == STRUCTURE_CONTROLLER}}).length>0) this.isSource = false;\r\n        else this.isSource = true;\r\n    }\r\n\r\n    if (this.isSource && this.room.controller) {\r\n        this.transferEnergy(this.room.controller.pos.getNearestLink());\r\n    }\r\n    return;\r\n}\r\n","\"use strict\";\r\n\r\nimport * as logger from 'logger';\r\nimport Base from 'base';\r\n\r\n//const destination = 'W8N46'\r\n//const TERMINAL_\r\n\r\nStructureTerminal.prototype.run = function(myBases: Base[]) {\r\n    logger.log ('structureterminal.run', 'running terminal ' + this.room.name)\r\n    if (this.room.controller && this.room.controller.level >=8 && this.store.energy > 100000) {\r\n        logger.log ('structureterminal.run', 'Terminal trying to send energy')\r\n        logger.log ('structureterminal.run', myBases )\r\n        //logger.log ('structureterminal.run', myRooms[0].terminal )\r\n        let targetRooms = _.filter(myBases, o => {return o.room.terminal && o.room.controller && o.room.controller.level < 8 && o.room.terminal.store.energy < 250000 })\r\n        logger.log ('structureterminal.run', targetRooms )\r\n        if (targetRooms.length == 0) return; // geen rooms om naar te sturen\r\n        targetRooms.sort( (a, b) => {\r\n            let a_distance = Game.map.getRoomLinearDistance(this.room.name, a.room.name, true);\r\n            let b_distance = Game.map.getRoomLinearDistance(this.room.name, b.room.name, true)\r\n            if (a_distance < b_distance) return -1;\r\n            if (a_distance > b_distance) return 1;\r\n            return 0;\r\n        })\r\n        let destination = targetRooms[0].room.name;\r\n        logger.log ('structureterminal.run', 'sending ' + 10000 + ' to ' + destination )\r\n        let result = this.send(RESOURCE_ENERGY, 10000, destination )\r\n        logger.log ('structureterminal.run', result)\r\n    }\r\n}\r\n","\"use strict\";\r\n\r\n\r\nimport 'structure';\r\nimport 'creep';\r\nimport 'tower';\r\nimport 'spawn';\r\nimport 'link';\r\nimport 'terminal';\r\nimport Atlas from 'atlas';\r\nimport * as logger from 'logger';\r\nimport * as consts from 'consts';\r\n\r\ndeclare var _:any;\r\n\r\nconst maxHarvestDistance = 3;\r\nconst MAX_COLONIZATION_DIST = 10;\r\nconst allies = [''];\r\nconst HARVEST_DEFENSE_TIME = 3000;\r\nconst KEEPER_HARVESTING = true; // wel of geen keeper lairs harvesten (is nog experimenteel)\r\nconst MIN_STORAGE_ENERGY = 25000; // the minimum amount of energy in the main storage, before transporters start dropping energy in other droppoints (like terminals)\r\n\r\nconst MY_CONTROLLER_STRUCTURES: {[key:string]:{[key:number]:number}} = {\r\n    \"spawn\": {0: 0, 1: 1, 2: 1, 3: 1, 4: 1, 5: 1, 6: 1, 7: 2, 8: 3},\r\n    \"extension\": {0: 0, 1: 0, 2: 5, 3: 10, 4: 20, 5: 30, 6: 40, 7: 50, 8: 60},\r\n    \"link\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 2, 6: 3, 7: 4, 8: 6},\r\n    \"road\": {0: 2500, 1: 2500, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\r\n    \"constructedWall\": {1: 0, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\r\n    \"rampart\": {1: 0, 2: 2500, 3: 2500, 4: 2500, 5: 2500, 6: 2500, 7: 2500, 8: 2500},\r\n    \"storage\": {1: 0, 2: 0, 3: 0, 4: 1, 5: 1, 6: 1, 7: 1, 8: 1},\r\n    \"tower\": {1: 0, 2: 0, 3: 1, 4: 1, 5: 2, 6: 2, 7: 3, 8: 6},\r\n    \"observer\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\r\n    \"powerSpawn\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\r\n    \"extractor\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 1, 7: 1, 8: 1},\r\n    \"terminal\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1},\r\n    \"lab\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 3, 7: 6, 8: 10},\r\n    \"container\": {0: 5, 1: 5, 2: 5, 3: 5, 4: 5, 5: 5, 6: 5, 7: 5, 8: 5},\r\n    \"nuker\": {1: 0, 2: 0, 3: 0, 4: 0, 5: 0, 6: 0, 7: 0, 8: 1}\r\n}\r\n\r\n\r\nRoom.prototype.rememberRoom = function() {\r\n    let scoutInfo = Game.atlas.getScoutInfo(this.name);\r\n\r\n    // niet veranderende scoutinfo alleen eerste keer of bij nieuwe structuur\r\n    if (scoutInfo == undefined || scoutInfo.version == undefined || scoutInfo.version < 2) {\r\n        this.memory.scoutInfo = {};\r\n        scoutInfo = this.memory.scoutInfo;\r\n        scoutInfo.hasKeepers = this.find(FIND_HOSTILE_STRUCTURES,{filter: (structure: Structure) => {return structure.structureType == STRUCTURE_KEEPER_LAIR}}).length > 0;\r\n        scoutInfo.sourceCount = this.find(FIND_SOURCES).length;\r\n        scoutInfo.hasController = (this.controller != undefined);\r\n        scoutInfo.towerCount = this.find(FIND_HOSTILE_STRUCTURES,{filter: (structure: Structure) => {return structure.structureType == STRUCTURE_TOWER}}).length;\r\n        scoutInfo.sources = {};\r\n        for (let source of this.find(FIND_SOURCES)) {\r\n            scoutInfo.sources[source.id] = {pos_x: source.pos.x, pos_y: source.pos.y }\r\n        }\r\n        scoutInfo.version = 2;\r\n    }\r\n    scoutInfo.lastSeen = Game.time;\r\n    if (this.controller) scoutInfo.level = this.controller.level\r\n    else scoutInfo.level = 0;\r\n    if (this.controller && this.controller.owner) scoutInfo.ownerUserName = this.controller.owner.username;\r\n    if (this.controller) scoutInfo.myRoom = this.controller.my;\r\n    else scoutInfo.myRoom = false;\r\n    scoutInfo.hasEnemyCreeps = this.find(FIND_HOSTILE_CREEPS, {filter: (o:Creep) => {return o.owner.username != consts.USERNAME_SOURCEKEEPER }}).length > 0;\r\n}\r\n\r\nRoomObject.prototype.reservedEnergy = 0;\r\n\r\n\r\nRoom.prototype.hasFiller = function() {\r\n    return this.find(FIND_MY_CREEPS, {filter: (creep: Creep) => {return creep.memory.role == 'filler'}}).length > 0;\r\n}\r\nRoom.prototype.hasWorker = function() {\r\n    return this.find(FIND_MY_CREEPS, {filter: (creep: Creep) => {return creep.memory.role == 'worker'}}).length > 0;\r\n}\r\nRoom.prototype.countFillers = function() {\r\n    return this.find(FIND_MY_CREEPS, {filter: (creep: Creep) => {return creep.memory.role == 'filler'}}).length;\r\n}\r\n\r\nRoom.prototype.hasHarvester = function() {\r\n    return this.find(FIND_MY_CREEPS, {filter: (creep: Creep) => {return creep.memory.role == 'harvester'}}).length > 0;\r\n}\r\n\r\nRoom.prototype.isSKLair = function() {\r\n    if (this.name === 'sim') return false;\r\n    let parsed;\r\n    parsed = /^[WE]([0-9]+)[NS]([0-9]+)$/.exec(this.name) as any;\r\n    let fMod = parsed[1] % 10;\r\n    let sMod = parsed[2] % 10;\r\n    let isSK =  !(fMod === 5 && sMod === 5) &&\r\n        ((fMod >= 4) && (fMod <= 6)) &&\r\n        ((sMod >= 4) && (sMod <= 6));\r\n    return isSK\r\n}\r\n\r\n\r\nRoom.prototype.isValidHarvestRoom = function(roomName: string, baseLevel:number) {\r\n    var room = Game.rooms[roomName]\r\n    var validHarvest = true;\r\n    var validPassage = true;\r\n    let scoutInfo = Game.atlas.getScoutInfo(roomName);\r\n    if (scoutInfo ) {\r\n        if (scoutInfo.hasEnemyCreeps) {validHarvest = false; validPassage = false}\r\n        if (scoutInfo.sourceCount == 0) validHarvest = false;\r\n        //if (scoutInfo.controllerLevel > 0 && ! scoutInfo.myRoom) validHarvest = false;\r\n        if (Game.time - scoutInfo.lastHarvest < HARVEST_DEFENSE_TIME) {validHarvest = true; validPassage = true}\r\n        if (scoutInfo.hasKeepers && (baseLevel < 7 || !KEEPER_HARVESTING)) validHarvest = false;\r\n        if (room && this != room && room.controller && room.controller.my) validHarvest = false\r\n    } else {validHarvest = false; validPassage = false}\r\n\r\n    //xawirxes unscoutable room\r\n    //if (roomName == 'W12N56') validHarvest = false;\r\n\r\n    //ontoegankelijke room, pathfinding issues\r\n    //if (roomName == 'W3N57') validHarvest = false;\r\n\r\n    //roadbuild pathfinder issue, weg wordt te lang\r\n    //if (roomName == 'W14N51') validHarvest = false;\r\n    //keeper lair\r\n    //if (roomName == 'W15N55') validHarvest = false;\r\n    //if (roomName == 'W14N55') validHarvest = false;\r\nreturn {validHarvest: validHarvest, validPassage: validPassage};\r\n}\r\n\r\nRoom.prototype._fhrCache = [] ;\r\nRoom.prototype.findHarvestRooms = function() {\r\n\r\n    //uit cache halen indien mogelijk\r\n    if (this._fhrCache[this.name] && Game.time - this._fhrCache[this.name].gameTime < 1000) return this._fhrCache[this.name].result\r\n\r\n    var roomDist = new Map();\r\n    roomDist.set(this.name, 0);\r\n    var depth = 0;\r\n    var result =[this.name]\r\n\r\n    while (depth < maxHarvestDistance) {\r\n        for (var [roomName, dist] of roomDist) {\r\n            if (dist == depth) {\r\n                logger.log('room.findharvestrooms', 'checking room ' + roomName + ' at distance ' + depth)\r\n                var exits:any = Game.map.describeExits(roomName)\r\n                for (var exitkey in exits) {\r\n                    var roomName:any = exits[exitkey];\r\n                    var curRoomDist = roomDist.get(roomName);\r\n                    if ((curRoomDist == undefined || curRoomDist > depth + 1) )  {\r\n                        let resultVal = this.isValidHarvestRoom(roomName, this.controller.level);\r\n                        if (resultVal.validPassage) {\r\n                            // resultaat opslaan\r\n                            logger.log('room.findharvestrooms', 'adding room ' + roomName + ' at distance ' + (depth+1))\r\n                            roomDist.set(roomName, depth + 1);\r\n                            if (resultVal.validHarvest){\r\n                                result.push(roomName);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        depth++;\r\n    }\r\n\r\n    for (let roomName of result) {\r\n        // source afstanden uitrekenen\r\n        let scoutInfo = Game.atlas.getScoutInfo(roomName);\r\n        if (scoutInfo) {\r\n            for (let sourceId in scoutInfo.sources) {\r\n                logger.log ('room.findharvestrooms', 'adding distance for source ' + sourceId)\r\n                let pathSource;\r\n                if (this.getSpawn()) {\r\n                    pathSource = this.getSpawn().pos\r\n                } else {\r\n                    pathSource = Game.atlas.getRoomCenter(this.name) // indien er (nog) geen spawn is, dan midden van de kamer nemen\r\n                }\r\n                let result = PathFinder.search(pathSource, {pos: new RoomPosition(scoutInfo.sources[sourceId].pos_x, scoutInfo.sources[sourceId].pos_y, roomName), range: 1}, {maxOps: 20000});\r\n                if (result) {\r\n                    if (scoutInfo.sources[sourceId].roomDistance == undefined) scoutInfo.sources[sourceId].roomDistance = {};\r\n                    scoutInfo.sources[sourceId].roomDistance[this.name] = result.path.length;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    logger.log('room.findharvestrooms', result)\r\n    this._fhrCache[this.name] = {result: result, gameTime: Game.time};\r\n    return result;\r\n\r\n}\r\n\r\nRoom.prototype.getInvader = function(){\r\n    var invaders = this.find(FIND_HOSTILE_CREEPS, {filter: (creep: Creep) => {\r\n        for (let ally of allies) if (creep.owner.username == ally) return false;\r\n        return true;\r\n    }});\r\n    var target = invaders[0];\r\n    var targetHealParts = 0;\r\n    for (var invader of invaders) {\r\n        var body = invader.body;\r\n        var healParts = 0;\r\n        for (var bodyPart of body) if(bodyPart.type == HEAL) healParts++;\r\n        if (healParts < targetHealParts) {\r\n            target = invader;\r\n            targetHealParts = healParts;\r\n        }\r\n    }\r\n    return target;\r\n}\r\n\r\n\r\nRoom.prototype.getStoredEnergy = function() {\r\n    let result = 0;\r\n    let capacity = 0;\r\n    if (this.storage && this.storage.isActive()) {result += this.storage.store.energy; capacity += this.storage.storeCapacity }\r\n    if (this.terminal && this.terminal.isActive()) {result += this.terminal.store.energy; capacity += this.terminal.storeCapacity }\r\n    else {\r\n        for (let container of this.getContainers()) { result += container.store.energy; capacity += container.storeCapacity }\r\n    }\r\n    return {result: result, capacity: capacity};\r\n}\r\n\r\nRoom.prototype.getContainers = function() {\r\n    return this.find(FIND_STRUCTURES, {filter: (structure: Structure) => {return structure.structureType == STRUCTURE_CONTAINER}})\r\n}\r\n\r\n\r\nRoom.prototype.autoBuild = function (){\r\n    if (this.controller == undefined || this.controller.level < 2) {\r\n        // vijandelijke structures afbreken\r\n        let structures = this.find(FIND_STRUCTURES);\r\n        for (let structure of structures) {\r\n            if (structure.owner && !structure.my ) structure.destroy();\r\n        }\r\n        return; // indien geen controller, niet builden\r\n    }\r\n    if (Game.time % 300 != 0 && this.name != '')  return; //maar 1x per 100 turn autobuilden\r\n    if (this.getSpawn() == undefined) return;\r\n    logger.log ('room.autobuild', 'autobuilding room ' + this.name )\r\n\r\n     //niet autobouwen als er nog iets te bouwen is;\r\n    if (this.find(FIND_MY_CONSTRUCTION_SITES).length > 0) return\r\n\r\n\r\n    var structures = this.find(FIND_STRUCTURES);\r\n\r\n\r\n\r\n    logger.log ('room.autobuild', 'building structures')\r\n//gebouwen maken\r\n    var structuretypes= [STRUCTURE_SPAWN, STRUCTURE_STORAGE, STRUCTURE_EXTENSION, STRUCTURE_CONTAINER, STRUCTURE_TOWER, STRUCTURE_LINK, STRUCTURE_TERMINAL];\r\n    let nonBaseContainerCount = 0;\r\n    let nonBaseLinkCount = 0;\r\n    if (this.controller.getContainer()) nonBaseContainerCount++;\r\n    if (this.controller.pos.findInRange(FIND_MY_STRUCTURES, 2,{filter: (structure: Structure) =>{return structure.structureType == STRUCTURE_LINK} }).length > 0) nonBaseLinkCount++;\r\n    for (source of this.findSources()) if (source.getContainer()) nonBaseContainerCount++;\r\n    //logger.log ('room.autobuild', 'nonbasecount container: ' + nonBaseContainerCount)\r\n\r\n\r\n    for (var i=0;i<structuretypes.length;i++) {\r\n        var countStructures = 0\r\n        for (var j=0;j<structures.length;j++) {\r\n            if (structures[j].structureType == structuretypes[i] ) {\r\n                countStructures++;\r\n                //logger.log('room.autobuild', 'building found' + structuretypes[i])\r\n            }\r\n        }\r\n\r\n        var max_default_structures = MY_CONTROLLER_STRUCTURES[structuretypes[i]];\r\n        var max_structures = max_default_structures[this.controller.level]\r\n        if (structuretypes[i] == STRUCTURE_CONTAINER) {\r\n            if (this.controller.level >= 3) max_structures = Math.min(2 + nonBaseContainerCount, max_structures);\r\n            else max_structures = 0\r\n        }\r\n        if (structuretypes[i] == STRUCTURE_LINK) max_structures= Math.min( 1 + nonBaseLinkCount, max_structures);\r\n\r\n        if (countStructures < max_structures) {\r\n            //console.log (structuretypes[i])\r\n            var pos = this.findBuildingSpot();\r\n            logger.log ('room.autobuild', 'buildingspot: ' + pos + ' ' +structuretypes[i] + ' ' + max_structures +' '+  countStructures)\r\n            this.createConstructionSite(pos,structuretypes[i]);\r\n            //roads om gebouw heen maken\r\n            this.createConstructionSite(pos.x+1,pos.y,STRUCTURE_ROAD);\r\n            this.createConstructionSite(pos.x-1,pos.y,STRUCTURE_ROAD);\r\n            this.createConstructionSite(pos.x,pos.y+1,STRUCTURE_ROAD);\r\n            this.createConstructionSite(pos.x,pos.y-1,STRUCTURE_ROAD);\r\n            break;\r\n        }\r\n    }\r\n\r\n    logger.log ('room.autobuild', 'building roads')\r\n\r\n    //infra bouwen (wegen containers)\r\n    if (this.controller.level >= 2) {\r\n        // weg naar controller bouwen, indien voldoende spawn capaciteit voor upgrader. vanaf level 3 een container, level 5 een link en level 6 een terminal)\r\n        if (this.getEnergyCapacityAvailable() >=550) this.getSpawn().buildPath(this.controller.pos, (this.controller.level>=3), (this.controller.level>=5), (this.controller.level >= 6 &&this.controller.level < 8))\r\n        for(var source of this.find(FIND_SOURCES)) {\r\n             //logger.log('room.autobuild', 'buildingpath from to: ' )\r\n             this.getSpawn().buildPath(source.pos, this.controller.level>=3);\r\n             this.controller.buildPath(source.pos,false)\r\n        }\r\n    }\r\n\r\n    //rebuild roads that may have fallen\r\n    for (let structure of this.find(FIND_MY_STRUCTURES)) {\r\n        if (structure.structureType == STRUCTURE_CONTROLLER) continue;\r\n        let pos = structure.pos;\r\n        let buildRoad = function(room:Room, x:number, y:number) {if (room.getTerrain().get(x,y) != TERRAIN_MASK_WALL) room.createConstructionSite(x, y, STRUCTURE_ROAD) }\r\n        buildRoad(this, pos.x+1,pos.y);\r\n        buildRoad(this, pos.x-1,pos.y);\r\n        buildRoad(this, pos.x,pos.y+1);\r\n        buildRoad(this, pos.x,pos.y-1);\r\n    }\r\n\r\n    //destroy structures not near main base that should be there\r\n    // currently: move the terminal within range of the base.\r\n    if (this.controller.level == 8) {\r\n        let centerPos = this.getSpawn().pos;\r\n        let structures = this.find(FIND_MY_STRUCTURES)\r\n        for (let structure of structures) {\r\n            if (structure.structureType == STRUCTURE_TERMINAL\r\n                && structure.pos.getRangeTo(centerPos) > 12\r\n                ) {\r\n                structure.destroy();\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nRoom.prototype.findBuildingSpot = function() {\r\n    //console.log('FINDBUILDINGSPOT')\r\n    var spawn = this.getSpawn();\r\n    var x = spawn.pos.x;\r\n    var y = spawn.pos.y;\r\n\r\n    var i=1;\r\n    var x;\r\n    var y;\r\n    loop:\r\n    while (i<50) {\r\n        for(x = -1 * i;x<=1*i;x++ ) {\r\n            for (y = -1 * i; y<= 1*i; y++) {\r\n                //console.log(x + ' ' +  y)\r\n                if ( (x+y) % 2 == 0 && this.validBuildingSpot(spawn.pos.x+x, spawn.pos.y+y))\r\n                    break loop;\r\n            }\r\n        }\r\n        i++;\r\n    }\r\n\r\n    if (i<50) return new RoomPosition (spawn.pos.x+x,spawn.pos.y+y, this.name);\r\n    return undefined;\r\n}\r\n\r\nRoom.prototype.validBuildingSpot = function(x: number, y: number) {\r\n    //console.log('validbuildingspot ' +x + ' '+y)\r\n    if (x<2 || x > 47 || y < 2 || y > 47) return false;\r\n    var pos = new RoomPosition(x, y, this.name)\r\n    var structures = pos.lookFor(LOOK_STRUCTURES);\r\n    var buildingsites = pos.lookFor(LOOK_CONSTRUCTION_SITES);\r\n    var sources = pos.findInRange(FIND_SOURCES,2);\r\n    var minerals = pos.findInRange(FIND_MINERALS,2);\r\n    var countStructures = 0;\r\n    for (var i=0;i<structures.length;i++) if (structures[i].structureType != STRUCTURE_ROAD) countStructures++;\r\n    if (countStructures > 0) return false;\r\n    if (buildingsites.length > 0 ) return false;\r\n    if (sources.length > 0) return false;\r\n    if (minerals.length > 0 ) return false;\r\n    if (pos.inRangeTo(this.controller.pos,2)) return false;\r\n    for (let nx=-1;nx<=1;nx++) {\r\n        for (let ny=-1;ny<=1;ny++) {\r\n            if (Math.abs(nx) + Math.abs(ny) == 2) continue; // hoek mag wel grenzen met muur.\r\n            var terrain =this.lookForAt(LOOK_TERRAIN, x+nx, y+ny);\r\n            logger.log('room.validbuildingspot', `looking at ${x+nx}, ${y+ny}`)\r\n            logger.log ('room.validbuildingspot', terrain);\r\n            if (terrain[0] == 'wall' ) return false;\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nRoom.prototype.getSpawn= function() {\r\n    return this.find(FIND_MY_STRUCTURES, {filter: (structure: Structure) => {return structure.structureType==STRUCTURE_SPAWN}})[0];\r\n}\r\n\r\n\r\n\r\nRoom.prototype.initTick = function () {\r\n    //structures initialiseren\r\n    //this.find(FIND_STRUCTURES).forEach(function(structure: Structure){ structure.initTick()});\r\n\r\n    //alle dropped energie initialiseren\r\n    this.find(FIND_DROPPED_RESOURCES).forEach(function(dropped: Resource){ dropped.reservedEnergy=0;})\r\n    this.find(FIND_TOMBSTONES).forEach(function(tombstone: Tombstone){ tombstone.reservedEnergy=0;})\r\n\r\n    //indien leeg moving average voor idle workers initialiseren.\r\n    if (this.memory.avgIdleWorkers == undefined) {\r\n        this.memory.avgIdleWorkers = [];\r\n        for(var i=0; i<300; i++) this.memory.avgIdleWorkers[i] = 0;\r\n    };\r\n    if (this.memory.avgIdleUpgraders == undefined) {\r\n        this.memory.avgIdleUpgraders = [];\r\n        for(var i=0; i<300; i++) this.memory.avgIdleUpgraders[i] = 0;\r\n    };\r\n\r\n    //this.visual.text(roomValue.get(this.name),1,1);\r\n\r\n}\r\n\r\n\r\nRoom.prototype.findSources = function () {\r\n    return this.find(FIND_SOURCES);\r\n}\r\n\r\nRoom.prototype.getLinks = function() {\r\n    return this.find(FIND_MY_STRUCTURES,{filter: (structure: Structure) => {return structure.structureType == STRUCTURE_LINK}})\r\n}\r\n\r\n//Find the container where energy can be deposited in a room\r\nRoom.prototype.findEnergyDropPoints = function(amount: number) {\r\n    if (this.storage && this.storage.isActive() && this.storage.store.energy < MIN_STORAGE_ENERGY) return [this.storage];\r\n    return this.find(FIND_STRUCTURES,{filter: (structure: Structure) => {\r\n            //logger.log('room.findenergydroppoints', JSON.stringify(structure))\r\n            if (!structure.isActive()) return false;\r\n            if (structure.structureType == STRUCTURE_CONTAINER && structure.pos.findInRange(FIND_SOURCES,1).length>0) return false;\r\n            let structureTypes:StructureConstant[] = [STRUCTURE_CONTAINER, STRUCTURE_SPAWN, STRUCTURE_STORAGE, STRUCTURE_LINK, STRUCTURE_TOWER, STRUCTURE_TERMINAL];\r\n            let freeCapacity = 0;\r\n            if (structure.store) {\r\n                freeCapacity = structure.storeCapacity - _.sum(structure.store) //- structure.reservedEnergy;\r\n            } else if (structure.energy) {\r\n                freeCapacity = structure.energyCapacity - structure.energy// - structure.reservedEnergy;\r\n            }\r\n            logger.log('room.findenergydroppoints', structureTypes.includes(structure.structureType) && amount < freeCapacity)\r\n\r\n            return structureTypes.includes(structure.structureType) && amount < freeCapacity\r\n        }\r\n    })\r\n}\r\n\r\n/*\r\nRoom.prototype.findEmptyCreeps = function() {\r\n    var creeps = this.find(FIND_MY_CREEPS, {filter: (creep: Creep) => {return creep.carry.energy == 0 || creep.memory.inQueue==true }});\r\n    return creeps;\r\n}\r\n*/\r\n\r\nRoom.prototype.checkNukes = function() {\r\n    var nukes = this.find(FIND_NUKES);\r\n    var landingtime = NUKE_LAND_TIME;\r\n    for (var nuke of nukes) if (nuke.timeToLand < landingtime) landingtime = nuke.timeToLand;\r\n    if (landingtime + 1 < SAFE_MODE_DURATION) this.controller.activateSafeMode();\r\n}\r\n\r\nRoom.prototype.getEnergyCapacityAvailable = function() {\r\n    return this.energyCapacityAvailable;\r\n    //return Math.min (this.energyCapacityAvailable, this.energyAvailable)\r\n}\r\n\r\nRoom.prototype.run = function() {\r\n    logger.log('room.run', this.name)\r\n    this.initTick();\r\n    var lastErr;\r\n\r\n    this.rememberRoom();\r\n\r\n\r\n\r\n\r\n//    if (Game.time % 10 == 0) this.calculateRoomValue();\r\n    // foutmelding triggeren\r\n    if (lastErr) throw lastErr;\r\n}\r\n\r\n\r\nRoom.prototype.visualize = function(){\r\n    for (let source of this.find(FIND_SOURCES)){\r\n        this.visual.text(Math.floor(Memory.transportLoad[source.id]), source.pos)\r\n    }\r\n}\r\n","\"use strict\"\r\n\r\nexport default class Atlas {\r\n    constructor () {}\r\n\r\n    roomCache:{[key:string]: {}} = {};\r\n\r\n    getScoutInfo(roomName:string) {\r\n        if (Memory.rooms[roomName] == undefined) Memory.rooms[roomName] = {};\r\n        //if (Memory.rooms[roomName].scoutInfo == undefined) Memory.rooms[roomName] = {}\r\n        this.roomCache[roomName] = Memory.rooms[roomName].scoutInfo;\r\n        return this.roomCache[roomName];\r\n    }\r\n\r\n    // return room coordinate numerical value\r\n    getRoomCoordinates(roomName:string){\r\n        let resultN = roomName.match('N[0-9]*')\r\n        let resultS = roomName.match('S[0-9]*')\r\n        let resultW = roomName.match('W[0-9]*')\r\n        let resultE = roomName.match('W[0-9]*')\r\n        let x = 0;\r\n        let y = 0;\r\n        if (resultN) y = y - Number (resultN.slice(1));\r\n        if (resultS) y = y + Number( resultS.slice(1));\r\n        if (resultE) x = x - Number (resultE.slice(1));\r\n        if (resultW) x = x + Number (resultW.slice(1));\r\n        return {x: x, y: y}\r\n    }\r\n\r\n    getRoomCenter(roomName:string) {\r\n        let roomCenter;\r\n        if (Memory.rooms[roomName]) roomCenter = Memory.rooms[roomName].center;\r\n        if (roomCenter == undefined) {\r\n            let x_offset = 24;\r\n            let y_offset = 24;\r\n            let x = 0;\r\n            let y = 0;\r\n            let i = 0;\r\n            loop:\r\n            while (i<50) {\r\n                for(x = -1 * i;x<=1*i;x++ ) {\r\n                    for (y = -1 * i; y<= 1*i; y++) {\r\n                        if ( Game.map.getTerrainAt(x_offset+x, y_offset+y, roomName) != 'wall')\r\n                            break loop;\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            if (Memory.rooms[roomName] == undefined) Memory.rooms[roomName] = new Object;\r\n            Memory.rooms[roomName].center = new Object;\r\n            roomCenter = Memory.rooms[roomName].center\r\n            roomCenter.x = x_offset + x;\r\n            roomCenter.y = y_offset + y;\r\n        }\r\n        try {\r\n            return new RoomPosition(roomCenter.x, roomCenter.y, roomName);\r\n        }\r\n        catch (err) {\r\n            Game.notify('GETCENTER ERROR in ' + roomName + ':' + JSON.stringify(roomCenter)  )\r\n            throw err;\r\n        }\r\n    }\r\n}\r\n","\"use strict\"\r\n//import 'terminal';\r\nimport * as logger from 'logger';\r\nimport * as consts from 'consts';\r\n\r\nconst STAT_PERIOD = 25000 // aantal ticks tussen room statistieken.\r\nconst MIN_SPAWN_CPU_BUCKET = [7500, 5000, 2500]; // cpu bucket dat 1e, 2e en 3e spawn uitgaat\r\n\r\nexport default class Base {\r\n    //constructor(room: Room) {super(room.name); }\r\n    //constructor(roomName: string) {super(roomName);}\r\n    room:Room;\r\n    controller:StructureController;\r\n    constructor(roomBase: Room) {\r\n        this.room = roomBase;\r\n        this.controller = <StructureController>roomBase.controller;\r\n    }\r\n\r\n    run (myBases: Base[], roomCreeps:Creep[]) {\r\n        logger.log('base.run', 'RUNNING BASE ' + this.room.name);\r\n        let room = this.room;\r\n        if (Game.time % STAT_PERIOD == 0) {\r\n            if (room.memory.energyHistory == undefined) room.memory.energyHistory = [];\r\n            let energyHistory = room.memory.energyHistory\r\n            energyHistory.unshift(room.memory.curEnergyStat);\r\n            if (energyHistory.length > consts.ENERGY_HISTORY_LENGTH ) energyHistory.pop();\r\n            room.memory.curEnergyStat = 0;\r\n        }\r\n\r\n\r\n        let lastErr;\r\n\r\n        //creeps runnen. in eerste instantie vanuit het midden.\r\n        if (roomCreeps) for (let creep of roomCreeps) {\r\n            try {\r\n                creep.run(); //creep.hasRun = false });\r\n            }\r\n            catch (err) {\r\n                console.log ('error while running creep ' + creep);\r\n                if (err) console.log (err.stack)\r\n                lastErr = err;\r\n            }\r\n        };\r\n\r\n        //towers runnen\r\n        var towers = this.room.find(FIND_MY_STRUCTURES, {filter: (structure: Structure) => {return (structure.structureType == STRUCTURE_TOWER);}})\r\n        for (let tower of towers) {\r\n            try {\r\n                tower.run()\r\n            }\r\n            catch(err){\r\n                console.log ('Error while running tower ' + tower);\r\n                console.log (err.stack)\r\n                lastErr = err;\r\n            }\r\n        };\r\n\r\n        // avg idle workers bijwerken en retourneren\r\n        let mainSpawn = this.room.getSpawn();\r\n        let runningAvgIdleWorkers\r\n        if (mainSpawn ) runningAvgIdleWorkers =  this.room.getSpawn().calculateAvgWorkers(roomCreeps)\r\n\r\n        //indien geen spawn, room opgeven\r\n        if (this.controller && this.controller.my && !mainSpawn && this.room.name != Memory.colRoom){\r\n            console.log ('WARNING: NO SPAWN IN ROOM: ' + this.room.name);\r\n            this.controller.unclaim();\r\n        }\r\n\r\n        //spawns runnen\r\n        if (this.controller && this.controller.my && Game.cpu.bucket >= MIN_SPAWN_CPU_BUCKET[2] ){\r\n            logger.log('base.run', 'trying spawns');\r\n            var spawns = this.room.find(FIND_MY_SPAWNS, {filter: (o:Structure) =>{return o.isActive()} });\r\n            logger.log('base.run', spawns);\r\n            if (spawns.length > 0) {\r\n                let hasRun = false;\r\n                for(let i=0; i< spawns.length && !hasRun; i++){\r\n                    if (!spawns[i].spawning && Game.cpu.bucket >= MIN_SPAWN_CPU_BUCKET[2-i]) {\r\n                        try {\r\n                            logger.log('base.run', 'starting spawn ' + spawns[i].id);\r\n                            spawns[i].run(roomCreeps, runningAvgIdleWorkers);\r\n                            hasRun = true;\r\n                        }\r\n                        catch(err) {\r\n                            console.log ('Error while running spawn ' + spawns[i] );\r\n                            console.log (err.stack)\r\n                            lastErr = err;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let links = this.room.getLinks();\r\n        for (let link of links) {\r\n            try {\r\n                link.run();\r\n            }\r\n            catch(err) {\r\n                console.log ('Error while running link ' + link );\r\n                console.log (err.stack)\r\n                lastErr = err;\r\n            }\r\n        }\r\n\r\n        this.room.autoBuild();\r\n\r\n        this.room.checkNukes();\r\n\r\n        this.room.visualize();\r\n\r\n\r\n        let terminal = room.find(FIND_MY_STRUCTURES, {filter: (o:Structure) => {return o.structureType == STRUCTURE_TERMINAL}})[0];\r\n        try {\r\n            if (terminal) terminal.run(myBases);\r\n        }\r\n        catch(err) {\r\n            console.log ('Error while running terminal ' + terminal );\r\n            console.log (err.stack)\r\n            lastErr = err;\r\n        }\r\n\r\n       if (lastErr) throw lastErr;\r\n    }\r\n}\r\n\r\n/*\r\nfunction myBase() {};\r\n\r\nmyBase.prototype = Object.create(Room.prototype);\r\n\r\nmyBase.prototype.run = function (myRooms: Room[]) {\r\n    let terminal = this.find(FIND_MY_STRUCTURES, {filter: (o:Structure) => {return o.structureType == STRUCTURE_TERMINAL}})[0];\r\n    try {\r\n        if (terminal) terminal.run(myRooms);\r\n    }\r\n    catch(err) {\r\n        console.log ('Error while running terminal ' + terminal );\r\n        console.log (err.stack)\r\n    }\r\n}\r\n\r\nexport {myBase};\r\n*/\r\n","import { ErrorMapper } from \"utils/ErrorMapper\";\r\nimport * as profiler from 'screeps-profiler';\r\nprofiler.enable();\r\n//import * as sources from 'source';\r\nimport 'room';\r\nimport 'terminal';\r\n//import 'beta/room'\r\nimport * as logger from 'logger';\r\nimport * as consts from 'consts';\r\nimport Atlas from 'atlas';\r\n\r\nimport Base from 'base';\r\n//declare var Memory: Memory;\r\n\r\n\r\nconst cpuWindow = 300;\r\n\r\nconst OWNER_ME = 'Jerdaz';\r\nconst BETA_ROOMS = ['W7S48'];\r\nconst FULLROOMDIVIDER = 2;\r\nconst FLAG_CLEAN_TIME = 10000\r\n\r\nlet atlas = new Atlas();\r\n\r\nfunction initGlobal() {\r\n    if (!Memory.transportLoad) Memory.transportLoad = {};\r\n    RawMemory.setActiveSegments([0,1,2,3,4,5,6,7,8,9]);\r\n}\r\ninitGlobal();\r\n\r\n// add debug call code here\r\nfunction debug() {\r\n    //removeAllConstructionSites();\r\n    //removeAllFlags();\r\n    //Game.rooms['W12N52'].getSpawn().buildPath(new RoomPosition (34, 16, 'W14N51'), true);\r\n    //console.log(Game.rooms['W16N57'].findHarvestRooms())\r\n\r\n}\r\n\r\nfunction myMain () {\r\n    if (!Game.cpu.bucket) Game.cpu.bucket = 10000;\r\n    //Memory = JSON.parse(RawMemory.get());\r\n    let rooms = Memory.rooms;\r\n    let startCPU = Game.cpu.getUsed();\r\n    if (!Memory.avgCpuUsed) Memory.avgCpuUsed = 0;\r\n    Memory.avgCpuUsed = Memory.avgCpuUsed / cpuWindow * (cpuWindow - 1) + Memory.lastCpuUsed / cpuWindow;\r\n    let cSites = _.size(Game.constructionSites)\r\n    console.log ('===== TICK ' + Game.time + ' (AVGCPU: ' + Math.round(Memory.avgCpuUsed/Game.cpu.limit*1000)/10 + '% CPUBUCKET: '+ Game.cpu.bucket + ') CSITE: ' + cSites +  '  MEMCPU: ' + startCPU + '=====' );\r\n    if (Game.time % 1500 == 0 && cSites >= MAX_CONSTRUCTION_SITES) removeAllConstructionSites(); // indien te veel onbeheerde construction sites alle verwijderen.\r\n\r\n    Game.atlas = atlas;\r\n    //notificeren als er een CPU probleem is\r\n/*    if (Game.cpu.bucket < 7500) {\r\n        Game.notify('Warning CPU bucket low: ' + Game.cpu.bucket, 60);\r\n        //if (!Game.profiler.isProfiling()) Game.profiler.email(1000);\r\n    }*/\r\n\r\n\r\n\r\n    //debug\r\n    debug();\r\n\r\n\r\n    for(let name in Memory.creeps) {\r\n        if(!Game.creeps[name]) {\r\n            // indien assigned aan room, deleten\r\n            for (let roomName in Memory.rooms) if (Memory.rooms[roomName].workerAssignedName == name) delete Memory.rooms[roomName].workerAssignedName;\r\n            delete Memory.creeps[name];\r\n            //console.log('Clearing non-existing creep memory:', name);\r\n        }\r\n    }\r\n\r\n    //object met per room een array van creeps\r\n    let roomCreeps:any = {};\r\n    for (let creepName in Game.creeps) {\r\n        let creep = Game.creeps[creepName];\r\n        let roomName = creep.memory.HomeRoomName;\r\n        if (!roomCreeps[roomName]) roomCreeps[roomName] = [];\r\n        roomCreeps[roomName].push(creep)\r\n    }\r\n\r\n    //rooms doorlopen en runnen\r\n    let lastErr;\r\n    let myBases = [];\r\n    let myLeveledRooms = 0;\r\n    for (let roomName in Game.rooms) {\r\n        let room = Game.rooms[roomName];\r\n        if (room.controller && room.controller.my) {\r\n            if (room.controller.level > 1) myLeveledRooms++;\r\n            myBases.push(new Base(room));\r\n        }\r\n        try {\r\n            Game.rooms[roomName].run();\r\n        } catch(err) {\r\n            console.log ('Error while running room ' + roomName );\r\n            console.log (err.stack)\r\n            lastErr = err;\r\n        }\r\n}\r\n\r\n\r\n    // basissen runnen\r\n    for (let base of myBases) {\r\n        try {\r\n            base.run(myBases, roomCreeps[base.room.name]);\r\n        }\r\n        catch(err) {\r\n            console.log ('Error while running base ' + base );\r\n            console.log (err.stack)\r\n            lastErr = err;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n    // terminals runnen\r\n    for (let room of myRooms) {\r\n        let terminal = room.find(FIND_MY_STRUCTURES, {filter: (o:Structure) => {return o.structureType == STRUCTURE_TERMINAL}})[0];\r\n        try {\r\n            if (terminal) terminal.run(myRooms);\r\n        }\r\n        catch(err) {\r\n            console.log ('Error while running terminal ' + terminal );\r\n            console.log (err.stack)\r\n            lastErr = err;\r\n        }\r\n    }*/\r\n\r\n    // basissen unclaimen\r\n    if (Game.time % 10000 == 0 && myBases.length == Game.gcl.level) unclaimBases(myBases);\r\n\r\n\r\n    //clean memory (do it after unclaiming bases to remove its source distance)\r\n    if (Game.time % 10000 == 1) {\r\n        cleanMemory(myBases);\r\n        // LAST RESORTif memory is too large, purge it completely\r\n        if (RawMemory.get().length > 2000 * 1024) {\r\n            Memory.rooms = {};\r\n            Game.notify('WARNING: Deleting room memory because memory is full')\r\n        }\r\n    }\r\n    // clean flags\r\n    if (Game.time % 10000 == 1543 ) cleanFlags();\r\n\r\n    // nieuwe colonisation target vaststellen\r\n    if (myBases.length < Game.gcl.level) colonize(myBases);\r\n    //DEBUG: if (Memory.debugcolonize) colonize(myBases);\r\n\r\n    //stats verzamelen energie per basis\r\n    saveEnergyStats();\r\n\r\n\r\n    if (lastErr) throw lastErr;\r\n    Memory.lastCpuUsed = Game.cpu.getUsed();\r\n}\r\n\r\nfunction unclaimBases(myBases:Base[]) {\r\n    console.log('unclaimbases')\r\n    logger.log('unclaimbases', 'unclaiming bases');\r\n    let fullBases = _.filter(myBases, o => {return o.room.controller && o.room.controller.level == 8});\r\n    let upgradeBaseCount = _.filter(myBases, o => {return o.room.controller && o.room.controller.level >= 6 && o.room.controller.level < 8}).length;\r\n    if (fullBases.length / upgradeBaseCount > FULLROOMDIVIDER) {\r\n        logger.log('unclaimbases', 'too many level 8 bases, finding the least productive one to unclaim');\r\n        // controleren of basis al lang genoeg output levert (min 14 dagen)\r\n        fullBases = _.filter(fullBases, o => {return o.room.memory.energyHistory.length >= consts.ENERGY_HISTORY_LENGTH})\r\n        if (fullBases.length>0) {\r\n            logger.log('unclaimbases', 'found one or more bases. sorting them for productivity');\r\n            fullBases.sort( (a,b) => {\r\n                let aVal = a.room.memory.energyHistory.reduce((as:number,bs:number) => as+bs);\r\n                let bVal = b.room.memory.energyHistory.reduce((as:number,bs:number) => as+bs);\r\n                if (a < b) return -1;\r\n                if (a > b) return 1;\r\n                return 0;\r\n            })\r\n\r\n            console.log('UNCLAIMING BASE ' + fullBases[0].room.name);\r\n            fullBases[0].controller.unclaim();\r\n        }\r\n    }\r\n}\r\n\r\nfunction cleanFlags() {\r\n    for (let flagName in Game.flags) {\r\n\r\n        let result = flagName.match('[0-9]*');\r\n        if (result) {\r\n            let placeTime = Number(result);\r\n            if (Game.time - placeTime > FLAG_CLEAN_TIME) Game.flags[flagName].remove()\r\n        } else {\r\n            Game.flags[flagName].remove();\r\n        }\r\n    }\r\n}\r\n\r\nfunction cleanMemory(myBases:Base[]) {\r\n    //  clean source distances from rooms\r\n    logger.log('cleanmemory', 'cleaning memory')\r\n    for (let roomName in Memory.rooms) {\r\n        let scoutInfo = Game.atlas.getScoutInfo(roomName);\r\n        if (scoutInfo && scoutInfo.sources) {\r\n            logger.log('cleanmemory', 'checking room ' + roomName)\r\n            for (let sourceID in scoutInfo.sources) {\r\n                logger.log('cleanmemory', 'checking source ' + sourceID)\r\n                let sourceMemory = scoutInfo.sources[sourceID];\r\n                for (let baseRoomName in sourceMemory.roomDistance) {\r\n                    if (_.filter(myBases, o => {return o.room.name == baseRoomName}).length == 0) {\r\n                        logger.log('cleanmemory', 'cleaning base ' + baseRoomName)\r\n                        delete sourceMemory.roomDistance[baseRoomName];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nfunction saveEnergyStats() {\r\n    let maxProcessTime = 0;\r\n    for (let transaction of Game.market.incomingTransactions) {\r\n        if (transaction.time > maxProcessTime) maxProcessTime = transaction.time;\r\n        if (transaction.time <= Memory.lastEnergyStat) {\r\n            Memory.lastEnergyStat = maxProcessTime;\r\n            break;\r\n        }\r\n        let room = Game.rooms[transaction.from]\r\n        if (room && room.controller && room.controller.my && transaction.resourceType == RESOURCE_ENERGY) {\r\n            let roomMemory = room.memory\r\n            if (!roomMemory.curEnergyStat) roomMemory.curEnergyStat = 0;\r\n            roomMemory.curEnergyStat += transaction.amount;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nfunction colonize(myBases:Base[]) {\r\n    logger.log('colonize', 'Checking for colonisation')\r\n    if (Memory.colRoomAge == undefined) Memory.colRoomAge = 0;\r\n    if (Memory.colRoom == undefined || Game.time - Memory.colRoomAge > consts.COLONISATION_TARGET_RECYCLE_TIME) {\r\n\r\n        let colOffsetRoom = myBases[Math.floor((Math.random() * myBases.length))]\r\n        let maxDistance = Math.ceil (Math.random() * consts.COLONISATION_DIST)\r\n        let targetRoomName = colOffsetRoom.room.name\r\n        logger.log('colonize', 'Starting colonisation from ' + targetRoomName);\r\n        let distance = -1;\r\n        let scoutInfo = Game.atlas.getScoutInfo(targetRoomName)\r\n        logger.log('colonize', `maxdistance: ${maxDistance}`)\r\n        while (targetRoomName && (\r\n            distance <= maxDistance\r\n            ||\r\n            !( scoutInfo !== undefined\r\n            && scoutInfo.hasController\r\n            && scoutInfo.ownerUserName == undefined\r\n            && !scoutInfo.hasEnemyCreeps\r\n            && Game.map.isRoomAvailable(targetRoomName)\r\n            ))\r\n        ) {\r\n            let exits:any = Game.map.describeExits(targetRoomName);\r\n            var keys = Object.keys (exits);\r\n            let exitKey = keys[Math.floor(keys.length * Math.random())];\r\n            let exitRoomName = exits[exitKey];\r\n            targetRoomName = exitRoomName;\r\n            logger.log ('colonize', 'roomname selecation: ' + targetRoomName)\r\n            let result = Game.map.findRoute(colOffsetRoom.room.name, targetRoomName);\r\n            if (result instanceof Array) distance = result.length\r\n            else distance = -1;\r\n\r\n            logger.log ('colonize', exits)\r\n            logger.log ('colonize', exitKey)\r\n            logger.log ('colonize', exitRoomName)\r\n            logger.log ('colonize', distance)\r\n            scoutInfo = Game.atlas.getScoutInfo(targetRoomName);\r\n            if (distance > consts.COLONISATION_DIST ) targetRoomName = '';  // if not finding anything try again next turn\r\n        }\r\n        let spawnX ;\r\n        let spawnY ;\r\n        let validSpot;\r\n        if (targetRoomName) {\r\n            do {\r\n                validSpot = true;\r\n                spawnX = _.random(6, 44);\r\n                spawnY = _.random(6, 44);\r\n                for (let nx=-3;nx<=3;nx++) {\r\n                    for (let ny=-3;ny<=3;ny++) {\r\n                        var terrain = Game.map.getTerrainAt(spawnX + nx, spawnY + ny, targetRoomName);\r\n                        if (terrain == 'wall' )  validSpot = false;\r\n                    }\r\n                }\r\n            }\r\n            while (validSpot == false )\r\n        }\r\n        Memory.colRoom = targetRoomName;\r\n        Memory.colX = spawnX;\r\n        Memory.colY = spawnY;\r\n        if (targetRoomName) Memory.colRoomAge = Game.time;\r\n        else Memory.colRoomAge = 0;\r\n    }\r\n}\r\n\r\n\r\nfunction removeAllFlags() {\r\n    for (let flagName in Game.flags) {\r\n        Game.flags[flagName].remove();\r\n    }\r\n}\r\n\r\n\r\nfunction removeAllConstructionSites() {\r\n    for (let constructionSiteId in Game.constructionSites) {\r\n        let cSite = Game.constructionSites[constructionSiteId];\r\n        if (cSite.progress == 0 ) cSite.remove();\r\n    }\r\n}\r\n\r\n\r\n// When compiling TS to JS and bundling with rollup, the line numbers and file names in error messages change\r\n// This utility uses source maps to get the line numbers and file names of the original, TS source code\r\nexport const loop = ErrorMapper.wrapLoop(() => {\r\n    profiler.wrap(function() {myMain()});\r\n});\r\n\r\n"],"names":["ArraySet","require$$0","quickSort","require$$1","base64VLQ","SourceMapConsumer","logger.log","Traveler","matrix_AvoidKeeper","DEFAULT_STUCK_VALUE","REPORT_CPU_THRESHOLD","DEFAULT_MAXOPS","STATE_PREV_X","STATE_PREV_Y","STATE_CPU","STATE_STUCK","STATE_INCOMPLETE","STATE_DEST_X","STATE_DEST_Y","STATE_DEST_ROOMNAME","keeperMatrix_cache","log_enabled","log_names","logger","myFlags","COLONISATION_DIST","COLONISATION_TARGET_RECYCLE_TIME","MY_USERNAME","USERNAME_SOURCEKEEPER","ENERGY_HISTORY_LENGTH","consts","consts.USERNAME_SOURCEKEEPER","consts.ENERGY_HISTORY_LENGTH","profiler.enable","consts.COLONISATION_TARGET_RECYCLE_TIME","consts.COLONISATION_DIST","loop","profiler.wrap"],"mappings":"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"};